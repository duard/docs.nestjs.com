{"version":3,"sources":["webpack:///./node_modules/rxjs/_esm5/index.js","webpack:///./node_modules/rxjs/_esm5/internal/AsyncSubject.js","webpack:///./node_modules/rxjs/_esm5/internal/BehaviorSubject.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Notification.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/ReplaySubject.js","webpack:///./node_modules/rxjs/_esm5/internal/Scheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/Subject.js","webpack:///./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/SubscribeOnObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/bindCallback.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/combineLatest.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/concat.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/defer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/forkJoin.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/from.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromArray.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEvent.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/generate.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/iif.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/interval.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/merge.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/never.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/of.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/pairs.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/race.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/range.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/scalar.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/throwError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/timer.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/using.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/zip.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/audit.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/auditTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/buffer.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferCount.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferToggle.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/bufferWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/catchError.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/combineAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/combineLatest.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concat.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/concatMapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/count.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/debounce.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/debounceTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/delay.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/delayWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/dematerialize.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/distinct.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/distinctUntilChanged.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/distinctUntilKeyChanged.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/elementAt.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/endWith.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/every.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/exhaust.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/exhaustMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/expand.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/filter.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/finalize.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/find.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/findIndex.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/first.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/groupBy.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/ignoreElements.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/isEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/last.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/materialize.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/max.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/merge.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeScan.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/min.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/multicast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/observeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/onErrorResumeNext.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/pairwise.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/partition.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/pluck.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publish.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publishBehavior.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publishLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/publishReplay.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/race.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/reduce.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/refCount.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/repeat.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/repeatWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/retry.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/retryWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/sample.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/sampleTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/scan.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/sequenceEqual.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/share.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/shareReplay.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/single.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skip.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skipLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skipUntil.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/skipWhile.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/startWith.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/subscribeOn.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchAll.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchMap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/switchMapTo.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/take.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeUntil.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeWhile.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/tap.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throttle.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throttleTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timeInterval.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timeout.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timeoutWith.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/timestamp.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/toArray.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/window.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowCount.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowTime.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowToggle.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/windowWhen.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/withLatestFrom.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/zip.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/zipAll.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/Action.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/asap.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/async.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduler/queue.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/EmptyError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/Immediate.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/TimeoutError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/errorObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/util/identity.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isDate.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isNumeric.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isScheduler.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/not.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/tryCatch.js","webpack:///./node_modules/rxjs/_esm5/operators/index.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/directives/match-height.directive.ts","webpack:///./src/app/constants.ts","webpack:///./src/app/homepage/footer/footer.component.html","webpack:///./src/app/homepage/footer/footer.component.scss","webpack:///./src/app/homepage/footer/footer.component.ts","webpack:///./src/app/homepage/header/header.component.html","webpack:///./src/app/homepage/header/header.component.scss","webpack:///./src/app/homepage/header/header.component.ts","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/homepage/homepage.component.scss","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/homepage/menu/menu-item/menu-item.component.html","webpack:///./src/app/homepage/menu/menu-item/menu-item.component.scss","webpack:///./src/app/homepage/menu/menu-item/menu-item.component.ts","webpack:///./src/app/homepage/menu/menu.component.html","webpack:///./src/app/homepage/menu/menu.component.scss","webpack:///./src/app/homepage/menu/menu.component.ts","webpack:///./src/app/homepage/pages/advanced/hierarchical-injector/hierarchical-injector.component.html","webpack:///./src/app/homepage/pages/advanced/hierarchical-injector/hierarchical-injector.component.ts","webpack:///./src/app/homepage/pages/advanced/mixin-components/mixin-components.component.html","webpack:///./src/app/homepage/pages/advanced/mixin-components/mixin-components.component.ts","webpack:///./src/app/homepage/pages/cli/cli.module.ts","webpack:///./src/app/homepage/pages/cli/overview/overview.component.html","webpack:///./src/app/homepage/pages/cli/overview/overview.component.ts","webpack:///./src/app/homepage/pages/cli/usages/usages.component.html","webpack:///./src/app/homepage/pages/cli/usages/usages.component.ts","webpack:///./src/app/homepage/pages/components/components.component.html","webpack:///./src/app/homepage/pages/components/components.component.ts","webpack:///./src/app/homepage/pages/controllers/controllers.component.html","webpack:///./src/app/homepage/pages/controllers/controllers.component.ts","webpack:///./src/app/homepage/pages/custom-decorators/custom-decorators.component.html","webpack:///./src/app/homepage/pages/custom-decorators/custom-decorators.component.ts","webpack:///./src/app/homepage/pages/discover/who-uses/who-uses.component.html","webpack:///./src/app/homepage/pages/discover/who-uses/who-uses.component.scss","webpack:///./src/app/homepage/pages/discover/who-uses/who-uses.component.ts","webpack:///./src/app/homepage/pages/exception-filters/exception-filters.component.html","webpack:///./src/app/homepage/pages/exception-filters/exception-filters.component.ts","webpack:///./src/app/homepage/pages/execution-context/execution-context.component.html","webpack:///./src/app/homepage/pages/execution-context/execution-context.component.ts","webpack:///./src/app/homepage/pages/faq/express-instance/express-instance.component.html","webpack:///./src/app/homepage/pages/faq/express-instance/express-instance.component.ts","webpack:///./src/app/homepage/pages/faq/global-prefix/global-prefix.component.html","webpack:///./src/app/homepage/pages/faq/global-prefix/global-prefix.component.ts","webpack:///./src/app/homepage/pages/faq/hybrid-application/hybrid-application.component.html","webpack:///./src/app/homepage/pages/faq/hybrid-application/hybrid-application.component.ts","webpack:///./src/app/homepage/pages/faq/lifecycle-events/lifecycle-events.component.html","webpack:///./src/app/homepage/pages/faq/lifecycle-events/lifecycle-events.component.ts","webpack:///./src/app/homepage/pages/faq/multiple-servers/multiple-servers.component.html","webpack:///./src/app/homepage/pages/faq/multiple-servers/multiple-servers.component.ts","webpack:///./src/app/homepage/pages/first-steps/first-steps.component.html","webpack:///./src/app/homepage/pages/first-steps/first-steps.component.ts","webpack:///./src/app/homepage/pages/fundamentals/async-components/async-components.component.html","webpack:///./src/app/homepage/pages/fundamentals/async-components/async-components.component.ts","webpack:///./src/app/homepage/pages/fundamentals/circular-dependency/circular-dependency.component.html","webpack:///./src/app/homepage/pages/fundamentals/circular-dependency/circular-dependency.component.ts","webpack:///./src/app/homepage/pages/fundamentals/dependency-injection/dependency-injection.component.html","webpack:///./src/app/homepage/pages/fundamentals/dependency-injection/dependency-injection.component.ts","webpack:///./src/app/homepage/pages/fundamentals/e2e-testing/e2e-testing.component.html","webpack:///./src/app/homepage/pages/fundamentals/e2e-testing/e2e-testing.component.ts","webpack:///./src/app/homepage/pages/fundamentals/platform-agnosticism/platform-agnosticism.component.html","webpack:///./src/app/homepage/pages/fundamentals/platform-agnosticism/platform-agnosticism.component.scss","webpack:///./src/app/homepage/pages/fundamentals/platform-agnosticism/platform-agnosticism.component.ts","webpack:///./src/app/homepage/pages/fundamentals/unit-testing/unit-testing.component.html","webpack:///./src/app/homepage/pages/fundamentals/unit-testing/unit-testing.component.ts","webpack:///./src/app/homepage/pages/graphql/guards-interceptors/guards-interceptors.component.html","webpack:///./src/app/homepage/pages/graphql/guards-interceptors/guards-interceptors.component.ts","webpack:///./src/app/homepage/pages/graphql/ide/ide.component.html","webpack:///./src/app/homepage/pages/graphql/ide/ide.component.ts","webpack:///./src/app/homepage/pages/graphql/mutations/mutations.component.html","webpack:///./src/app/homepage/pages/graphql/mutations/mutations.component.ts","webpack:///./src/app/homepage/pages/graphql/quick-start/quick-start.component.html","webpack:///./src/app/homepage/pages/graphql/quick-start/quick-start.component.ts","webpack:///./src/app/homepage/pages/graphql/resolvers-map/resolvers-map.component.html","webpack:///./src/app/homepage/pages/graphql/resolvers-map/resolvers-map.component.ts","webpack:///./src/app/homepage/pages/graphql/scalars/scalars.component.html","webpack:///./src/app/homepage/pages/graphql/scalars/scalars.component.ts","webpack:///./src/app/homepage/pages/graphql/schema-stitching/schema-stitching.component.html","webpack:///./src/app/homepage/pages/graphql/schema-stitching/schema-stitching.component.ts","webpack:///./src/app/homepage/pages/graphql/subscriptions/subscriptions.component.html","webpack:///./src/app/homepage/pages/graphql/subscriptions/subscriptions.component.ts","webpack:///./src/app/homepage/pages/guards/guards.component.html","webpack:///./src/app/homepage/pages/guards/guards.component.ts","webpack:///./src/app/homepage/pages/interceptors/interceptors.component.html","webpack:///./src/app/homepage/pages/interceptors/interceptors.component.ts","webpack:///./src/app/homepage/pages/introduction/introduction.component.html","webpack:///./src/app/homepage/pages/introduction/introduction.component.ts","webpack:///./src/app/homepage/pages/microservices/basics/basics.component.html","webpack:///./src/app/homepage/pages/microservices/basics/basics.component.ts","webpack:///./src/app/homepage/pages/microservices/custom-transport/custom-transport.component.html","webpack:///./src/app/homepage/pages/microservices/custom-transport/custom-transport.component.ts","webpack:///./src/app/homepage/pages/microservices/exception-filters/exception-filters.component.html","webpack:///./src/app/homepage/pages/microservices/exception-filters/exception-filters.component.ts","webpack:///./src/app/homepage/pages/microservices/grpc/grpc.component.html","webpack:///./src/app/homepage/pages/microservices/grpc/grpc.component.ts","webpack:///./src/app/homepage/pages/microservices/guards/guards.component.html","webpack:///./src/app/homepage/pages/microservices/guards/guards.component.ts","webpack:///./src/app/homepage/pages/microservices/interceptors/interceptors.component.html","webpack:///./src/app/homepage/pages/microservices/interceptors/interceptors.component.ts","webpack:///./src/app/homepage/pages/microservices/mqtt/mqtt.component.html","webpack:///./src/app/homepage/pages/microservices/mqtt/mqtt.component.ts","webpack:///./src/app/homepage/pages/microservices/nats/nats.component.html","webpack:///./src/app/homepage/pages/microservices/nats/nats.component.ts","webpack:///./src/app/homepage/pages/microservices/pipes/pipes.component.html","webpack:///./src/app/homepage/pages/microservices/pipes/pipes.component.ts","webpack:///./src/app/homepage/pages/microservices/rabbitmq/rabbitmq.component.html","webpack:///./src/app/homepage/pages/microservices/rabbitmq/rabbitmq.component.ts","webpack:///./src/app/homepage/pages/microservices/redis/redis.component.html","webpack:///./src/app/homepage/pages/microservices/redis/redis.component.ts","webpack:///./src/app/homepage/pages/middlewares/middlewares.component.html","webpack:///./src/app/homepage/pages/middlewares/middlewares.component.ts","webpack:///./src/app/homepage/pages/migration/migration.component.html","webpack:///./src/app/homepage/pages/migration/migration.component.ts","webpack:///./src/app/homepage/pages/modules/modules.component.html","webpack:///./src/app/homepage/pages/modules/modules.component.ts","webpack:///./src/app/homepage/pages/page/page.component.ts","webpack:///./src/app/homepage/pages/pipes/pipes.component.html","webpack:///./src/app/homepage/pages/pipes/pipes.component.ts","webpack:///./src/app/homepage/pages/recipes/cqrs/cqrs.component.html","webpack:///./src/app/homepage/pages/recipes/cqrs/cqrs.component.ts","webpack:///./src/app/homepage/pages/recipes/mockgoose/mockgoose.component.html","webpack:///./src/app/homepage/pages/recipes/mockgoose/mockgoose.component.ts","webpack:///./src/app/homepage/pages/recipes/mongodb/mongodb.component.html","webpack:///./src/app/homepage/pages/recipes/mongodb/mongodb.component.ts","webpack:///./src/app/homepage/pages/recipes/passport/passport.component.html","webpack:///./src/app/homepage/pages/recipes/passport/passport.component.ts","webpack:///./src/app/homepage/pages/recipes/prisma/prisma.component.html","webpack:///./src/app/homepage/pages/recipes/prisma/prisma.component.ts","webpack:///./src/app/homepage/pages/recipes/sql-sequelize/sql-sequelize.component.html","webpack:///./src/app/homepage/pages/recipes/sql-sequelize/sql-sequelize.component.ts","webpack:///./src/app/homepage/pages/recipes/sql-typeorm/sql-typeorm.component.html","webpack:///./src/app/homepage/pages/recipes/sql-typeorm/sql-typeorm.component.ts","webpack:///./src/app/homepage/pages/recipes/swagger/swagger.component.html","webpack:///./src/app/homepage/pages/recipes/swagger/swagger.component.ts","webpack:///./src/app/homepage/pages/support/support.component.html","webpack:///./src/app/homepage/pages/support/support.component.ts","webpack:///./src/app/homepage/pages/techniques/authentication/authentication.component.html","webpack:///./src/app/homepage/pages/techniques/authentication/authentication.component.ts","webpack:///./src/app/homepage/pages/techniques/caching/caching.component.html","webpack:///./src/app/homepage/pages/techniques/caching/caching.component.ts","webpack:///./src/app/homepage/pages/techniques/compression/compression.component.html","webpack:///./src/app/homepage/pages/techniques/compression/compression.component.ts","webpack:///./src/app/homepage/pages/techniques/configuration/configuration.component.html","webpack:///./src/app/homepage/pages/techniques/configuration/configuration.component.ts","webpack:///./src/app/homepage/pages/techniques/file-upload/file-upload.component.html","webpack:///./src/app/homepage/pages/techniques/file-upload/file-upload.component.ts","webpack:///./src/app/homepage/pages/techniques/hot-reload/hot-reload.component.html","webpack:///./src/app/homepage/pages/techniques/hot-reload/hot-reload.component.ts","webpack:///./src/app/homepage/pages/techniques/http-module/http-module.component.html","webpack:///./src/app/homepage/pages/techniques/http-module/http-module.component.ts","webpack:///./src/app/homepage/pages/techniques/logger/logger.component.html","webpack:///./src/app/homepage/pages/techniques/logger/logger.component.ts","webpack:///./src/app/homepage/pages/techniques/mongo/mongo.component.html","webpack:///./src/app/homepage/pages/techniques/mongo/mongo.component.ts","webpack:///./src/app/homepage/pages/techniques/mvc/mvc.component.html","webpack:///./src/app/homepage/pages/techniques/mvc/mvc.component.ts","webpack:///./src/app/homepage/pages/techniques/performance/performance.component.html","webpack:///./src/app/homepage/pages/techniques/performance/performance.component.ts","webpack:///./src/app/homepage/pages/techniques/security/security.component.html","webpack:///./src/app/homepage/pages/techniques/security/security.component.ts","webpack:///./src/app/homepage/pages/techniques/serialization/serialization.component.html","webpack:///./src/app/homepage/pages/techniques/serialization/serialization.component.ts","webpack:///./src/app/homepage/pages/techniques/sql/sql.component.html","webpack:///./src/app/homepage/pages/techniques/sql/sql.component.ts","webpack:///./src/app/homepage/pages/techniques/validation/validation.component.html","webpack:///./src/app/homepage/pages/techniques/validation/validation.component.ts","webpack:///./src/app/homepage/pages/websockets/adapter/adapter.component.html","webpack:///./src/app/homepage/pages/websockets/adapter/adapter.component.ts","webpack:///./src/app/homepage/pages/websockets/exception-filters/exception-filters.component.html","webpack:///./src/app/homepage/pages/websockets/exception-filters/exception-filters.component.ts","webpack:///./src/app/homepage/pages/websockets/gateways/gateways.component.html","webpack:///./src/app/homepage/pages/websockets/gateways/gateways.component.ts","webpack:///./src/app/homepage/pages/websockets/guards/guards.component.html","webpack:///./src/app/homepage/pages/websockets/guards/guards.component.ts","webpack:///./src/app/homepage/pages/websockets/interceptors/interceptors.component.html","webpack:///./src/app/homepage/pages/websockets/interceptors/interceptors.component.ts","webpack:///./src/app/homepage/pages/websockets/pipes/pipes.component.html","webpack:///./src/app/homepage/pages/websockets/pipes/pipes.component.ts","webpack:///./src/app/homepage/toc/toc.component.html","webpack:///./src/app/homepage/toc/toc.component.scss","webpack:///./src/app/homepage/toc/toc.component.ts","webpack:///./src/app/shared/components/tabs/tabs.component.html","webpack:///./src/app/shared/components/tabs/tabs.component.scss","webpack:///./src/app/shared/components/tabs/tabs.component.ts","webpack:///./src/app/shared/pipes/extension.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AACqB;AACW;AACJ;AACP;AACH;AACQ;AACF;AACD;AACS;AACE;AACA;AACkB;AACN;AAC1B;AACG;AACF;AACE;AACR;AACA;AACI;AACI;AACW;AACb;AACa;AACJ;AACP;AACA;AACI;AACH;AACP;AACD;AACA;AACG;AACJ;AACK;AACO;AACR;AACL;AACK;AACH;AACA;AACH;AACe;AACZ;AACD;AACC;AACK;AACL;AACA;AACF;AACE;AACA;AACC;AACjB;;;;;;;;;;;;;;;;;ACtDA;AAAA;AACA;AACkB;AACK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;AC9CA;AAAA;AACA;AACkB;AACgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;AC1CA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;AC3BA;AAAA;AACgB;AACH;AACQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;ACrEA;AAAA;AACuB;AACmB;AAClB;AACP;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB,EAAE,kBAAkB,oBAAoB,EAAE,eAAe,uBAAuB,EAAE;AAC9I,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7GA;AAAA;AACiB;AACS;AAC1B;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2BAA2B;AAC3B;AACA;;;;;;;;;;;;;;;;AChBA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;;;;ACpBA;AAAA;AACA;AACkB;AACF;AACO;AACO;AACI;AACJ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACpHA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAAA;AACA;AACqB;AACA;AACE;AACW;AACJ;AACe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;AC7JA;AAAA;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;;;;AC/BA;AAAA;AACA;AACqB;AACY;AACV;AACsB;AAC5B;AACS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAA4D,aAAa;AACzmDAAmD,6CAA6C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7OA;AAAA;AACkB;AACC;AACE;AACF;AACG;AACQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACO;AACR;AACA,+CAA+C,uIAA6E,EAAE;AAC9H;AACA;;;;;;;;;;;;;;ACnIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;AClBA;AAAA;AACA;AAC4B;AACP;AACA;AACE;AACmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA,eAAe,cAAc;AAC7B,gBAAgB,2BAA2B;AAC3C,eAAe,8BAA8B;AAC7C,kBAAkB,8BAA8B;AAChD,iBAAiB,qCAAqC;AACtD,kBAAkB,sDAAsD;AACxE,iBAAiB,qCAAqC;AACtD,cAAc,kCAAkC;AAChD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AC9IA;AAAA;AACA;AACqB;AACN;AACK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;;AClDA;AAAA;AACqB;AACE;AACT;AACI;AACI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,kKAA2G,wIAAkF,EAAE;AAC/L;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA,2DAA2D,iCAAiC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClGA;AAAA;AACqB;AACE;AACT;AACQ;AACJ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA,sKAA+G,wIAAkF,EAAE;AACnM;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2DAA2D;AACnH;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA,gEAAgE,6BAA6B;AAC7F;AACA;AACA;AACA,+DAA+D,iCAAiC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,6BAA6B;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1GA;AAAA;AACA;AACsB;AACJ;AACQ;AACE;AACR;AACpB;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;ACpGA;AAAA;AACsB;AACT;AACE;AACK;AACpB;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACfA;AAAA;AACqB;AACN;AACC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;AClBA;AAAA;AACqB;AACrB,4GAAuE,8BAA8B,EAAE;AACvG;AACA;AACA;AACA;AACA,6FAAiD,wCAAwC,8BAA8B,EAAE,EAAE,EAAE;AAC7H;AACA;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AACA;AACqB;AACH;AACF;AACY;AACF;AACZ;AACd;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAA2D,2CAA2C,EAAE;AACxG;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AAAA;AACqB;AACD;AACE;AACQ;AACT;AACD;AACE;AACC;AACE;AACH;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClCA;AAAA;AACqB;AACE;AACI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;AC1BA;AAAA;AACqB;AACH;AACG;AACP;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAA+E,wIAAkF,EAAE;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kEAAkE;AACrG;AACA;AACA;AACA;AACA,mCAAmC,yCAAyC;AAC5E;AACA;AACA;AACA;AACA,mCAAmC,oDAAoD;AACvF;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9DA;AAAA;AACqB;AACH;AACG;AACP;AACd;AACA;AACA,4IAAqF,wIAAkF,EAAE;AACzK;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;AC/BA;AAAA;AACqB;AACE;AACe;AACR;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;ACnDA;AAAA;AACqB;AACE;AACmB;AACV;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,yCAAyC,+BAA+B,EAAE,GAAG,EAAE;AAC3H,2CAA2C,yCAAyC,8BAA8B,EAAE,GAAG,EAAE;AACzH,2CAA2C,yCAAyC,8BAA8B,EAAE,GAAG,EAAE;AACzH,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;ACxBA;AAAA;AACqB;AACE;AACM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,8BAA8B,EAAE;AAChG,qBAAqB;AACrB,iBAAiB;AACjB,4DAA4D,8BAA8B,EAAE;AAC5F,iBAAiB;AACjB,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;ACzBA;AAAA;AACqB;AACF;AACG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC5HA;AAAA;AACgB;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA8B,+CAA+C,EAAE;AAC/E;AACA;;;;;;;;;;;;;;;;;ACZA;AAAA;AACqB;AACL;AACI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qDAAqD;AAClH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,+DAA+D;AAClF;AACA;;;;;;;;;;;;;;;;;;AC3BA;AAAA;AACqB;AACC;AACH;AACC;AACpB;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AAAA;AACqB;AACN;AACf;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AAAA;AACsB;AACF;AACJ;AACC;AACjB;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1BA;AAAA;AACqB;AACN;AACG;AACF;AAChB;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yFAAyF;AAC5H;AACA,oCAAoC,wBAAwB,EAAE;AAC9D;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;AC1BA;AAAA;AACqB;AACE;AACvB;AACA;AACA;AACA;AACA,2BAA2B,uCAAuC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8DAA8D,qFAAqF;AACnJ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6FAA6F;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtCA;AAAA;AACA;AACkB;AACE;AACM;AACE;AAC5B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAA+B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;AC7EA;AAAA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9CA;AAAA;AACqB;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AAAA;AACqB;AACrB;AACA;AACA,iGAAqD,gCAAgC,EAAE;AACvF;AACA;AACA,iGAAqD,yCAAyC,uCAAuC,EAAE,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACdA;AAAA;AACqB;AACL;AACI;AACE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxCA;AAAA;AACqB;AACN;AACC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAAA;AACA;AACoB;AACF;AACG;AACK;AACE;AACU;AACtC;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B,IAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACvNA;AAAA;AACA;AACmB;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACpEA;AAAA;AACgB;AACA;AACA;AAChB;AACA;AACA;AACA;AACA,6EAA8B,6FAAmC,EAAE;AACnE;AACA;;;;;;;;;;;;;;;;;ACVA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACpCA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;ACzFA;AAAA;AACA;AACgB;AACK;AACC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,8BAA8B;AAC9B,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,2CAA2C;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnJA;AAAA;AACA;AACuB;AACK;AACF;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;AC1GA;AAAA;AACA;AACuB;AACJ;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACjFA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AC5CA;AAAA;AACgC;AAChC;AACA,8BAA8B,kHAAwD;AACtF;AACA;;;;;;;;;;;;;;;;;ACLA;AAAA;AACkB;AACc;AACjB;AACf;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oNAAiG;AAC/H;AACA;;;;;;;;;;;;;;;ACnBA;AAAA;AACiC;AACjC;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,8BAA8B,gIAAmF;AACjH;AACA;;;;;;;;;;;;;;;ACTA;AAAA;AACmB;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AAAA;AACmB;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AAAA;AACoB;AACpB;AACA,qFAAkC,wBAAwB,EAAE;AAC5D;AACA;;;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,0DAA0D;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACrDA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC3EA;AAAA;AACA;AACqB;AACL;AAChB;AACA;AACA;AACA;AACA,8BAA8B,kEAAkE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/DA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA,8BAA8B,8DAA8D;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACtCA;AAAA;AACA;AACgB;AACC;AACI;AACE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;ACzFA;AAAA;AACA;AACqB;AACA;AACK;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kEAAkE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AC9HA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AC1BA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;AChEA;AAAA;AACA;AACqB;AACF;AACG;AACtB;AACA,8BAA8B,4EAA4E;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AC1DA;AAAA;AAC+B;AAC/B;AACA,+GAAiD,8DAA8D,EAAE;AACjH;AACA;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AACkC;AACjB;AACM;AACE;AACV;AACf;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmD,oBAAoB,EAAE;AACzE;AACA,8FAAwC,oGAAsC,EAAE;AAChF;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjBA;AAAA;AACoB;AACH;AACD;AACiB;AACX;AACtB;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/BA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,mEAAmE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AClDA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA,8BAA8B,+CAA+C;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;AC5CA;AAAA;AACA;AAC0B;AACE;AACd;AACC;AACf;AACA;AACA,kCAAkC,gDAAgD,6JAAuD,oCAAoC,EAAE,GAAG,EAAE,GAAG;AACvL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;ACvEA;AAAA;AACA;AACmB;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAwE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;ACnGA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC1CA;AAAA;AACA;AACqB;AACE;AACvB;AACA,8BAA8B,mDAAmD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;ACzBA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA,8BAA8B,8EAA8E;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;ACzDA;AAAA;AAC4B;AAC5B;AACA,8BAA8B,6HAA6E;AAC3G;AACA;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AACqB;AACJ;AACF;AACU;AACF;AACJ;AACnB;AACA;AACA,8BAA8B,wGAAwD,gCAAgC,EAAE,6SAAkG,0EAAyB,EAAE,GAAG;AACxP;AACA;;;;;;;;;;;;;;;;;;;;ACXA;AAAA;AACA;AACqB;AACE;AACF;AACH;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACrLA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACzBA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,2CAA2C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;AChCA;AAAA;AACqB;AACJ;AACE;AACI;AACE;AACN;AACnB;AACA;AACA,8BAA8B,wGAAwD,gCAAgC,EAAE,qTAAsG,0EAAyB,EAAE,GAAG;AAC5P;AACA;;;;;;;;;;;;;;;;;ACXA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AC5CA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,8CAA8C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC3BA;AAAA;AACA;AACqB;AACE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACrCA;AAAA;AACiB;AACjB;AACA;AACA,2BAA2B,mCAAmC;AAC9D,2BAA2B,sBAAsB;AACjD;AACA;AACA;;;;;;;;;;;;;;;ACRA;AAAA;AAC+B;AAC/B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,8BAA8B,8HAAkF;AAChH;AACA;;;;;;;;;;;;;;;;ACTA;AAAA;AACmB;AACA;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AACA;AAC4B;AACF;AACZ;AACC;AACf;AACA;AACA;AACA;AACA;AACA,kCAAkC,8CAA8C,6JAAuD,oCAAoC,EAAE,GAAG,EAAE,eAAe;AACjM;AACA;AACA;AACA;AACA,8BAA8B,+DAA+D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;AC9FA;AAAA;AACmB;AACnB;AACA;AACA;AACA;AACA;AACA,uFAAqC,wBAAwB,EAAE;AAC/D;AACA;AACA;AACA;AACA,mFAAiC,wBAAwB,EAAE;AAC3D;AACA;;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AACA;AACmB;AACG;AACM;AACF;AAC1B;AACA;AACA;AACA;AACA,8BAA8B,0EAA0E;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;AC1FA;AAAA;AACiB;AACjB;AACA;AACA,2BAA2B,mCAAmC;AAC9D,2BAA2B,sBAAsB;AACjD;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AAAA;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;;;ACrCA;AAAA;AACA;AACqB;AACE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;;;ACjEA;AAAA;AACA;AACe;AACG;AACQ;AACE;AAC5B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,8BAA8B,gEAAgE;AAC9F;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACpEA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,4CAA4C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AChCA;AAAA;AACc;AACG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AAAA;AACc;AACd;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8FAAiD;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7BA;AAAA;AACkB;AACE;AACpB;AACA;AACA,kFAA+B,+DAAsB,EAAE;AACvD;AACA;AACA;;;;;;;;;;;;;;;;ACRA;AAAA;AAC0B;AACN;AACpB;AACA,8BAA8B,0JAAsD;AACpF;AACA;;;;;;;;;;;;;;;;ACNA;AAAA;AACuB;AACH;AACpB;AACA,8BAA8B,+IAA8C;AAC5E;AACA;;;;;;;;;;;;;;;;ACNA;AAAA;AACwB;AACJ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kFAA+B,gBAAgB,EAAE,oBAAoB;AACnG;AACA;;;;;;;;;;;;;;;;ACXA;AAAA;AACkB;AACW;AAC7B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACfA;AAAA;AACe;AACI;AACM;AACV;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACzDA;AAAA;AACA;AACqB;AACL;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;ACpDA;AAAA;AACA;AACkB;AACC;AACG;AACI;AACE;AAC5B;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AChFA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;ACzCA;AAAA;AACA;AACkB;AACC;AACG;AACI;AACE;AAC5B;AACA,8BAA8B,6DAA6D;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACzEA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA,8BAA8B,kDAAkD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC5CA;AAAA;AACA;AACqB;AACL;AAChB;AACA;AACA;AACA;AACA,8BAA8B,+DAA+D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,oCAAoC;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC/CA;AAAA;AACA;AACqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;ACtEA;AAAA;AACA;AACqB;AACF;AACG;AACtB;AACA,8BAA8B,oEAAoE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACvGA;AAAA;AACoB;AACD;AACD;AAClB;AACA;AACA;AACA;AACA,8BAA8B,gKAA2D;AACzF;AACA;;;;;;;;;;;;;;;ACVA;AAAA;AACwB;AACxB;AACA,8BAA8B,4EAA4E;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB,EAAE;AAC/D;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtCA;AAAA;AACA;AACqB;AACA;AACrB;AACA,8BAA8B,2DAA2D;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACnEA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,6CAA6C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC9BA;AAAA;AACA;AACqB;AACa;AAClC;AACA,8BAA8B,iDAAiD;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACjDA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA,8BAA8B,qDAAqD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACvCA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;AC5CA;AAAA;AACoB;AACH;AACD;AACiB;AACX;AACtB;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/BA;AAAA;AACgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;ACpBA;AAAA;AACoB;AACD;AACnB;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AACA;AAC0B;AACE;AACd;AACC;AACf;AACA;AACA,kCAAkC,+CAA+C,6JAAuD,oCAAoC,EAAE,GAAG,EAAE,GAAG;AACtL;AACA,8BAA8B,oDAAoD;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;ACrEA;AAAA;AACoB;AACpB;AACA,sGAAmD,wBAAwB,EAAE,8FAA2C,wBAAwB,EAAE;AAClJ;AACA;;;;;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACqB;AACa;AAClB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AChDA;AAAA;AACA;AACqB;AACa;AAClB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AC/DA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA,8BAA8B,qDAAqD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;AClCA;AAAA;AACA;AACqB;AACrB;AACA,8BAA8B,sDAAsD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AC9CA;AAAA;AACA;AACqB;AACN;AACM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AC1EA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6FAA6F;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;AC1FA;AAAA;AACA;AACqB;AACL;AACgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oGAAoG;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,mBAAmB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChFA;AAAA;AACc;AACO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpBA;AAAA;AACgB;AACD;AACC;AACF;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAwD;AACjF,aAAa,GAAG,8DAA8D;AAC9E;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;AC7BA;AAAA;AACgB;AACO;AACD;AACD;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACXA;AAAA;AACA;AACgB;AACC;AACS;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACnEA;AAAA;AACgB;AACF;AACd;AACA;AACA;AACA;AACA,8EAAiC,8CAA8C,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;ACjBA;AAAA;AACiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AAAA;AACA;AACkB;AACQ;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;AClEA;AAAA;AACA;AACqB;AACH;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;AC7EA;AAAA;AACA;AACkB;AACF;AACK;AACD;AACE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iCAAiC;AACjC;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1JA;AAAA;AACA;AACkB;AACK;AACJ;AACG;AACI;AACE;AAC5B;AACA,8BAA8B,yEAAyE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;ACjIA;AAAA;AACA;AACkB;AACC;AACG;AACI;AACE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;;;ACnFA;AAAA;AACA;AAC0B;AACE;AAC5B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;;AClFA;AAAA;AAC2B;AAC3B;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AAAA;AACsB;AACtB;AACA,8BAA8B,8FAA8C;AAC5E;AACA;;;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;ACjBA;AAAA;AACA;AACsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,8BAA8B,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;ACrCA;AAAA;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;AChCA;AAAA;AACA;AACoB;AACE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;ACtCA;AAAA;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;AChCA;AAAA;AACA;AACiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;AC7FA;AAAA;AACA;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;ACzDA;AAAA;AACA;AACsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;ACxCA;AAAA;AACA;AACyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;;;ACXA;AAAA;AACA;AACsB;AACG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,oBAAoB,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;;AC3GA;AAAA;AAC+B;AACG;AAClC;AACA;;;;;;;;;;;;;;;;ACJA;AAAA;AACqB;AACG;AACxB;AACA;;;;;;;;;;;;;;;;ACJA;AAAA;AACsB;AACG;AACzB;AACA;;;;;;;;;;;;;;;;ACJA;AAAA;AACsB;AACG;AACzB;AACA;;;;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AACA;AACA;;;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,6BAA6B,EAAE;AAC3E;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;ACpBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,0GAA0G,sCAAsC,EAAE;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACO;AACR;;;;;;;;;;;;;;ACfA;AAAA;AACA,mBAA0B,MAAM;AAChC;;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA,4BAA4B,WAAW,EAAE;AACzC;AACA;;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AACA,8CAAqD,0CAA0C,EAAE;AACjG;;;;;;;;;;;;;;ACFA;AAAA;AACA,iCAAwC,qEAAqE,EAAE;AAC/G;;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AAAA;AAC0C;AAC1C;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AAAA;AACsC;AACtC;AACA;AACA;AACA;;;;;;;;;;;;;;;ACLA;AAAA;AACkB;AAClB;AACA;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AAAA;AACqB;AACrB;AACA;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AACA,iBAAwB;AACxB;;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACTA;AAAA;AACe;AACf;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB,EAAE;AAClE;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAAA;AACqB;AACM;AACE;AACC;AACE;AACV;AACF;AACD;AACmB;AACI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3CA;AAAA;AACA;AACA;AACA,2CAA2C,+BAA+B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACXA;AAAA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1BA;AAAA;AAC0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACbA;AAAA;AAC0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,8BAA8B,EAAE;AAC3D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACdA;AAAA;AAC0B;AACJ;AACtB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AAAA;AACqB;AACwB;AACZ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA;AAAA;AACsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AACgB;AACI;AACH;AACK;AACD;AACE;AACF;AACA;AACA;AACG;AACP;AACG;AACA;AACE;AACN;AACG;AACI;AACE;AACT;AACI;AACI;AACL;AACY;AACG;AACd;AACF;AACF;AACE;AACG;AACJ;AACA;AACE;AACJ;AACK;AACJ;AACE;AACO;AACP;AACH;AACD;AACE;AACM;AACR;AACE;AACG;AACA;AACW;AACT;AACD;AACN;AACM;AACA;AACQ;AACT;AACC;AACJ;AACE;AACQ;AACJ;AACE;AACT;AACE;AACA;AA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","file":"main.js","sourcesContent":["/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\nexport { Notification } from './internal/Notification';\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { Subscription } from './Subscription';\nvar AsyncSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject));\nexport { AsyncSubject };\n//# sourceMappingURL=AsyncSubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\nexport { Notification };\n//# sourceMappingURL=Notification.js.map\n","/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n","var Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function') {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return higherOrderRefCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nexport { ConnectableObservable };\nvar connectableProto = ConnectableObservable.prototype;\nexport var connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ConnectableObservable.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\nexport { SubscribeOnObservable };\n//# sourceMappingURL=SubscribeOnObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var context = this;\n        var subject;\n        var params = {\n            context: context,\n            subject: subject,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n        };\n        return new Observable(function (subscriber) {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                var state = {\n                    args: args, subscriber: subscriber, params: params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var self = this;\n    var args = state.args, subscriber = state.subscriber, params = state.params;\n    var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    var value = state.value, subject = state.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    var err = state.err, subject = state.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map\n","/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n            };\n        }\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {\n            subject: undefined,\n            args: args,\n            callbackFunc: callbackFunc,\n            scheduler: scheduler,\n            context: this,\n        };\n        return new Observable(function (subscriber) {\n            var context = params.context;\n            var subject = params.subject;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    var handler = function () {\n                        var innerArgs = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            innerArgs[_i] = arguments[_i];\n                        }\n                        var err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, args.concat([handler]));\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params: params, subscriber: subscriber, context: context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    var _this = this;\n    var params = state.params, subscriber = state.subscriber, context = state.context;\n    var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;\n    var subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        var handler = function () {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i] = arguments[_i];\n            }\n            var err = innerArgs.shift();\n            if (err) {\n                _this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n            }\n            else {\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, args.concat([handler]));\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map\n","/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of.apply(void 0, observables));\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { empty } from './empty';\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        var input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nexport function emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\nexport function forkJoin() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        resultSelector = sources.pop();\n    }\n    if (sources.length === 1 && isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    if (resultSelector) {\n        return forkJoin(sources).pipe(map(function (args) { return resultSelector.apply(void 0, args); }));\n    }\n    return new Observable(function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\nvar ForkJoinSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=forkJoin.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = Object.prototype.toString;\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        var handler = function () {\n            var e = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                e[_i] = arguments[_i];\n            }\n            return subscriber.next(e.length === 1 ? e[0] : e);\n        };\n        var retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return function () { return removeHandler(handler, retValue); };\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator;\n            sub.add(function () {\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                var observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                return input.then(function (value) {\n                    sub.add(scheduler.schedule(function () {\n                        subscriber.next(value);\n                        sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                    }));\n                }, function (err) {\n                    sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n                });\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromPromise.js.map\n","/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    var resultSelector;\n    var initialState;\n    if (arguments.length == 1) {\n        var options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(function (subscriber) {\n        var state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber: subscriber,\n                iterate: iterate,\n                condition: condition,\n                resultSelector: resultSelector,\n                state: state\n            });\n        }\n        do {\n            if (condition) {\n                var conditionResult = void 0;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            var value = void 0;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, condition = state.condition;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        var conditionResult = void 0;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    var value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map\n","/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nexport function iif(condition, trueResult, falseResult) {\n    if (trueResult === void 0) {\n        trueResult = EMPTY;\n    }\n    if (falseResult === void 0) {\n        falseResult = EMPTY;\n    }\n    return defer(function () { return condition() ? trueResult : falseResult; });\n}\n//# sourceMappingURL=iif.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period, scheduler) {\n    if (period === void 0) {\n        period = 0;\n    }\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { noop } from '../util/noop';\nexport var NEVER = /*@__PURE__*/ new Observable(noop);\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map\n","/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n//# sourceMappingURL=of.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    var first = sources[0], remainder = sources.slice(1);\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext.apply(void 0, first);\n    }\n    return new Observable(function (subscriber) {\n        var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };\n        return from(first).subscribe({\n            next: function (value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length && !subscriber.closed; i++) {\n                var key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var keys = Object.keys(obj);\n            var subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            var key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map\n","/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nvar RaceOperator = /*@__PURE__*/ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexport { RaceOperator };\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\nexport { RaceSubscriber };\n//# sourceMappingURL=race.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function range(start, count, scheduler) {\n    if (start === void 0) {\n        start = 0;\n    }\n    if (count === void 0) {\n        count = 0;\n    }\n    return new Observable(function (subscriber) {\n        var index = 0;\n        var current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function scalar(value) {\n    var result = new Observable(function (subscriber) {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n//# sourceMappingURL=scalar.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map\n","/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n","/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(function (subscriber) {\n        var resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = result ? from(result) : EMPTY;\n        var subscription = source.subscribe(subscriber);\n        return function () {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map\n","/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nexport { ZipOperator };\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nexport { ZipSubscriber };\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[Symbol_iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (!innerSubscription || innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return audit(function () { return timer(duration, scheduler); });\n}\n//# sourceMappingURL=auditTime.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nvar BufferOperator = /*@__PURE__*/ (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\nvar BufferSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        _this.add(subscribeToResult(_this, closingNotifier));\n        return _this;\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nvar BufferCountOperator = /*@__PURE__*/ (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nexport function bufferTime(bufferTimeSpan) {\n    var length = arguments.length;\n    var scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    var bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    var maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nvar BufferTimeOperator = /*@__PURE__*/ (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = /*@__PURE__*/ (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\nvar BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        var operator = new CatchOperator(selector);\n        var caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=catchError.js.map\n","/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */\nimport { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return function (source) { return source.lift(new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineAll.js.map\n","/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nvar none = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(from([source].concat(observables)), new CombineLatestOperator(project)); };\n}\n//# sourceMappingURL=combineLatest.js.map\n","/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\nimport { concat as concatStatic } from '../observable/concat';\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concatStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=concat.js.map\n","/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\nimport { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map\n","/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */\nimport { concatMap } from './concatMap';\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(function () { return innerObservable; }, resultSelector);\n}\n//# sourceMappingURL=concatMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n    return function (source) { return source.lift(new CountOperator(predicate, source)); };\n}\nvar CountOperator = /*@__PURE__*/ (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\nvar CountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=count.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function debounce(durationSelector) {\n    return function (source) { return source.lift(new DebounceOperator(durationSelector)); };\n}\nvar DebounceOperator = /*@__PURE__*/ (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\nvar DebounceSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };\n}\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nvar DeMaterializeOperator = /*@__PURE__*/ (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\nvar DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function distinct(keySelector, flushes) {\n    return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };\n}\nvar DistinctOperator = /*@__PURE__*/ (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set();\n        if (flushes) {\n            _this.add(subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber));\nexport { DistinctSubscriber };\n//# sourceMappingURL=distinct.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n","/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */\nimport { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n","/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) {\n        return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue\n            ? defaultIfEmpty(defaultValue)\n            : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); }));\n    };\n}\n//# sourceMappingURL=elementAt.js.map\n","/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function endWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(source, scalar(array[0]));\n        }\n        else if (len > 0) {\n            return concatStatic(source, fromArray(array, scheduler));\n        }\n        else {\n            return concatStatic(source, empty(scheduler));\n        }\n    };\n}\n//# sourceMappingURL=endWith.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nvar SwitchFirstOperator = /*@__PURE__*/ (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) {\n        return source.lift(new ExhauseMapOperator(project));\n    };\n}\nvar ExhauseMapOperator = /*@__PURE__*/ (function () {\n    function ExhauseMapOperator(project) {\n        this.project = project;\n    }\n    ExhauseMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhauseMapOperator;\n}());\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (scheduler === void 0) {\n        scheduler = undefined;\n    }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };\n}\nvar ExpandOperator = /*@__PURE__*/ (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexport { ExpandOperator };\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber));\nexport { ExpandSubscriber };\n//# sourceMappingURL=expand.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n//# sourceMappingURL=filter.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nexport function finalize(callback) {\n    return function (source) { return source.lift(new FinallyOperator(callback)); };\n}\nvar FinallyOperator = /*@__PURE__*/ (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n//# sourceMappingURL=finalize.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nvar FindValueOperator = /*@__PURE__*/ (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexport { FindValueOperator };\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\nexport { FindValueSubscriber };\n//# sourceMappingURL=find.js.map\n","/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */\nimport { FindValueOperator } from '../operators/find';\nexport function findIndex(predicate, thisArg) {\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, true, thisArg)); };\n}\n//# sourceMappingURL=findIndex.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=first.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nvar GroupByOperator = /*@__PURE__*/ (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\nvar GroupBySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber));\nvar GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber));\nvar GroupedObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable));\nexport { GroupedObservable };\nvar InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription));\n//# sourceMappingURL=groupBy.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nvar IgnoreElementsOperator = /*@__PURE__*/ (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return function (source) { return source.lift(new IsEmptyOperator()); };\n}\nvar IsEmptyOperator = /*@__PURE__*/ (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\nvar IsEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=isEmpty.js.map\n","/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\nimport { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\nexport function last(predicate, defaultValue) {\n    var hasDefaultValue = arguments.length >= 2;\n    return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };\n}\n//# sourceMappingURL=last.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return function (source) { return source.lift(new MapToOperator(value)); };\n}\nvar MapToOperator = /*@__PURE__*/ (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\nvar MapToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=mapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nvar MaterializeOperator = /*@__PURE__*/ (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\nvar MaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=materialize.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\nexport function max(comparer) {\n    var max = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\n        : function (x, y) { return x > y ? x : y; };\n    return reduce(max);\n}\n//# sourceMappingURL=max.js.map\n","/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\nimport { merge as mergeStatic } from '../observable/merge';\nexport function merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=merge.js.map\n","/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\nimport { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(function () { return innerObservable; }, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\n}\nvar MergeScanOperator = /*@__PURE__*/ (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nexport { MergeScanOperator };\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\nexport { MergeScanSubscriber };\n//# sourceMappingURL=mergeScan.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\nexport function min(comparer) {\n    var min = (typeof comparer === 'function')\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\n        : function (x, y) { return x < y ? x : y; };\n    return reduce(min);\n}\n//# sourceMappingURL=min.js.map\n","/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nimport { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nexport { MulticastOperator };\n//# sourceMappingURL=multicast.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nexport { ObserveOnOperator };\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nexport { ObserveOnSubscriber };\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\nexport { ObserveOnMessage };\n//# sourceMappingURL=observeOn.js.map\n","/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function onErrorResumeNext() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\n}\nexport function onErrorResumeNextStatic() {\n    var nextSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nextSources[_i] = arguments[_i];\n    }\n    var source = null;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=onErrorResumeNext.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function pairwise() {\n    return function (source) { return source.lift(new PairwiseOperator()); };\n}\nvar PairwiseOperator = /*@__PURE__*/ (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n//# sourceMappingURL=pairwise.js.map\n","/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */\nimport { not } from '../util/not';\nimport { filter } from './filter';\nexport function partition(predicate, thisArg) {\n    return function (source) {\n        return [\n            filter(predicate, thisArg)(source),\n            filter(not(predicate, thisArg))(source)\n        ];\n    };\n}\n//# sourceMappingURL=partition.js.map\n","/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\nimport { map } from './map';\nexport function pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map(plucker(properties, length))(source); };\n}\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n","/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nexport function publish(selector) {\n    return selector ?\n        multicast(function () { return new Subject(); }, selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map\n","/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nexport function publishBehavior(value) {\n    return function (source) { return multicast(new BehaviorSubject(value))(source); };\n}\n//# sourceMappingURL=publishBehavior.js.map\n","/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return function (source) { return multicast(new AsyncSubject())(source); };\n}\n//# sourceMappingURL=publishLast.js.map\n","/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    var subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return function (source) { return multicast(function () { return subject; }, selector)(source); };\n}\n//# sourceMappingURL=publishReplay.js.map\n","/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */\nimport { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\nexport function race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function raceOperatorFunction(source) {\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=race.js.map\n","/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) {\n            return accumulator(acc, value, index + 1);\n        }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=refCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nvar RepeatOperator = /*@__PURE__*/ (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n//# sourceMappingURL=repeat.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function repeatWhen(notifier) {\n    return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };\n}\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=repeatWhen.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function retry(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\n}\nvar RetryOperator = /*@__PURE__*/ (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n//# sourceMappingURL=retry.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function retryWhen(notifier) {\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\n}\nvar RetryWhenOperator = /*@__PURE__*/ (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return _super.prototype.error.call(this, errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar SampleOperator = /*@__PURE__*/ (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\nvar SampleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function sampleTime(period, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };\n}\nvar SampleTimeOperator = /*@__PURE__*/ (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nexport function sequenceEqual(compareTo, comparor) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparor)); };\n}\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nexport { SequenceEqualOperator };\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nexport { SequenceEqualSubscriber };\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n","/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\nexport function share() {\n    return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };\n}\n//# sourceMappingURL=share.js.map\n","/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\nimport { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return function (source) { return source.lift(shareReplayOperator(bufferSize, windowTime, scheduler)); };\n}\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    var subject;\n    var refCount = 0;\n    var subscription;\n    var hasError = false;\n    var isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next: function (value) { subject.next(value); },\n                error: function (err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete: function () {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        var innerSub = subject.subscribe(this);\n        return function () {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n//# sourceMappingURL=shareReplay.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nexport function single(predicate) {\n    return function (source) { return source.lift(new SingleOperator(predicate, source)); };\n}\nvar SingleOperator = /*@__PURE__*/ (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n//# sourceMappingURL=single.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return function (source) { return source.lift(new SkipOperator(count)); };\n}\nvar SkipOperator = /*@__PURE__*/ (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skip.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nexport function skipLast(count) {\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\n}\nvar SkipLastOperator = /*@__PURE__*/ (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\nvar SkipLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipLast.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function skipUntil(notifier) {\n    return function (source) { return source.lift(new SkipUntilOperator(notifier)); };\n}\nvar SkipUntilOperator = /*@__PURE__*/ (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\nvar SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        _this.add(_this.innerSubscription = subscribeToResult(_this, notifier));\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return function (source) { return source.lift(new SkipWhileOperator(predicate)); };\n}\nvar SkipWhileOperator = /*@__PURE__*/ (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\nvar SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n","/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\nimport { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nexport function startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i] = arguments[_i];\n    }\n    return function (source) {\n        var scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(scalar(array[0]), source);\n        }\n        else if (len > 0) {\n            return concatStatic(fromArray(array, scheduler), source);\n        }\n        else {\n            return concatStatic(empty(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map\n","/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n//# sourceMappingURL=subscribeOn.js.map\n","/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n","/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\nimport { switchMap } from './switchMap';\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });\n}\n//# sourceMappingURL=switchMapTo.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\n}\nvar TakeWhileOperator = /*@__PURE__*/ (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport var defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config) {\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };\n}\nvar ThrottleOperator = /*@__PURE__*/ (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\nvar ThrottleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.send = function () {\n        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    };\n    ThrottleSubscriber.prototype.throttle = function (value) {\n        var duration = this.tryDurationSelector(value);\n        if (duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype.throttlingDone = function () {\n        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this.throttlingDone();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler, config) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (config === void 0) {\n        config = defaultThrottleConfig;\n    }\n    return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };\n}\nvar ThrottleTimeOperator = /*@__PURE__*/ (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype._complete = function () {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n","/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\nimport { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\nexport var throwIfEmpty = function (errorFactory) {\n    if (errorFactory === void 0) {\n        errorFactory = defaultErrorFactory;\n    }\n    return tap({\n        hasValue: false,\n        next: function () { this.hasValue = true; },\n        complete: function () {\n            if (!this.hasValue) {\n                throw errorFactory();\n            }\n        }\n    });\n};\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        return defer(function () {\n            return source.pipe(scan(function (_a, value) {\n                var current = _a.current;\n                return ({ value: value, current: scheduler.now(), last: current });\n            }, { current: scheduler.now(), value: undefined, last: undefined }), map(function (_a) {\n                var current = _a.current, last = _a.last, value = _a.value;\n                return new TimeInterval(value, current - last);\n            }));\n        });\n    };\n}\nvar TimeInterval = /*@__PURE__*/ (function () {\n    function TimeInterval(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n    return TimeInterval;\n}());\nexport { TimeInterval };\n//# sourceMappingURL=timeInterval.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\nexport function timeout(due, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n//# sourceMappingURL=timeout.js.map\n","/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return function (source) {\n        var absoluteTimeout = isDate(due);\n        var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nvar TimeoutWithOperator = /*@__PURE__*/ (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\nvar TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n","/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */\nimport { async } from '../scheduler/async';\nimport { map } from './map';\nexport function timestamp(scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    return map(function (value) { return new Timestamp(value, scheduler.now()); });\n}\nvar Timestamp = /*@__PURE__*/ (function () {\n    function Timestamp(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n    return Timestamp;\n}());\nexport { Timestamp };\n//# sourceMappingURL=timestamp.js.map\n","/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nimport { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=window.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = async;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nvar WindowTimeOperator = /*@__PURE__*/ (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n    return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };\n}\nvar WindowToggleOperator = /*@__PURE__*/ (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                var window_1 = new Subject();\n                var subscription = new Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n","/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            var err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n","/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n","/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { zip as zipStatic } from '../observable/zip';\nexport function zip() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic.apply(void 0, [source].concat(observables)));\n    };\n}\n//# sourceMappingURL=zip.js.map\n","/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\nimport { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return function (source) { return source.lift(new ZipOperator(project)); };\n}\n//# sourceMappingURL=zipAll.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\nexport { AnimationFrameAction };\n//# sourceMappingURL=AnimationFrameAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler));\nexport { AnimationFrameScheduler };\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\nexport { AsapAction };\n//# sourceMappingURL=AsapAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\nexport { AsapScheduler };\n//# sourceMappingURL=AsapScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        return clearInterval(id) && undefined || undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n","/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\nexport { QueueAction };\n//# sourceMappingURL=QueueAction.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncScheduler } from './AsyncScheduler';\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\nexport { QueueScheduler };\n//# sourceMappingURL=QueueScheduler.js.map\n","/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nexport { VirtualTimeScheduler };\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\nexport { VirtualAction };\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n","/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\nimport { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport var animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map\n","/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nimport { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport var asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map\n","/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map\n","/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nimport { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\nexport var queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? /*@__PURE__*/ Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nvar ArgumentOutOfRangeError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var _this = _super.call(this, 'argument out of range') || this;\n        _this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(_this, ArgumentOutOfRangeError.prototype);\n        return _this;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexport { ArgumentOutOfRangeError };\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nvar EmptyError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EmptyError, _super);\n    function EmptyError() {\n        var _this = _super.call(this, 'no elements in sequence') || this;\n        _this.name = 'EmptyError';\n        Object.setPrototypeOf(_this, EmptyError.prototype);\n        return _this;\n    }\n    return EmptyError;\n}(Error));\nexport { EmptyError };\n//# sourceMappingURL=EmptyError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport var Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nvar ObjectUnsubscribedError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var _this = _super.call(this, 'object unsubscribed') || this;\n        _this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(_this, ObjectUnsubscribedError.prototype);\n        return _this;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexport { ObjectUnsubscribedError };\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nvar TimeoutError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TimeoutError, _super);\n    function TimeoutError() {\n        var _this = _super.call(this, 'Timeout has occurred') || this;\n        _this.name = 'TimeoutError';\n        Object.setPrototypeOf(_this, TimeoutError.prototype);\n        return _this;\n    }\n    return TimeoutError;\n}(Error));\nexport { TimeoutError };\n//# sourceMappingURL=TimeoutError.js.map\n","/** PURE_IMPORTS_START tslib PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nvar UnsubscriptionError = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        var _this = _super.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '') || this;\n        _this.errors = errors;\n        _this.name = 'UnsubscriptionError';\n        Object.setPrototypeOf(_this, UnsubscriptionError.prototype);\n        return _this;\n    }\n    return UnsubscriptionError;\n}(Error));\nexport { UnsubscriptionError };\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nimport { isArray } from './isArray';\nexport function isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n//# sourceMappingURL=isObservable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nimport { errorObject } from './errorObject';\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n//# sourceMappingURL=index.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { environment } from '../environments/environment';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { HierarchicalInjectorComponent } from './homepage/pages/advanced/hierarchical-injector/hierarchical-injector.component';\nimport { CliOverviewComponent } from './homepage/pages/cli/overview/overview.component';\nimport { CliUsagesComponent } from './homepage/pages/cli/usages/usages.component';\nimport { ComponentsComponent } from './homepage/pages/components/components.component';\nimport { ControllersComponent } from './homepage/pages/controllers/controllers.component';\nimport { CustomDecoratorsComponent } from './homepage/pages/custom-decorators/custom-decorators.component';\nimport { WhoUsesComponent } from './homepage/pages/discover/who-uses/who-uses.component';\nimport { ExceptionFiltersComponent } from './homepage/pages/exception-filters/exception-filters.component';\nimport { ExecutionContextComponent } from './homepage/pages/execution-context/execution-context.component';\nimport { ExpressInstanceComponent } from './homepage/pages/faq/express-instance/express-instance.component';\nimport { GlobalPrefixComponent } from './homepage/pages/faq/global-prefix/global-prefix.component';\nimport { HybridApplicationComponent } from './homepage/pages/faq/hybrid-application/hybrid-application.component';\nimport { LifecycleEventsComponent } from './homepage/pages/faq/lifecycle-events/lifecycle-events.component';\nimport { MultipleServersComponent } from './homepage/pages/faq/multiple-servers/multiple-servers.component';\nimport { FirstStepsComponent } from './homepage/pages/first-steps/first-steps.component';\nimport { AsyncComponentsComponent } from './homepage/pages/fundamentals/async-components/async-components.component';\nimport { CircularDependencyComponent } from './homepage/pages/fundamentals/circular-dependency/circular-dependency.component';\nimport { DependencyInjectionComponent } from './homepage/pages/fundamentals/dependency-injection/dependency-injection.component';\nimport { E2eTestingComponent } from './homepage/pages/fundamentals/e2e-testing/e2e-testing.component';\nimport { PlatformAgnosticismComponent } from './homepage/pages/fundamentals/platform-agnosticism/platform-agnosticism.component';\nimport { UnitTestingComponent } from './homepage/pages/fundamentals/unit-testing/unit-testing.component';\nimport { GuardsInterceptorsComponent } from './homepage/pages/graphql/guards-interceptors/guards-interceptors.component';\nimport { MutationsComponent } from './homepage/pages/graphql/mutations/mutations.component';\nimport { QuickStartComponent } from './homepage/pages/graphql/quick-start/quick-start.component';\nimport { ResolversMapComponent } from './homepage/pages/graphql/resolvers-map/resolvers-map.component';\nimport { ScalarsComponent } from './homepage/pages/graphql/scalars/scalars.component';\nimport { SchemaStitchingComponent } from './homepage/pages/graphql/schema-stitching/schema-stitching.component';\nimport { SubscriptionsComponent } from './homepage/pages/graphql/subscriptions/subscriptions.component';\nimport { GuardsComponent } from './homepage/pages/guards/guards.component';\nimport { InterceptorsComponent } from './homepage/pages/interceptors/interceptors.component';\nimport { IntroductionComponent } from './homepage/pages/introduction/introduction.component';\nimport { BasicsComponent } from './homepage/pages/microservices/basics/basics.component';\nimport { CustomTransportComponent } from './homepage/pages/microservices/custom-transport/custom-transport.component';\nimport { MicroservicesExceptionFiltersComponent } from './homepage/pages/microservices/exception-filters/exception-filters.component';\nimport { GrpcComponent } from './homepage/pages/microservices/grpc/grpc.component';\nimport { MicroservicesGuardsComponent } from './homepage/pages/microservices/guards/guards.component';\nimport { MicroservicesInterceptorsComponent } from './homepage/pages/microservices/interceptors/interceptors.component';\nimport { MqttComponent } from './homepage/pages/microservices/mqtt/mqtt.component';\nimport { NatsComponent } from './homepage/pages/microservices/nats/nats.component';\nimport { MicroservicesPipesComponent } from './homepage/pages/microservices/pipes/pipes.component';\nimport { RabbitMQComponent } from './homepage/pages/microservices/rabbitmq/rabbitmq.component';\nimport { RedisComponent } from './homepage/pages/microservices/redis/redis.component';\nimport { MiddlewaresComponent } from './homepage/pages/middlewares/middlewares.component';\nimport { MigrationComponent } from './homepage/pages/migration/migration.component';\nimport { ModulesComponent } from './homepage/pages/modules/modules.component';\nimport { PipesComponent } from './homepage/pages/pipes/pipes.component';\nimport { CqrsComponent } from './homepage/pages/recipes/cqrs/cqrs.component';\nimport { MongodbComponent } from './homepage/pages/recipes/mongodb/mongodb.component';\nimport { PassportComponent } from './homepage/pages/recipes/passport/passport.component';\nimport { PrismaComponent } from './homepage/pages/recipes/prisma/prisma.component';\nimport { SqlSequelizeComponent } from './homepage/pages/recipes/sql-sequelize/sql-sequelize.component';\nimport { SqlTypeormComponent } from './homepage/pages/recipes/sql-typeorm/sql-typeorm.component';\nimport { SwaggerComponent } from './homepage/pages/recipes/swagger/swagger.component';\nimport { SupportComponent } from './homepage/pages/support/support.component';\nimport { AuthenticationComponent } from './homepage/pages/techniques/authentication/authentication.component';\nimport { CachingComponent } from './homepage/pages/techniques/caching/caching.component';\nimport { CompressionComponent } from './homepage/pages/techniques/compression/compression.component';\nimport { ConfigurationComponent } from './homepage/pages/techniques/configuration/configuration.component';\nimport { FileUploadComponent } from './homepage/pages/techniques/file-upload/file-upload.component';\nimport { HotReloadComponent } from './homepage/pages/techniques/hot-reload/hot-reload.component';\nimport { HttpModuleComponent } from './homepage/pages/techniques/http-module/http-module.component';\nimport { LoggerComponent } from './homepage/pages/techniques/logger/logger.component';\nimport { MongoComponent } from './homepage/pages/techniques/mongo/mongo.component';\nimport { MvcComponent } from './homepage/pages/techniques/mvc/mvc.component';\nimport { PerformanceComponent } from './homepage/pages/techniques/performance/performance.component';\nimport { SecurityComponent } from './homepage/pages/techniques/security/security.component';\nimport { SerializationComponent } from './homepage/pages/techniques/serialization/serialization.component';\nimport { SqlComponent } from './homepage/pages/techniques/sql/sql.component';\nimport { ValidationComponent } from './homepage/pages/techniques/validation/validation.component';\nimport { AdapterComponent } from './homepage/pages/websockets/adapter/adapter.component';\nimport { WsExceptionFiltersComponent } from './homepage/pages/websockets/exception-filters/exception-filters.component';\nimport { GatewaysComponent } from './homepage/pages/websockets/gateways/gateways.component';\nimport { WsGuardsComponent } from './homepage/pages/websockets/guards/guards.component';\nimport { WsInterceptorsComponent } from './homepage/pages/websockets/interceptors/interceptors.component';\nimport { WsPipesComponent } from './homepage/pages/websockets/pipes/pipes.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomepageComponent,\n    children: [\n      {\n        path: '',\n        component: IntroductionComponent,\n      },\n      {\n        path: 'first-steps',\n        component: FirstStepsComponent,\n        data: { title: 'First steps' },\n      },\n      {\n        path: 'controllers',\n        component: ControllersComponent,\n        data: { title: 'Controllers' },\n      },\n      {\n        path: 'components',\n        redirectTo: 'providers',\n      },\n      {\n        path: 'providers',\n        component: ComponentsComponent,\n        data: { title: 'Providers' },\n      },\n      {\n        path: 'modules',\n        component: ModulesComponent,\n        data: { title: 'Modules' },\n      },\n      {\n        path: 'middleware',\n        component: MiddlewaresComponent,\n        data: { title: 'Middleware' },\n      },\n      {\n        path: 'pipes',\n        component: PipesComponent,\n        data: { title: 'Pipes' },\n      },\n      {\n        path: 'guards',\n        component: GuardsComponent,\n        data: { title: 'Guards' },\n      },\n      {\n        path: 'exception-filters',\n        component: ExceptionFiltersComponent,\n        data: { title: 'Exception filters' },\n      },\n      {\n        path: 'interceptors',\n        component: InterceptorsComponent,\n        data: { title: 'Interceptors' },\n      },\n      {\n        path: 'custom-decorators',\n        component: CustomDecoratorsComponent,\n        data: { title: 'Custom decorators' },\n      },\n      {\n        path: 'fundamentals/dependency-injection',\n        redirectTo: 'fundamentals/custom-providers',\n      },\n      {\n        path: 'fundamentals/custom-providers',\n        component: DependencyInjectionComponent,\n        data: { title: 'Custom providers' },\n      },\n      {\n        path: 'fundamentals/platform-agnosticism',\n        component: PlatformAgnosticismComponent,\n        data: { title: 'Platform agnosticism' },\n      },\n      {\n        path: 'fundamentals/async-components',\n        redirectTo: 'fundamentals/async-providers',\n      },\n      {\n        path: 'fundamentals/async-providers',\n        component: AsyncComponentsComponent,\n        data: { title: 'Async providers' },\n      },\n      {\n        path: 'advanced/hierarchical-injector',\n        component: HierarchicalInjectorComponent,\n        data: { title: 'Hierarchical Injector' },\n      },\n      {\n        path: 'fundamentals/circular-dependency',\n        component: CircularDependencyComponent,\n        data: { title: 'Circular Dependency' },\n      },\n      {\n        path: 'fundamentals/unit-testing',\n        component: UnitTestingComponent,\n        data: { title: 'Unit Testing' },\n      },\n      {\n        path: 'fundamentals/e2e-testing',\n        component: E2eTestingComponent,\n        data: { title: 'E2E Testing' },\n      },\n      {\n        path: 'execution-context',\n        component: ExecutionContextComponent,\n        data: { title: 'Execution Context' },\n      },\n      {\n        path: 'graphql/quick-start',\n        component: QuickStartComponent,\n        data: { title: 'GraphQL - Quick Start' },\n      },\n      {\n        path: 'graphql/resolvers-map',\n        component: ResolversMapComponent,\n        data: { title: 'GraphQL - Resolvers Map' },\n      },\n      {\n        path: 'graphql/mutations',\n        component: MutationsComponent,\n        data: { title: 'GraphQL - Mutations' },\n      },\n      {\n        path: 'graphql/scalars',\n        component: ScalarsComponent,\n        data: { title: 'GraphQL - Scalars' },\n      },\n      {\n        path: 'graphql/subscriptions',\n        component: SubscriptionsComponent,\n        data: { title: 'GraphQL - Subscriptions' },\n      },\n      {\n        path: 'graphql/guards-interceptors',\n        redirectTo: 'graphq/tooling',\n      },\n      {\n        path: 'graphql/tooling',\n        component: GuardsInterceptorsComponent,\n        data: { title: 'GraphQL - Tooling' },\n      },\n      /*{\n        path: 'graphql/ide',\n        component: IdeComponent,\n        data: { title: 'GraphQL - IDE' },\n      },*/\n      {\n        path: 'graphql/schema-stitching',\n        component: SchemaStitchingComponent,\n        data: { title: 'GraphQL - Schema Stitching' },\n      },\n      {\n        path: 'websockets/gateways',\n        component: GatewaysComponent,\n        data: { title: 'Gateways' },\n      },\n      {\n        path: 'websockets/pipes',\n        component: WsPipesComponent,\n        data: { title: 'Pipes - Gateways' },\n      },\n      {\n        path: 'websockets/exception-filters',\n        component: WsExceptionFiltersComponent,\n        data: { title: 'Exception Filters - Gateways' },\n      },\n      {\n        path: 'websockets/guards',\n        component: WsGuardsComponent,\n        data: { title: 'Guards - Gateways' },\n      },\n      {\n        path: 'websockets/interceptors',\n        component: WsInterceptorsComponent,\n        data: { title: 'Interceptors - Gateways' },\n      },\n      {\n        path: 'websockets/adapter',\n        component: AdapterComponent,\n        data: { title: 'Adapter - Gateways' },\n      },\n      {\n        path: 'microservices/basics',\n        component: BasicsComponent,\n        data: { title: 'Microservices' },\n      },\n      {\n        path: 'microservices/redis',\n        component: RedisComponent,\n        data: { title: 'Redis - Microservices' },\n      },\n      {\n        path: 'microservices/mqtt',\n        component: MqttComponent,\n        data: { title: 'MQTT - Microservices' },\n      },\n      {\n        path: 'microservices/nats',\n        component: NatsComponent,\n        data: { title: 'Nats - Microservices' },\n      },\n      {\n        path: 'microservices/grpc',\n        component: GrpcComponent,\n        data: { title: 'gRPC - Microservices' },\n      },\n      {\n        path: 'microservices/rabbitmq',\n        component: RabbitMQComponent,\n        data: { title: 'RabbitMQ - Microservices' },\n      },\n      {\n        path: 'microservices/pipes',\n        component: MicroservicesPipesComponent,\n        data: { title: 'Pipes - Microservices' },\n      },\n      {\n        path: 'microservices/exception-filters',\n        component: MicroservicesExceptionFiltersComponent,\n        data: { title: 'Exception Filters - Microservices' },\n      },\n      {\n        path: 'microservices/guards',\n        component: MicroservicesGuardsComponent,\n        data: { title: 'Guards - Microservices' },\n      },\n      {\n        path: 'microservices/interceptors',\n        component: MicroservicesInterceptorsComponent,\n        data: { title: 'Interceptors - Microservices' },\n      },\n      {\n        path: 'microservices/custom-transport',\n        component: CustomTransportComponent,\n        data: { title: 'Custom Transport - Microservices' },\n      },\n      {\n        path: 'recipes/sql-typeorm',\n        component: SqlTypeormComponent,\n        data: { title: 'SQL (TypeORM)' },\n      },\n      {\n        path: 'recipes/mongodb',\n        component: MongodbComponent,\n        data: { title: 'MongoDB (Mongoose)' },\n      },\n      /*{\n        path: 'recipes/mockgoose',\n        component: MockgooseComponent,\n        data: { title: 'MongoDB E2E Testing (Mongoose + Mockgoose)' },\n      },*/\n      {\n        path: 'recipes/passport',\n        component: PassportComponent,\n      },\n      {\n        path: 'techniques/authentication',\n        component: AuthenticationComponent,\n        data: { title: 'Authentication' },\n      },\n      {\n        path: 'recipes/sql-sequelize',\n        component: SqlSequelizeComponent,\n        data: { title: 'SQL (Sequelize)' },\n      },\n      {\n        path: 'recipes/cqrs',\n        component: CqrsComponent,\n        data: { title: 'CQRS' },\n      },\n      {\n        path: 'recipes/swagger',\n        component: SwaggerComponent,\n        data: { title: 'OpenAPI (Swagger)' },\n      },\n      {\n        path: 'recipes/prisma',\n        component: PrismaComponent,\n        data: { title: 'Prisma' },\n      },\n      {\n        path: 'techniques/mvc',\n        component: MvcComponent,\n        data: { title: 'MVC' },\n      },\n      {\n        path: 'techniques/serialization',\n        component: SerializationComponent,\n        data: { title: 'Serialization' },\n      },\n      {\n        path: 'techniques/caching',\n        component: CachingComponent,\n        data: { title: 'Caching' },\n      },\n      {\n        path: 'techniques/validation',\n        component: ValidationComponent,\n        data: { title: 'Validation' },\n      },\n      {\n        path: 'techniques/sql',\n        redirectTo: 'techniques/database',\n      },\n      {\n        path: 'techniques/database',\n        component: SqlComponent,\n        data: { title: 'Database' },\n      },\n      {\n        path: 'techniques/mongodb',\n        component: MongoComponent,\n        data: { title: 'MongoDB' },\n      },\n      {\n        path: 'techniques/file-upload',\n        component: FileUploadComponent,\n        data: { title: 'File upload' },\n      },\n      {\n        path: 'techniques/logger',\n        component: LoggerComponent,\n        data: { title: 'Logger' },\n      },\n      {\n        path: 'techniques/performance',\n        component: PerformanceComponent,\n        data: { title: 'Performance (Fastify)' },\n      },\n      {\n        path: 'techniques/hot-reload',\n        component: HotReloadComponent,\n        data: { title: 'Hot reload (Webpack)' },\n      },\n      {\n        path: 'techniques/http-module',\n        component: HttpModuleComponent,\n        data: { title: 'HTTP module' },\n      },\n      {\n        path: 'techniques/configuration',\n        component: ConfigurationComponent,\n        data: { title: 'Configuration' },\n      },\n      {\n        path: 'techniques/security',\n        component: SecurityComponent,\n        data: { title: 'Security' },\n      },\n      {\n        path: 'techniques/compression',\n        component: CompressionComponent,\n        data: { title: 'Compression' },\n      },\n      {\n        path: 'faq/express-instance',\n        component: ExpressInstanceComponent,\n        data: { title: 'Express instance - FAQ' },\n      },\n      {\n        path: 'faq/global-prefix',\n        component: GlobalPrefixComponent,\n        data: { title: 'Global prefix - FAQ' },\n      },\n      {\n        path: 'faq/lifecycle-events',\n        component: LifecycleEventsComponent,\n        data: { title: 'Lifecycle events - FAQ' },\n      },\n      {\n        path: 'faq/hybrid-application',\n        component: HybridApplicationComponent,\n        data: { title: 'Hybrid application - FAQ' },\n      },\n      {\n        path: 'faq/multiple-servers',\n        component: MultipleServersComponent,\n        data: { title: 'HTTPS & Multiple Servers - FAQ' },\n      },\n      {\n        path: 'discover/companies',\n        component: WhoUsesComponent,\n        data: { title: 'Discover - Who is using Nest?' },\n      },\n      {\n        path: 'migration-guide',\n        component: MigrationComponent,\n        data: { title: 'Migration guide - FAQ' },\n      },\n      {\n        path: 'support',\n        component: SupportComponent,\n        data: { title: 'Support' },\n      },\n      {\n        path: 'cli/overview',\n        component: CliOverviewComponent,\n        data: {\n          title: 'Overview - CLI',\n        },\n      },\n      {\n        path: 'cli/usages',\n        component: CliUsagesComponent,\n        data: {\n          title: 'Usage - CLI',\n        },\n      },\n    ],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      enableTracing: !environment.production,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"<router-outlet></router-outlet>\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { HOMEPAGE_TITLE, TITLE_SUFFIX } from './constants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private readonly titleService: Title,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {}\n\n  async ngOnInit() {\n    this.router.events\n      .filter(ev => ev instanceof NavigationEnd)\n      .subscribe(ev => this.updateTitle());\n  }\n\n  updateTitle() {\n    const route = this.activatedRoute.snapshot.firstChild;\n    if (!route) {\n      return undefined;\n    }\n    const childRoute = route.firstChild;\n    const {\n      data: { title },\n    } = childRoute;\n    const pageTitle = title ? title : HOMEPAGE_TITLE;\n\n    this.titleService.setTitle(pageTitle + TITLE_SUFFIX);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {\n  PerfectScrollbarConfigInterface,\n  PerfectScrollbarModule,\n  PERFECT_SCROLLBAR_CONFIG,\n} from 'ngx-perfect-scrollbar';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatchHeightDirective } from './common/directives/match-height.directive';\nimport { FooterComponent } from './homepage/footer/footer.component';\nimport { HeaderComponent } from './homepage/header/header.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { MenuItemComponent } from './homepage/menu/menu-item/menu-item.component';\nimport { MenuComponent } from './homepage/menu/menu.component';\nimport { HierarchicalInjectorComponent } from './homepage/pages/advanced/hierarchical-injector/hierarchical-injector.component';\nimport { MixinComponentsComponent } from './homepage/pages/advanced/mixin-components/mixin-components.component';\nimport { CliModule } from './homepage/pages/cli/cli.module';\nimport { ComponentsComponent } from './homepage/pages/components/components.component';\nimport { ControllersComponent } from './homepage/pages/controllers/controllers.component';\nimport { CustomDecoratorsComponent } from './homepage/pages/custom-decorators/custom-decorators.component';\nimport { WhoUsesComponent } from './homepage/pages/discover/who-uses/who-uses.component';\nimport { ExceptionFiltersComponent } from './homepage/pages/exception-filters/exception-filters.component';\nimport { ExecutionContextComponent } from './homepage/pages/execution-context/execution-context.component';\nimport { ExpressInstanceComponent } from './homepage/pages/faq/express-instance/express-instance.component';\nimport { GlobalPrefixComponent } from './homepage/pages/faq/global-prefix/global-prefix.component';\nimport { HybridApplicationComponent } from './homepage/pages/faq/hybrid-application/hybrid-application.component';\nimport { LifecycleEventsComponent } from './homepage/pages/faq/lifecycle-events/lifecycle-events.component';\nimport { MultipleServersComponent } from './homepage/pages/faq/multiple-servers/multiple-servers.component';\nimport { FirstStepsComponent } from './homepage/pages/first-steps/first-steps.component';\nimport { AsyncComponentsComponent } from './homepage/pages/fundamentals/async-components/async-components.component';\nimport { CircularDependencyComponent } from './homepage/pages/fundamentals/circular-dependency/circular-dependency.component';\nimport { DependencyInjectionComponent } from './homepage/pages/fundamentals/dependency-injection/dependency-injection.component';\nimport { E2eTestingComponent } from './homepage/pages/fundamentals/e2e-testing/e2e-testing.component';\nimport { PlatformAgnosticismComponent } from './homepage/pages/fundamentals/platform-agnosticism/platform-agnosticism.component';\nimport { UnitTestingComponent } from './homepage/pages/fundamentals/unit-testing/unit-testing.component';\nimport { GuardsInterceptorsComponent } from './homepage/pages/graphql/guards-interceptors/guards-interceptors.component';\nimport { IdeComponent } from './homepage/pages/graphql/ide/ide.component';\nimport { MutationsComponent } from './homepage/pages/graphql/mutations/mutations.component';\nimport { QuickStartComponent } from './homepage/pages/graphql/quick-start/quick-start.component';\nimport { ResolversMapComponent } from './homepage/pages/graphql/resolvers-map/resolvers-map.component';\nimport { ScalarsComponent } from './homepage/pages/graphql/scalars/scalars.component';\nimport { SchemaStitchingComponent } from './homepage/pages/graphql/schema-stitching/schema-stitching.component';\nimport { SubscriptionsComponent } from './homepage/pages/graphql/subscriptions/subscriptions.component';\nimport { GuardsComponent } from './homepage/pages/guards/guards.component';\nimport { InterceptorsComponent } from './homepage/pages/interceptors/interceptors.component';\nimport { IntroductionComponent } from './homepage/pages/introduction/introduction.component';\nimport { BasicsComponent } from './homepage/pages/microservices/basics/basics.component';\nimport { CustomTransportComponent } from './homepage/pages/microservices/custom-transport/custom-transport.component';\nimport { MicroservicesExceptionFiltersComponent } from './homepage/pages/microservices/exception-filters/exception-filters.component';\nimport { GrpcComponent } from './homepage/pages/microservices/grpc/grpc.component';\nimport { MicroservicesGuardsComponent } from './homepage/pages/microservices/guards/guards.component';\nimport { MicroservicesInterceptorsComponent } from './homepage/pages/microservices/interceptors/interceptors.component';\nimport { MqttComponent } from './homepage/pages/microservices/mqtt/mqtt.component';\nimport { NatsComponent } from './homepage/pages/microservices/nats/nats.component';\nimport { MicroservicesPipesComponent } from './homepage/pages/microservices/pipes/pipes.component';\nimport { RabbitMQComponent } from './homepage/pages/microservices/rabbitmq/rabbitmq.component';\nimport { RedisComponent } from './homepage/pages/microservices/redis/redis.component';\nimport { MiddlewaresComponent } from './homepage/pages/middlewares/middlewares.component';\nimport { MigrationComponent } from './homepage/pages/migration/migration.component';\nimport { ModulesComponent } from './homepage/pages/modules/modules.component';\nimport { BasePageComponent } from './homepage/pages/page/page.component';\nimport { PipesComponent } from './homepage/pages/pipes/pipes.component';\nimport { CqrsComponent } from './homepage/pages/recipes/cqrs/cqrs.component';\nimport { MockgooseComponent } from './homepage/pages/recipes/mockgoose/mockgoose.component';\nimport { MongodbComponent } from './homepage/pages/recipes/mongodb/mongodb.component';\nimport { PassportComponent } from './homepage/pages/recipes/passport/passport.component';\nimport { PrismaComponent } from './homepage/pages/recipes/prisma/prisma.component';\nimport { SqlSequelizeComponent } from './homepage/pages/recipes/sql-sequelize/sql-sequelize.component';\nimport { SqlTypeormComponent } from './homepage/pages/recipes/sql-typeorm/sql-typeorm.component';\nimport { SwaggerComponent } from './homepage/pages/recipes/swagger/swagger.component';\nimport { SupportComponent } from './homepage/pages/support/support.component';\nimport { AuthenticationComponent } from './homepage/pages/techniques/authentication/authentication.component';\nimport { CachingComponent } from './homepage/pages/techniques/caching/caching.component';\nimport { CompressionComponent } from './homepage/pages/techniques/compression/compression.component';\nimport { ConfigurationComponent } from './homepage/pages/techniques/configuration/configuration.component';\nimport { FileUploadComponent } from './homepage/pages/techniques/file-upload/file-upload.component';\nimport { HotReloadComponent } from './homepage/pages/techniques/hot-reload/hot-reload.component';\nimport { HttpModuleComponent } from './homepage/pages/techniques/http-module/http-module.component';\nimport { LoggerComponent } from './homepage/pages/techniques/logger/logger.component';\nimport { MongoComponent } from './homepage/pages/techniques/mongo/mongo.component';\nimport { MvcComponent } from './homepage/pages/techniques/mvc/mvc.component';\nimport { PerformanceComponent } from './homepage/pages/techniques/performance/performance.component';\nimport { SecurityComponent } from './homepage/pages/techniques/security/security.component';\nimport { SerializationComponent } from './homepage/pages/techniques/serialization/serialization.component';\nimport { SqlComponent } from './homepage/pages/techniques/sql/sql.component';\nimport { ValidationComponent } from './homepage/pages/techniques/validation/validation.component';\nimport { AdapterComponent } from './homepage/pages/websockets/adapter/adapter.component';\nimport { WsExceptionFiltersComponent } from './homepage/pages/websockets/exception-filters/exception-filters.component';\nimport { GatewaysComponent } from './homepage/pages/websockets/gateways/gateways.component';\nimport { WsGuardsComponent } from './homepage/pages/websockets/guards/guards.component';\nimport { WsInterceptorsComponent } from './homepage/pages/websockets/interceptors/interceptors.component';\nimport { WsPipesComponent } from './homepage/pages/websockets/pipes/pipes.component';\nimport { TocComponent } from './homepage/toc/toc.component';\nimport { TabsComponent } from './shared/components/tabs/tabs.component';\nimport { ExtensionPipe } from './shared/pipes/extension.pipe';\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  imports: [BrowserModule, AppRoutingModule, PerfectScrollbarModule, CliModule],\n  declarations: [\n    AppComponent,\n    HomepageComponent,\n    HeaderComponent,\n    FooterComponent,\n    MenuComponent,\n    MenuItemComponent,\n    IntroductionComponent,\n    FirstStepsComponent,\n    ControllersComponent,\n    BasePageComponent,\n    MatchHeightDirective,\n    ComponentsComponent,\n    ModulesComponent,\n    MiddlewaresComponent,\n    PipesComponent,\n    ExceptionFiltersComponent,\n    GuardsComponent,\n    DependencyInjectionComponent,\n    AsyncComponentsComponent,\n    InterceptorsComponent,\n    CircularDependencyComponent,\n    UnitTestingComponent,\n    E2eTestingComponent,\n    GatewaysComponent,\n    AdapterComponent,\n    WsPipesComponent,\n    WsInterceptorsComponent,\n    WsGuardsComponent,\n    WsExceptionFiltersComponent,\n    BasicsComponent,\n    RedisComponent,\n    CustomTransportComponent,\n    MicroservicesExceptionFiltersComponent,\n    MicroservicesPipesComponent,\n    MicroservicesInterceptorsComponent,\n    MicroservicesGuardsComponent,\n    ExpressInstanceComponent,\n    GlobalPrefixComponent,\n    LifecycleEventsComponent,\n    HybridApplicationComponent,\n    MultipleServersComponent,\n    HierarchicalInjectorComponent,\n    SqlTypeormComponent,\n    MixinComponentsComponent,\n    SqlSequelizeComponent,\n    MongodbComponent,\n    MockgooseComponent,\n    PassportComponent,\n    SwaggerComponent,\n    PrismaComponent,\n    CqrsComponent,\n    TabsComponent,\n    ExtensionPipe,\n    CustomDecoratorsComponent,\n    ExecutionContextComponent,\n    QuickStartComponent,\n    ResolversMapComponent,\n    MutationsComponent,\n    SubscriptionsComponent,\n    SchemaStitchingComponent,\n    GuardsInterceptorsComponent,\n    IdeComponent,\n    SqlComponent,\n    MvcComponent,\n    MongoComponent,\n    PlatformAgnosticismComponent,\n    ScalarsComponent,\n    AuthenticationComponent,\n    SecurityComponent,\n    LoggerComponent,\n    PerformanceComponent,\n    FileUploadComponent,\n    HttpModuleComponent,\n    HotReloadComponent,\n    ConfigurationComponent,\n    MigrationComponent,\n    MqttComponent,\n    GrpcComponent,\n    RabbitMQComponent,\n    NatsComponent,\n    SupportComponent,\n    TocComponent,\n    CompressionComponent,\n    ValidationComponent,\n    CachingComponent,\n    SerializationComponent,\n    WhoUsesComponent,\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n  ],\n})\nexport class AppModule {}\n","import {\n  Directive,\n  ElementRef,\n  AfterViewChecked,\n  Input,\n  HostListener,\n  Renderer2,\n  NgZone,\n} from '@angular/core';\n\n@Directive({\n  selector: '[matchHeight]',\n})\nexport class MatchHeightDirective implements AfterViewChecked {\n  constructor(\n    private readonly zone: NgZone,\n    private readonly renderer: Renderer2,\n    private readonly el: ElementRef,\n  ) {}\n\n  ngAfterViewChecked() {\n    setTimeout(\n      () => this.zone.run(() => this.matchHeight(this.el.nativeElement)),\n      800,\n    );\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    setTimeout(() => this.matchHeight(this.el.nativeElement), 500);\n  }\n\n  matchHeight(parent: HTMLElement) {\n    if (!parent) {\n      return;\n    }\n    const children = Array.from(parent.children);\n    children.forEach((x: HTMLElement) => {\n      this.renderer.setStyle(x, 'height', 'initial');\n    });\n    const itemHeights = children.map(x => x.getBoundingClientRect().height);\n    const maxHeight = itemHeights.reduce((prev, curr) => {\n      return curr > prev ? curr : prev;\n    }, 0);\n\n    children.forEach((x: HTMLElement) =>\n      this.renderer.setStyle(x, 'height', `${maxHeight}px`),\n    );\n  }\n}\n","export const HOMEPAGE_TITLE = 'Documentation';\nexport const TITLE_SUFFIX = ' | NestJS - A progressive Node.js web framework';","module.exports = \"<footer>\\n  <div class=\\\"credits\\\">\\n    <p>\\n      Copyright © 2017-2018 MIT by <a href=\\\"https://kamilmysliwiec.com\\\" target=\\\"blank\\\" title=\\\"Kamil Mysliwiec Blog | Full-Stack Software Engineer\\\">\\n        Kamil Myśliwiec</a>\\n      <br />\\n      <span>\\n        Designed by <a href=\\\"https://dribbble.com/JakubStaron\\\" title=\\\"Jakub Staroń Dribble\\\" target=\\\"_blank\\\">Jakub Staroń</a>\\n      </span>\\n    </p>\\n  </div>\\n  <div class=\\\"social-wrapper\\\">\\n    <a href=\\\"https://www.facebook.com/kammysliwiec/\\\" target=\\\"blank\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\n    <a href=\\\"https://twitter.com/kammysliwiec\\\" target=\\\"blank\\\"><i class=\\\"fa fa-twitter\\\"></i></a>\\n    <a href=\\\"https://github.com/kamilmysliwiec\\\" target=\\\"blank\\\"><i class=\\\"fa fa-github\\\"></i></a>\\n    <a href=\\\"https://kamilmysliwiec.com\\\" title=\\\"Kamil Mysliwiec Blog | Full-Stack Software Engineer\\\" target=\\\"blank\\\"><i class=\\\"fa fa-globe\\\"></i></a>\\n  </div>\\n</footer>\"","module.exports = \".transition, :host, footer a, .social-wrapper a {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top, .social-wrapper {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing, :host {\\n  box-sizing: border-box; }\\n\\n:host {\\n  background: #191919;\\n  display: block;\\n  height: 90px;\\n  padding: 5px 2px 15px 50px;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  margin: 0;\\n  width: auto;\\n  font-size: 15px; }\\n\\n@media only screen and (max-width: 767px) {\\n    :host {\\n      padding: 15px;\\n      margin: 0 -30px;\\n      width: calc(100% + 60px);\\n      position: static;\\n      height: auto;\\n      text-align: center; } }\\n\\nfooter {\\n  display: block;\\n  position: relative;\\n  color: #929292; }\\n\\nfooter a {\\n    color: #929292; }\\n\\nfooter a:hover {\\n      color: #f9f8f8; }\\n\\nfooter p {\\n    line-height: 25px; }\\n\\n.social-wrapper {\\n  position: absolute;\\n  right: 40px; }\\n\\n@media only screen and (max-width: 767px) {\\n    .social-wrapper {\\n      -webkit-transform: translateX(0) translateY(0);\\n      transform: translateX(0) translateY(0);\\n      position: static;\\n      text-align: center; } }\\n\\n.social-wrapper a {\\n    display: inline-block;\\n    vertical-align: middle;\\n    color: #a5a5a5;\\n    font-size: 22px;\\n    margin-left: 12px;\\n    cursor: pointer; }\\n\\n.social-wrapper a:first-of-type {\\n      font-size: 20px; }\\n\\n.social-wrapper a:hover {\\n      color: #f9f8f8; }\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent {}\n","module.exports = \"<header>\\n  <div class=\\\"icon-wrapper\\\" (click)=\\\"toggle.emit()\\\" [class.opened]=\\\"isSidebarOpened\\\">\\n    <div class=\\\"nav-icon\\\">\\n      <svg enable-background=\\\"new 0 0 512.014 512.014\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 512.014 512.014\\\" xml:space=\\\"preserve\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <g transform=\\\"translate(-1)\\\">\\n          <g fill=\\\"#fff\\\">\\n            <path d=\\\"m487.41 308.42l0.018-40.233c1.873-0.123 3.73-0.423 5.546-0.896 8.431-2.369 15.179-8.697 18.083-16.958 1.5-4.237 2.149-8.728 1.908-13.217-1.375-18.505-16.989-32.7-35.542-32.308h-0.62c-25.676-100.42-116.15-170.67-219.8-170.67s-194.12 70.248-219.8 170.67h-0.62c-18.552-0.391-34.167 13.803-35.541 32.308-0.242 4.483 0.407 8.969 1.908 13.2 2.898 8.269 9.648 14.605 18.083 16.975 1.823 0.475 3.687 0.776 5.567 0.9v40.229c-15.058 3.828-25.599 17.385-25.599 32.921 0 15.537 10.541 29.093 25.599 32.922v52.412c0.034 28.268 22.941 51.174 51.209 51.208h358.38c28.268-0.034 51.175-22.941 51.209-51.208v-52.412c15.058-3.828 25.599-17.384 25.6-32.92-1e-3 -15.537-10.541-29.093-25.599-32.923zm-230.4-257.21c94.187 0.206 176.78 62.928 202.28 153.6h-404.55c25.491-90.672 108.09-153.39 202.28-153.6zm-231.21 199.69c-3.163-0.83-5.7-3.189-6.758-6.284-0.752-2.115-1.072-4.359-0.942-6.6 1.007-9.382 9.06-16.411 18.492-16.141h440.83c9.432-0.27 17.485 6.76 18.492 16.142 0.129 2.246-0.191 4.496-0.942 6.617-1.064 3.087-3.6 5.438-6.758 6.267-3.016 0.801-6.215 0.568-9.083-0.663-0.237-0.098-0.491-0.159-0.722-0.27-0.862-0.416-1.681-0.916-2.446-1.491-0.114-0.084-0.245-0.138-0.357-0.226-0.073-0.057-0.156-0.096-0.23-0.153-1.533-1.173-3.142-2.243-4.817-3.201-0.446-0.258-0.898-0.502-1.353-0.743-1.74-0.942-3.542-1.763-5.393-2.46l-0.019-8e-3c-7.584-2.807-15.798-3.456-23.729-1.877-12.015 2.372-22.386 9.893-28.375 20.575-4.327 7.668-12.385 12.476-21.188 12.642h-0.054c-1.449-0.036-2.894-0.186-4.319-0.45-8.054-1.044-15.21-5.656-19.489-12.558-1.015-1.623-2.13-3.181-3.34-4.665-1.083-1.317-2.239-2.573-3.464-3.759-0.107-0.105-0.2-0.229-0.308-0.332-8.023-7.729-18.696-12.101-29.836-12.222-0.136-3e-3 -0.267-0.028-0.403-0.029l-0.081 8e-3c-0.37-2e-3 -0.731-0.057-1.103-0.049-14.927 0.218-28.605 8.382-35.883 21.417-4.434 7.942-21.384 12.692-35.217 12.692-2.301-0.015-4.6-0.152-6.886-0.409-0.284-0.029-0.568-0.069-0.853-0.102-7.674-0.72-15.112-3.038-21.835-6.806-2.291-1.304-4.228-3.15-5.642-5.375-7.278-13.035-20.956-21.198-35.883-21.416-0.367-9e-3 -0.742-0.017-1.108-0.017-1.016 0-2.007 0.124-3.009 0.193-0.675 0.047-1.359 0.052-2.028 0.13-1.322 0.153-2.612 0.413-3.903 0.683-0.547 0.115-1.106 0.186-1.647 0.321-1.273 0.318-2.508 0.742-3.742 1.173-0.541 0.188-1.098 0.333-1.631 0.542-1.126 0.444-2.205 0.99-3.29 1.527-0.602 0.297-1.224 0.548-1.811 0.872-0.947 0.525-1.841 1.145-2.749 1.741-0.666 0.435-1.357 0.825-2 1.298-0.786 0.58-1.511 1.25-2.261 1.883-0.695 0.586-1.42 1.128-2.082 1.759-0.677 0.646-1.282 1.379-1.922 2.071-0.658 0.711-1.35 1.379-1.967 2.139-0.814 1.002-1.538 2.1-2.276 3.183-0.362 0.53-0.771 1.009-1.114 1.558l-0.02 0.028c-1.119 1.742-2.419 3.362-3.878 4.831-0.319 0.344-0.639 0.685-0.974 1.004-1.328 1.23-2.776 2.321-4.324 3.258l-4e-3 -4e-3c-0.541 0.333-1.091 0.624-1.643 0.912-1.442 0.753-2.951 1.368-4.509 1.836l-0.223 0.068c-0.441 0.123-0.892 0.236-1.405 0.351-1.755 0.406-3.545 0.634-5.346 0.681l-0.175 0.01c-0.711 0.011-1.423-0.02-2.131-0.092-0.254-0.016-0.489-0.089-0.741-0.112-0.072-0.014-0.13-0.06-0.203-0.071-7.591-1.099-14.244-5.658-18.008-12.342-5.989-10.683-16.36-18.203-28.375-20.575-3.26-0.646-6.583-0.919-9.905-0.813-9.82-0.056-19.372 3.208-27.103 9.263-3.551 2.816-8.22 3.795-12.602 2.64zm331.11 58.806c-1.601-1.601-3.772-2.499-6.035-2.498h-119.47v-21.067c0.579 0.185 1.173 0.304 1.756 0.474 1.655 0.483 3.299 0.968 4.949 1.338 0.129 0.029 0.256 0.045 0.386 0.073 6.079 1.346 12.282 2.054 18.508 2.115 0.171 0 0.388-0.02 0.562-0.022 0.262 3e-3 0.765 0.022 0.897 0.022 14.167 0 40.675-4.517 50.116-21.442 4.215-7.505 12.032-12.276 20.634-12.593 1.461 0.061 2.915 0.235 4.349 0.521 0.661 0.109 1.352 0.116 1.998 0.273 4.405 1.11 8.461 3.305 11.799 6.386 0.063 0.058 0.14 0.093 0.202 0.152 1.774 1.669 3.323 3.56 4.61 5.628 8.13 13.429 22.84 21.465 38.533 21.05 0.146-4e-3 0.286-0.033 0.432-0.038 15.267 0.085 29.387-8.093 36.91-21.379 4.41-7.856 12.75-12.685 21.758-12.6h9e-3c1.461 0.062 2.914 0.245 4.345 0.547 0.683 0.14 1.335 0.367 2 0.559 1.038 0.297 2.056 0.658 3.05 1.081 0.53 0.227 1.058 0.457 1.571 0.719 1.51 0.751 2.944 1.644 4.284 2.669 1.65 1.301 3.426 2.434 5.3 3.383l-0.025 42.15h-68.267c-2.264-1e-3 -4.435 0.897-6.035 2.498-1.601 1.601-2.499 3.772-2.498 6.035v59.733c0 9.426-7.641 17.067-17.067 17.067s-17.067-7.641-17.067-17.067v-59.733c3e-3 -2.262-0.896-4.433-2.497-6.034zm-14.568 14.569v34.133h-110.93v-34.133h110.93zm-170.67-17.067c-4.713 0-8.533 3.82-8.533 8.533 0 9.426-7.641 17.067-17.067 17.067s-17.067-7.641-17.067-17.067v-25.832c2.648-0.302 5.261-0.852 7.806-1.643l0.094-0.025c0.058-0.017 0.892-0.275 0.958-0.3l0.076-0.029c1.348-0.444 2.668-0.947 3.966-1.521l0.15-0.058c0.508-0.217 1.017-0.442 1.467-0.667 0.136-0.068 0.282-0.151 0.418-0.221 0.951-0.48 1.873-1.004 2.789-1.554 0.257-0.153 0.472-0.271 0.752-0.442l1.283-0.792c0.135-0.092 0.295-0.233 0.43-0.328 0.801-0.556 1.564-1.165 2.33-1.776 0.275-0.22 0.482-0.352 0.782-0.596 0.458-0.358 0.9-0.717 1.333-1.108 0.125-0.114 0.251-0.248 0.375-0.365 0.324-0.3 0.634-0.614 0.951-0.923 0.618-0.625 1.258-1.297 1.999-2.096 0.35-0.367 0.708-0.733 1.05-1.15l0.102-0.139c1.356-1.617 2.6-3.325 3.723-5.111 5.05-8.191 14.021-13.139 23.643-13.041 8.887 0.1 17.047 4.931 21.409 12.675 1.064 1.85 2.338 3.571 3.797 5.129 0.659 0.731 1.4 1.38 2.128 2.052 0.526 0.483 0.954 1.006 1.524 1.47v123.73c0 9.426-7.641 17.067-17.067 17.067s-17.067-7.641-17.067-17.067v-34.142-51.2c-1e-3 -4.712-3.821-8.533-8.534-8.533zm-59.733-18.899v18.899h-68.267v-41.542c2.405-1.035 4.665-2.376 6.725-3.992 4.383-3.42 9.732-5.371 15.287-5.577 1.645-3e-3 3.287 0.145 4.905 0.443 7.139 1.351 13.307 5.806 16.834 12.158 5.28 9.503 14.086 16.546 24.516 19.611zm-76.8 70.099c-9.421-0.012-17.054-7.646-17.067-17.067 0.013-9.409 7.63-17.038 17.039-17.064l0.028 6e-3 77.884-8e-3c0.332 1.142 0.724 2.266 1.175 3.367 0.204 0.544 0.343 1.113 0.574 1.644 0.809 1.871 1.784 3.666 2.914 5.363 0.252 0.377 0.567 0.7 0.833 1.066 0.921 1.288 1.93 2.511 3.021 3.66 0.499 0.518 1.047 0.973 1.579 1.46 0.97 0.9 1.992 1.744 3.06 2.526 0.633 0.457 1.281 0.875 1.946 1.289 1.103 0.684 2.245 1.304 3.419 1.858 0.702 0.333 1.394 0.666 2.121 0.952 1.319 0.502 2.668 0.922 4.039 1.256 0.661 0.168 1.296 0.385 1.972 0.514 8.04 1.604 16.389 0.203 23.465-3.937v13.117h-128zm435.2 68.267c-0.022 18.847-15.295 34.12-34.142 34.142h-358.38c-18.847-0.022-34.12-15.295-34.142-34.142v-51.2l119.47 9e-3v25.6c0 18.851 15.282 34.133 34.133 34.133s34.133-15.282 34.133-34.133v-25.609h110.93c0 18.851 15.282 34.133 34.133 34.133s34.133-15.282 34.133-34.133h59.733v51.2zm8.533-68.267h-68.267v-34.133h68.267c9.426 0 17.067 7.641 17.067 17.067s-7.641 17.066-17.067 17.066z\\\" />\\n            <path d=\\\"m208.31 79.311l-17.067 17.067c-2.18 2.15-3.041 5.304-2.255 8.264s3.097 5.271 6.057 6.057 6.114-0.075 8.264-2.255l17.067-17.067c3.293-3.339 3.275-8.709-0.041-12.025-3.316-3.315-8.687-3.334-12.025-0.041z\\\" />\\n            <path d=\\\"m419.14 443.74c2.263 0 4.433-0.899 6.033-2.5l17.067-17.067c3.32-3.334 3.315-8.727-0.013-12.054-3.327-3.327-8.72-3.333-12.054-0.012l-17.067 17.067c-1.601 1.6-2.5 3.77-2.5 6.033s0.899 4.433 2.5 6.033c1.6 1.6 3.771 2.5 6.034 2.5z\\\" />\\n            <path d=\\\"m105.91 403.58l-17.067 17.067c-2.18 2.15-3.041 5.304-2.255 8.264s3.097 5.271 6.057 6.057 6.113-0.075 8.264-2.255l17.067-17.067c3.293-3.339 3.275-8.709-0.041-12.025s-8.687-3.334-12.025-0.041z\\\" />\\n            <path d=\\\"m250.97 147.58l-17.067 17.067c-2.18 2.15-3.041 5.304-2.255 8.264s3.097 5.271 6.057 6.057 6.114-0.075 8.264-2.255l17.067-17.067c3.293-3.339 3.275-8.709-0.041-12.025-3.315-3.316-8.686-3.334-12.025-0.041z\\\" />\\n            <path d=\\\"m297.17 96.378c-3.339-3.293-8.709-3.275-12.025 0.041s-3.334 8.687-0.041 12.025l17.067 17.067c3.339 3.293 8.709 3.275 12.025-0.041s3.334-8.687 0.041-12.025l-17.067-17.067z\\\" />\\n            <path d=\\\"m143.57 130.51c-3.339-3.293-8.709-3.275-12.025 0.041s-3.334 8.687-0.041 12.025l17.067 17.067c3.339 3.293 8.709 3.275 12.025-0.041s3.334-8.687 0.041-12.025l-17.067-17.067z\\\" />\\n            <path d=\\\"m288.64 403.58c-3.339-3.293-8.709-3.275-12.025 0.041s-3.334 8.687-0.041 12.025l17.067 17.067c3.339 3.293 8.709 3.275 12.025-0.041s3.334-8.687 0.041-12.025l-17.067-17.067z\\\" />\\n            <path d=\\\"m365.44 139.04c-3.339-3.293-8.709-3.275-12.025 0.041s-3.334 8.687-0.041 12.025l17.067 17.067c3.339 3.293 8.709 3.275 12.025-0.041s3.334-8.687 0.041-12.025l-17.067-17.067z\\\" />\\n          </g>\\n        </g>\\n      </svg>\\n    </div>\\n  </div>\\n  <ng-content></ng-content>\\n  <div class=\\\"social-wrapper\\\">\\n    <a href=\\\"https://twitter.com/nestframework\\\" target=\\\"blank\\\">\\n      <i class=\\\"fa fa-twitter\\\"></i>\\n    </a>\\n    <a href=\\\"https://github.com/nestjs/nest\\\" target=\\\"blank\\\">\\n      <i class=\\\"fa fa-github\\\"></i>\\n    </a>\\n    <a href=\\\"https://stackoverflow.com/questions/tagged/nestjs\\\" target=\\\"blank\\\">\\n      <i class=\\\"fa fa-stack-overflow\\\"></i>\\n    </a>\\n    <a href=\\\"https://nestjs.com\\\" title=\\\"NestJS - A node.js framework built on top of TypeScript\\\" target=\\\"blank\\\">\\n      <i class=\\\"fa fa-globe\\\"></i>\\n    </a>\\n  </div>\\n  <!--<div class=\\\"workshop-wrapper\\\">\\n    <img src=\\\"/assets/ng-camp-small.svg\\\" alt=\\\"AngularCamp, Barcelona\\\" />\\n    <div class=\\\"workshop-info\\\">\\n      <h3 class=\\\"long-title\\\">\\n        <span>NestJS</span> at 2018 JSCamp Conference, Barcelona</h3>\\n      <h3 class=\\\"short-title\\\">\\n        <span>NestJS</span> 2018 JSCamp</h3>\\n      <a href=\\\"https://angularcamp.tech/workshops/scalable-nodejs-with-nest/\\\" target=\\\"blank\\\">LEARN MORE</a>\\n    </div>\\n  </div>-->\\n</header>\"","module.exports = \".transition, .icon-wrapper, .social-wrapper a {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element, .icon-wrapper .nav-icon {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top, .social-wrapper {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing {\\n  box-sizing: border-box; }\\n\\n:host {\\n  background: #191919;\\n  display: block;\\n  width: 100%;\\n  height: 70px;\\n  position: fixed;\\n  z-index: 10000; }\\n\\nheader {\\n  height: 100%;\\n  width: 100%;\\n  display: block;\\n  position: relative; }\\n\\n.icon-wrapper {\\n  height: 100%;\\n  width: 80px;\\n  top: 0;\\n  bottom: 0;\\n  display: inline-block;\\n  position: relative;\\n  z-index: 10000; }\\n\\n.icon-wrapper:hover {\\n    cursor: pointer;\\n    background: #212121; }\\n\\n.icon-wrapper.opened {\\n    width: 300px; }\\n\\n@media only screen and (max-width: 1200px) {\\n      .icon-wrapper.opened {\\n        width: 300px; } }\\n\\n@media only screen and (max-width: 991px) {\\n      .icon-wrapper.opened {\\n        width: 80px; } }\\n\\n.icon-wrapper .nav-icon svg {\\n    width: 30px;\\n    stroke: #fff;\\n    stroke-width: 5; }\\n\\n@media only screen and (max-width: 767px) {\\n    .icon-wrapper {\\n      background: transparent; } }\\n\\n:host /deep/ .logo-wrapper {\\n  display: inline-block;\\n  height: 100%;\\n  text-align: center;\\n  vertical-align: top;\\n  padding-left: 40px; }\\n\\n@media only screen and (max-width: 767px) {\\n    :host /deep/ .logo-wrapper {\\n      padding-left: 10px; } }\\n\\n:host /deep/ .logo-wrapper a {\\n    display: inline-block;\\n    padding-top: 10px; }\\n\\n/*.social-wrapper,\\n.icon-wrapper {\\n  position: absolute;\\n}*/\\n\\n.social-wrapper {\\n  float: right;\\n  padding-right: 40px;\\n  position: relative; }\\n\\n.social-wrapper a {\\n    display: inline-block;\\n    vertical-align: middle;\\n    color: #b9b9b9;\\n    font-size: 22px;\\n    margin-left: 12px;\\n    cursor: pointer; }\\n\\n.social-wrapper a:first-of-type {\\n      font-size: 20px; }\\n\\n.social-wrapper a:hover {\\n      color: #f9f8f8; }\\n\\n@media only screen and (max-width: 480px) {\\n    .social-wrapper {\\n      display: none; } }\\n\\n.workshop-wrapper {\\n  float: right;\\n  padding: 14px 25px; }\\n\\n@media only screen and (max-width: 767px) {\\n    .workshop-wrapper {\\n      padding: 23px 15px; } }\\n\\n@media only screen and (max-width: 480px) {\\n    .workshop-wrapper {\\n      display: none; } }\\n\\n.workshop-wrapper img {\\n    margin-right: 10px;\\n    width: 55px; }\\n\\n@media only screen and (max-width: 767px) {\\n      .workshop-wrapper img {\\n        display: none !important; } }\\n\\n.workshop-wrapper img,\\n  .workshop-wrapper .workshop-info {\\n    display: inline-block;\\n    vertical-align: middle; }\\n\\n.workshop-wrapper h3 {\\n    font-size: 15px;\\n    font-weight: 400;\\n    color: #fff;\\n    margin: 0; }\\n\\n.workshop-wrapper .short-title {\\n    display: none; }\\n\\n@media only screen and (max-width: 767px) {\\n      .workshop-wrapper .short-title {\\n        display: block; } }\\n\\n@media only screen and (max-width: 767px) {\\n    .workshop-wrapper .long-title {\\n      display: none; } }\\n\\n.workshop-wrapper a {\\n    color: #03a9f4;\\n    font-weight: 600;\\n    font-size: 12px;\\n    position: relative; }\\n\\n.workshop-wrapper a:hover {\\n      color: #ed2945; }\\n\\n.workshop-wrapper a:hover::after {\\n        background: #ed2945; }\\n\\n.workshop-wrapper a::after {\\n      content: '';\\n      display: block;\\n      background: #246081;\\n      height: 2px;\\n      left: 0;\\n      right: 0;\\n      bottom: -1px;\\n      position: absolute; }\\n\\n.workshop-wrapper span {\\n    display: inline-block;\\n    padding: 1px 2px;\\n    font-weight: 700;\\n    /* For Safari 5.1 to 6.0 */\\n    /* For Opera 11.1 to 12.0 */\\n    /* For Firefox 3.6 to 15 */\\n    background: linear-gradient(#ee2943, #d31e5a);\\n    /* Standard syntax */ }\\n\\n@media (max-width: 480px) {\\n  .workshop-wrapper {\\n    display: none; }\\n  :host /deep/ .logo-wrapper {\\n    width: 100%; }\\n  .icon-wrapper {\\n    position: absolute; } }\\n\\n.fa-stack-overflow {\\n  font-size: 18px; }\\n\"","import { Component, Output, EventEmitter, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  @Output() toggle = new EventEmitter<void>();\n  @Input() isSidebarOpened = true;\n}\n","module.exports = \"<app-header (toggle)=\\\"toggleSidebar()\\\" [isSidebarOpened]=\\\"isSidebarOpened\\\">\\n  <div class=\\\"logo-wrapper\\\">\\n    <a href=\\\"http://docs.nestjs.com/\\\" title=\\\"Documentation | NestJS - A node.js framework built on top of TypeScript\\\">\\n      <img src=\\\"/assets/logo_text.svg\\\">\\n    </a>\\n  </div>\\n</app-header>\\n<div class=\\\"container-fluid\\\">\\n  <app-menu [class.opened]=\\\"isSidebarOpened\\\" perfectScrollbar></app-menu>\\n  <div class=\\\"container\\\" [class.wide]=\\\"!isSidebarOpened\\\">\\n    <div class=\\\"page-wrapper\\\">\\n      <router-outlet (activate)=\\\"onRouteActivate($event)\\\"></router-outlet>\\n      <app-toc [contentReference]=\\\"contentRef\\\"></app-toc>\\n    </div>\\n    <div class=\\\"sponsors-wrapper\\\">\\n      <div class=\\\"sponsors-container\\\">\\n        <h3>Support us</h3>\\n        <p>Nest is an MIT-licensed open source project. It can grow thanks to the support by these awesome people. If\\n          you'd\\n          like to join them, please read more\\n          <a routerLink=\\\"/support\\\">here</a>.</p>\\n        <div class=\\\"row clearfix\\\">\\n          <div class=\\\"inline-column\\\">\\n            <h4 class=\\\"title\\\">Principal Sponsor</h4>\\n            <a href=\\\"https://valor-software.com/\\\">\\n              <img src=\\\"https://docs.nestjs.com/assets/sponsors/valor-software.png\\\" class=\\\"logo-sponsor\\\" />\\n            </a>\\n          </div>\\n          <div class=\\\"inline-column\\\">\\n            <h4 class=\\\"title\\\">Sponsors / Backers</h4>\\n            <a href=\\\"http://www.xtremis.com/en\\\">\\n              <img src=\\\"https://nestjs.com/logo-xtremis.0feb160c.svg\\\" class=\\\"logo-sponsor-small\\\" />\\n            </a>\\n            <div class=\\\"backers-wrapper\\\">\\n              <a href=\\\"https://opencollective.com/nest/backer/{{ id }}/website\\\" *ngFor=\\\"let id of backerIds\\\" target=\\\"_blank\\\">\\n                <img src=\\\"https://opencollective.com/nest/backer/{{ id }}/avatar.svg\\\">\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n        <!--<a href=\\\"https://opencollective.com/nest\\\" class=\\\"btn btn-primary\\\" target=\\\"blank\\\">\\n            Become a sponsor\\n          </a>-->\\n      </div>\\n    </div>\\n    <app-footer>\\n      <p>\\n        Made by\\n        <a href=\\\"https://kamilmysliwiec.com\\\" title=\\\"Kamil Mysliwiec Blog | Full-Stack Software Engineer\\\">\\n          Kamil Myśliwiec\\n        </a>\\n      </p>\\n    </app-footer>\\n  </div>\\n</div>\"","module.exports = \".transition, .container {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing, .container {\\n  box-sizing: border-box; }\\n\\n.container-fluid {\\n  position: relative;\\n  display: block;\\n  table-layout: fixed;\\n  width: 100%;\\n  min-height: 100vh; }\\n\\n.logo-wrapper svg,\\n.logo-wrapper img {\\n  width: 110px;\\n  height: 50px; }\\n\\n.container {\\n  margin-left: 300px;\\n  width: calc(100% - 300px);\\n  padding: 85px 50px 90px;\\n  display: inline-block;\\n  vertical-align: top;\\n  position: relative; }\\n\\n.container.wide {\\n    margin-left: 0;\\n    width: 100%;\\n    display: block; }\\n\\n@media only screen and (max-width: 1200px) {\\n    .container {\\n      margin-left: 300px;\\n      width: calc(100% - 300px); }\\n      .container.wide {\\n        width: 100%; } }\\n\\n@media only screen and (max-width: 767px) {\\n    .container {\\n      margin-left: 0;\\n      width: 100%;\\n      padding: 85px 20px 0; } }\\n\\n.page-wrapper {\\n  color: #404040;\\n  line-height: 26px; }\\n\\n.page-wrapper a {\\n    font-weight: 600;\\n    color: #ed2945; }\\n\\n.page-wrapper a:hover {\\n      color: #0894e2; }\\n\\n.page-wrapper h1,\\n  .page-wrapper h2,\\n  .page-wrapper h3,\\n  .page-wrapper h4,\\n  .page-wrapper h5,\\n  .page-wrapper h6 {\\n    color: #191919; }\\n\\n.page-wrapper h3 {\\n    font-size: 24px;\\n    font-weight: 700;\\n    margin: 45px 0 20px; }\\n\\n.page-wrapper h5 {\\n    color: #404040;\\n    margin-top: -12px;\\n    font-weight: 600;\\n    font-size: 16px; }\\n\\n.page-wrapper h3:first-of-type {\\n    margin: 20px 0; }\\n\\n.page-wrapper p {\\n    text-align: justify; }\\n\\n.sponsors-wrapper {\\n  border-top: 1px solid #e8e8e8;\\n  padding: 10px 0 60px;\\n  margin-top: 20px;\\n  position: relative; }\\n\\n.sponsors-wrapper img {\\n    display: inline-block;\\n    vertical-align: middle; }\\n\\n.sponsors-wrapper a {\\n    color: #ed2945;\\n    font-weight: 600; }\\n\\n.sponsors-wrapper a:hover {\\n      color: #0894e2; }\\n\\n.sponsors-wrapper h3 {\\n    font-size: 24px;\\n    font-weight: 700;\\n    color: #1d1d1d; }\\n\\n.sponsors-wrapper h4 {\\n    color: #1b2247;\\n    font-weight: 600;\\n    margin: 0;\\n    font-size: 18px;\\n    margin: 30px 0 18px; }\\n\\n.sponsors-wrapper .title {\\n    margin: 50px 0 25px; }\\n\\n.sponsors-wrapper p {\\n    margin: 0;\\n    line-height: 26px;\\n    font-size: 16px;\\n    font-weight: 500;\\n    color: #4e4e4e; }\\n\\n.sponsors-wrapper .logo-sponsor {\\n    width: 280px; }\\n\\n.sponsors-wrapper .logo-sponsor-small {\\n    width: 150px;\\n    margin-right: 20px;\\n    margin-bottom: 10px; }\\n\\n.sponsors-wrapper .btn-primary {\\n    border: 2px solid #ed2945;\\n    color: #ed2945;\\n    padding: 12px 20px;\\n    display: inline-block;\\n    position: absolute;\\n    right: 40px;\\n    top: 50px; }\\n\\n.sponsors-wrapper .btn-primary:hover {\\n      color: #0894e2;\\n      border-color: #0894e2; }\\n\\n@media only screen and (max-width: 767px) {\\n      .sponsors-wrapper .btn-primary {\\n        position: static;\\n        margin-top: 30px; } }\\n\\n.backers-wrapper {\\n  margin-top: 10px; }\\n\\n.backers-wrapper img {\\n    width: 30px;\\n    border-radius: 50%;\\n    -webkit-border-radius: 50%; }\\n\\n.inline-column {\\n  width: 50%;\\n  vertical-align: top;\\n  margin: 0;\\n  float: left; }\\n\\n@media only screen and (max-width: 991px) {\\n    .inline-column {\\n      width: 100%;\\n      float: none; } }\\n\\n.toc-wrapper,\\n.content {\\n  display: inline-block;\\n  vertical-align: top; }\\n\\n.content {\\n  width: calc(100% - 220px); }\\n\\n@media only screen and (max-width: 1200px) {\\n    .content {\\n      width: 100%; } }\\n\\n@media only screen and (max-width: 1200px) {\\n  .toc-wrapper {\\n    display: none; } }\\n\\n.company-logo {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 10px 20px; }\\n\\n.company-logo img {\\n  max-width: 130px;\\n  max-height: 90px;\\n  -webkit-filter: grayscale(100%);\\n  filter: grayscale(100%);\\n  opacity: 0.5; }\\n\\n.company-logo img:hover {\\n    -webkit-filter: grayscale(0%);\\n    filter: grayscale(0%);\\n    opacity: 1; }\\n\\n.companies-list a {\\n  color: #404040;\\n  font-size: 15px;\\n  font-weight: 400; }\\n\"","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BasePageComponent } from './pages/page/page.component';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomepageComponent implements OnInit, AfterViewInit {\n  isSidebarOpened = true;\n  previousWidth: number;\n  contentRef: HTMLElement;\n  isMarkupReady: boolean;\n  backerIds = Array.from({ length: 50 }, (_, i) => i);\n\n  constructor(\n    private readonly cd: ChangeDetectorRef,\n    private readonly router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.router.events.filter(e => e instanceof NavigationEnd).subscribe(() => {\n      if (window.innerWidth > 768) {\n        return false;\n      }\n      this.isSidebarOpened = false;\n      this.cd.detectChanges();\n    });\n  }\n\n  ngAfterViewInit() {\n    this.checkWindowWidth(window.innerWidth);\n  }\n\n  toggleSidebar() {\n    this.isSidebarOpened = !this.isSidebarOpened;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    this.checkWindowWidth(event.target.innerWidth);\n  }\n\n  checkWindowWidth(innerWidth?: number) {\n    innerWidth = innerWidth ? innerWidth : window.innerWidth;\n    if (this.previousWidth !== innerWidth && innerWidth <= 768) {\n      this.previousWidth = innerWidth;\n      this.isSidebarOpened = false;\n      this.cd.detectChanges();\n    }\n  }\n\n  onRouteActivate(component: BasePageComponent) {\n    if (!component) {\n      return;\n    }\n    const nativeElement = component.nativeElement;\n    if (!nativeElement) {\n      return;\n    }\n    this.contentRef = nativeElement.querySelector('.content');\n    this.cd.markForCheck();\n  }\n}\n","module.exports = \"<div class=\\\"nav-item\\\" [class.opened]=\\\"isOpen\\\" *ngIf=\\\"children; else withoutChildren\\\">\\n  <div class=\\\"heading\\\" (click)=\\\"toggle()\\\">\\n    <h3>{{ title }}</h3>\\n    <i class=\\\"fa fa-angle-right arrow-icon\\\"></i>\\n  </div>\\n  <ul class=\\\"sub-nav\\\">\\n    <li *ngFor=\\\"let item of children\\\">\\n      <a *ngIf=\\\"!item.externalUrl\\\"\\n         [class.pending]=\\\"item.isPending\\\"\\n         [routerLink]=\\\"item.path\\\"\\n         routerLinkActive=\\\"active\\\"\\n         [routerLinkActiveOptions]=\\\"{ exact: true }\\\">{{ item.title }}</a>\\n      <a *ngIf=\\\"!!item.externalUrl\\\" href=\\\"{{ item.externalUrl }}\\\" target=\\\"blank\\\">{{ item.title }}</a>\\n    </li>\\n  </ul>\\n</div>\\n<ng-template #withoutChildren>\\n  <div class=\\\"heading\\\">\\n    <a *ngIf=\\\"!externalUrl\\\"\\n       [routerLink]=\\\"path\\\"\\n       routerLinkActive=\\\"active\\\"\\n       [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><h3>{{ title }}</h3></a>\\n    <a *ngIf=\\\"!!externalUrl\\\" href=\\\"{{ externalUrl }}\\\" target=\\\"blank\\\"><h3>{{ title }}</h3></a>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".transition, h3, .arrow-icon {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing {\\n  box-sizing: border-box; }\\n\\n:host {\\n  position: relative;\\n  display: block; }\\n\\nh3 {\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  color: #191919;\\n  font-size: 16px;\\n  letter-spacing: 0.1px;\\n  margin: 18px 0; }\\n\\nh3:hover {\\n    color: #ed2945; }\\n\\n.active h3 {\\n  color: #ed2945; }\\n\\n.arrow-icon {\\n  position: absolute;\\n  top: 1px;\\n  right: 20px;\\n  font-size: 20px;\\n  cursor: pointer; }\\n\\nli {\\n  display: block;\\n  padding: 4px 0; }\\n\\nli:first-of-type {\\n    padding-top: 0; }\\n\\nli a {\\n    color: #191919;\\n    font-size: 15px;\\n    text-decoration: none;\\n    cursor: pointer; }\\n\\nli a:hover {\\n      color: #ed2945; }\\n\\nli a.active {\\n      font-weight: 600; }\\n\\nli .pending {\\n    color: #afafaf !important;\\n    pointer-events: none; }\\n\\n.nav-item ul {\\n  display: none;\\n  margin: 10px 0 15px; }\\n\\n.nav-item.opened ul {\\n  display: block; }\\n\\n.nav-item.opened .arrow-icon {\\n  -webkit-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n  color: #ed2945; }\\n\\n.heading {\\n  cursor: pointer; }\\n\\n.heading:hover .arrow-icon {\\n    color: #ed2945; }\\n\\nul {\\n  padding-left: 15px; }\\n\"","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuItemComponent {\n  @Input() isOpen = false;\n  @Input() children = [];\n  @Input() path: string;\n  @Input() title: string;\n  @Input() externalUrl: string;\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","module.exports = \"<nav class=\\\"nav-container\\\" (click)=\\\"$event.stopPropagation()\\\">\\n  <app-menu-item \\n    *ngFor=\\\"let item of items\\\"\\n    [isOpen]=\\\"item.isOpened\\\"\\n    [title]=\\\"item.title\\\"\\n    [externalUrl]=\\\"item?.externalUrl\\\"\\n    [path]=\\\"item?.path\\\"\\n    [children]=\\\"item.children\\\"\\n    class=\\\"nav-item\\\"\\n  ></app-menu-item>\\n</nav> \"","module.exports = \".transition, :host {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing, :host {\\n  box-sizing: border-box; }\\n\\n:host {\\n  -webkit-transform: translateX(-100%);\\n  transform: translateX(-100%);\\n  padding: 90px 30px 40px 45px;\\n  width: 300px;\\n  background: #f9f9f9;\\n  box-shadow: inset -35px -18px 70px rgba(233, 233, 233, 0.25);\\n  position: fixed !important;\\n  border-right: 1px solid #efefef;\\n  bottom: 0;\\n  top: 0;\\n  z-index: 1000;\\n  overflow: hidden; }\\n\\n:host.opened {\\n    -webkit-transform: translateX(0);\\n    transform: translateX(0); }\\n\\n@media only screen and (max-width: 1200px) {\\n    :host {\\n      width: 300px; } }\\n\\n@media only screen and (max-width: 991px) {\\n    :host.opened {\\n      z-index: 1000;\\n      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1); } }\\n\\n@media only screen and (max-width: 767px) {\\n    :host {\\n      padding: 20px 25px 20px 25px; } }\\n\\n@media only screen and (max-width: 480px) {\\n    :host {\\n      width: 100%; } }\\n\\n.nav-item {\\n  margin: 0 -10px;\\n  padding: 0 10px; }\\n\\n.nav-item:last-of-type {\\n    border: 0; }\\n\\n.nav-item h3 {\\n    margin: 20px 0; }\\n\"","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MenuComponent implements OnInit {\n  @Input()\n  isSidebarOpened = true;\n  readonly items = [\n    {\n      title: 'Introduction',\n      isOpened: false,\n      path: '/',\n    },\n    {\n      title: 'Overview',\n      isOpened: true,\n      children: [\n        { title: 'First steps', path: '/first-steps' },\n        { title: 'Controllers', path: '/controllers' },\n        { title: 'Providers', path: '/providers' },\n        { title: 'Modules', path: '/modules' },\n        { title: 'Middleware', path: '/middleware' },\n        { title: 'Exception filters', path: '/exception-filters' },\n        { title: 'Pipes', path: '/pipes' },\n        { title: 'Guards', path: '/guards' },\n        { title: 'Interceptors', path: '/interceptors' },\n        { title: 'Custom decorators', path: '/custom-decorators' },\n      ],\n    },\n    {\n      title: 'Fundamentals',\n      isOpened: false,\n      children: [\n        { title: 'Custom providers', path: '/fundamentals/custom-providers' },\n        {\n          title: 'Asynchronous providers',\n          path: '/fundamentals/async-providers',\n        },\n        {\n          title: 'Circular dependency',\n          path: '/fundamentals/circular-dependency',\n        },\n        {\n          title: 'Platform agnosticism',\n          path: '/fundamentals/platform-agnosticism',\n        },\n        { title: 'Testing', path: '/fundamentals/unit-testing' },\n      ],\n    },\n    {\n      title: 'Techniques',\n      isOpened: false,\n      children: [\n        { title: 'Authentication', path: '/techniques/authentication' },\n        { title: 'Database', path: '/techniques/database' },\n        { title: 'Mongo', path: '/techniques/mongodb' },\n        { title: 'File upload', path: '/techniques/file-upload' },\n        { title: 'Validation', path: '/techniques/validation' },\n        { title: 'Caching', path: '/techniques/caching' },\n        { title: 'Serialization', path: '/techniques/serialization' },\n        { title: 'Logger', path: '/techniques/logger' },\n        { title: 'Security', path: '/techniques/security' },\n        { title: 'Configuration', path: '/techniques/configuration' },\n        { title: 'Compression', path: '/techniques/compression' },\n        { title: 'HTTP module', path: '/techniques/http-module' },\n        { title: 'Model-View-Controller', path: '/techniques/mvc' },\n        { title: 'Performance (Fastify)', path: '/techniques/performance' },\n        { title: 'Hot reload (Webpack)', path: '/techniques/hot-reload' },\n      ],\n    },\n    {\n      title: 'GraphQL',\n      isOpened: false,\n      children: [\n        { title: 'Quick start', path: '/graphql/quick-start' },\n        { title: 'Resolvers', path: '/graphql/resolvers-map' },\n        { title: 'Mutations', path: '/graphql/mutations' },\n        { title: 'Subscriptions', path: '/graphql/subscriptions' },\n        { title: 'Scalars', path: '/graphql/scalars' },\n        {\n          title: 'Tooling',\n          path: '/graphql/tooling',\n        },\n        // { title: 'Schema stitching', path: '/graphql/schema-stitching' },\n      ],\n    },\n    {\n      title: 'WebSockets',\n      isOpened: false,\n      children: [\n        { title: 'Gateways', path: '/websockets/gateways' },\n        { title: 'Exception filters', path: '/websockets/exception-filters' },\n        { title: 'Pipes', path: '/websockets/pipes' },\n        { title: 'Guards', path: '/websockets/guards' },\n        { title: 'Interceptors', path: '/websockets/interceptors' },\n        { title: 'Adapters', path: '/websockets/adapter' },\n      ],\n    },\n    {\n      title: 'Microservices',\n      isOpened: false,\n      children: [\n        { title: 'Basics', path: '/microservices/basics' },\n        { title: 'Redis', path: '/microservices/redis' },\n        { title: 'MQTT', path: '/microservices/mqtt' },\n        { title: 'NATS', path: '/microservices/nats' },\n        { title: 'RabbitMQ', path: '/microservices/rabbitmq' },\n        { title: 'gRPC', path: '/microservices/grpc' },\n        {\n          title: 'Exception filters',\n          path: '/microservices/exception-filters',\n        },\n        { title: 'Pipes', path: '/microservices/pipes' },\n        { title: 'Guards', path: '/microservices/guards' },\n        { title: 'Interceptors', path: '/microservices/interceptors' },\n      ],\n    },\n    {\n      title: 'Execution context',\n      isOpened: false,\n      path: '/execution-context',\n    },\n    {\n      title: 'Recipes',\n      isOpened: false,\n      children: [\n        { title: 'TypeORM', path: '/recipes/sql-typeorm' },\n        { title: 'Mongoose', path: '/recipes/mongodb' },\n        { title: 'Sequelize', path: '/recipes/sql-sequelize' },\n        // { title: 'Authentication (Passport)', path: '/recipes/passport' },\n        { title: 'CQRS', path: '/recipes/cqrs' },\n        { title: 'OpenAPI (Swagger)', path: '/recipes/swagger' },\n        { title: 'Prisma', path: '/recipes/prisma' },\n      ],\n    },\n    {\n      title: 'CLI',\n      isOpened: false,\n      children: [\n        { title: 'Overview', path: '/cli/overview' },\n        { title: 'Usage', path: '/cli/usages' },\n      ],\n    },\n    {\n      title: 'FAQ',\n      isOpened: false,\n      children: [\n        { title: 'Express instance', path: '/faq/express-instance' },\n        { title: 'Global path prefix', path: '/faq/global-prefix' },\n        { title: 'Lifecycle events', path: '/faq/lifecycle-events' },\n        { title: 'Hybrid application', path: '/faq/hybrid-application' },\n        { title: 'HTTPS & multiple servers', path: '/faq/multiple-servers' },\n        {\n          title: 'Examples',\n          externalUrl:\n            'https://github.com/kamilmysliwiec/nest/tree/master/sample',\n        },\n      ],\n    },\n    {\n      title: 'Discover',\n      isOpened: false,\n      children: [{ title: 'Who is using Nest?', path: '/discover/companies' }],\n    },\n    {\n      title: 'Migration guide',\n      isOpened: false,\n      path: '/migration-guide',\n    },\n    {\n      title: 'Support me',\n      isOpened: false,\n      path: '/support',\n    },\n    {\n      title: 'Version 4',\n      isOpened: false,\n      externalUrl: 'https://docs.nestjs.com/v4/',\n    },\n  ];\n\n  constructor(\n    private readonly route: ActivatedRoute,\n    private readonly router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.router.events\n      .filter(event => event instanceof NavigationEnd)\n      .subscribe(event => this.toggleCategory());\n\n    this.toggleCategory();\n  }\n\n  toggleCategory() {\n    const { firstChild } = this.route.snapshot;\n    if (firstChild.url && firstChild.url[1]) {\n      const { path } = firstChild.url[0];\n      const index = this.items.findIndex(\n        ({ title }) => title.toLowerCase() === path,\n      );\n      if (index < 0) {\n        return;\n      }\n      this.items[index].isOpened = true;\n      this.items[1].isOpened = false;\n    }\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Hierarchical Injector</h3>\\n  <p>\\n    The Nest injector is <strong>hierarchical</strong>. \\n    To understand this useful treat, you first have to get acquainted with the process of creating the class instance.\\n    When any class depends on the other class, the injector's trying to find the appropriate instance in the current <strong>scope</strong>.\\n    The current scope isn't always the module to which the class belongs to.\\n  </p>\\n  <p>\\n    Let's consider an example. We've a <code>CoreModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'core.module' | extension: coreModuleT.isJsActive }}\\n    <app-tabs #coreModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ coreModule }}</code></pre>\\n  <p>\\n    This module imports the <code>CommonModule</code> and contains 2 components, successively <code>CoreService</code> and <code>ContextService</code>.\\n    The <code>CommonModule</code> contains single component, the <code>CommonService</code>. This component is exported, so it's available within <code>CoreModule</code> as well.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'common.module' | extension: commonModuleT.isJsActive }}\\n    <app-tabs #commonModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ commonModule }}</code></pre>\\n  <p>\\n    Let's take a look at <code>ContextService</code> now:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'core/context.service' | extension: contextServiceT.isJsActive }}\\n    <app-tabs #contextServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"contextServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ contextService }}</code></pre>\\n  <pre [class.hide]=\\\"!contextServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ contextServiceJs }}</code></pre>\\n  <p>\\n    This class depends on the <code>CommonService</code>. This service's imported from the child module (<code>CommonModule</code>), so it's a typical situation.\\n    Now something that may turn out to be surprising, the <code>CommonService</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'common/common.service' | extension: commonServiceT.isJsActive }}\\n    <app-tabs #commonServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"commonServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ commonService }}</code></pre>\\n  <pre [class.hide]=\\\"!commonServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ commonServiceJs }}</code></pre>\\n  <p>\\n    The <code>CommonService</code> depends on the <code>CoreService</code>. It's possible, because the <code>CommonService</code> instance was resolved within the <code>CoreModule</code> <strong>context</strong> (was injected by the component, which belongs to the parent module).\\n  </p>\\n  <h4>Motivation</h4>\\n  <p>\\n    This technique makes possible to create reusable modules using <strong>boundless abstraction</strong>.\\n    Moreover, it allows overriding every component from the imported module using <a routerLink=\\\"/fundamentals/dependency-injection\\\">custom components</a> feature.\\n    For example, you can create a default implementation of the class inside the feature module, but then overload it inside the currently processed context.\\n  </p>\\n  <blockquote>\\n    <strong>Notice</strong> This technique is powerful, but also very dangerous. Be careful whenever you're gonna use this feature, and make sure that you exactly know what you're doing.\\n  </blockquote>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-hierarchical-injector',\n  templateUrl: './hierarchical-injector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HierarchicalInjectorComponent extends BasePageComponent {\n  get coreModule() {\n    return `\n@Module({\n  imports: [CommonModule],\n  components: [CoreService, ContextService],\n})\nexport class CoreModule {}`;\n  }\n\n  get commonModule() {\n    return `\n@Module({\n  components: [CommonService],\n  exports: [CommonService],\n})\nexport class CommonModule {}`;\n  }\n\n  get contextService() {\n    return `\n@Component()\nexport class ContextService {\n  constructor(private readonly commonService: CommonService) {}\n}`;\n  }\n\n  get contextServiceJs() {\n    return `\n@Component()\n@Dependencies(CommonService)\nexport class ContextService {\n  constructor(commonService) {\n    this.commonService = commonService;\n  }\n}`;\n  }\n\n  get commonService() {\n    return `\n@Component()\nexport class CommonService {\n  constructor(private readonly coreService: CoreService) {}\n}`;\n  }\n\n  get commonServiceJs() {\n    return `\n@Component()\n@Dependencies(CoreService)\nexport class CommonService {\n  constructor(coreService) {\n    this.coreService = coreService;\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Mixin Class</h3>\\n  <h5>This chapter applies only to TypeScript</h5>\\n  <p>\\n    TypeScript 2.2 adds support for the ECMAScript 2015 <a href=\\\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html\\\" target=\\\"blank\\\">mixin class pattern</a>.\\n    This pattern's quite useful since it's not easy to pass custom arguments to some Nest application building blocks, such as <a routerLink=\\\"/interceptors\\\">interceptors</a> or <a routerLink=\\\"/guards\\\">guards</a>.\\n    The <strong>mixin classes</strong> have much more applications, but here we're gonna focus on this single use-case.\\n  </p>\\n  <p>\\n    For demonstration purposes, let's rewrite the <code>CacheInterceptor</code> which we've built in the <a routerLink=\\\"/interceptors\\\">interceptors</a> section and extract the <code>isCached</code> condition.\\n  </p>\\n  <span class=\\\"filename\\\">cache.interceptor.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ cacheInterceptor }}</code></pre>\\n  <p>\\n    Now the <code>CacheInterceptor</code> is abstract and contains the single abstract member - the <code>isCached</code> function.\\n    Based on this class, we're gonna create the <code>mixinCacheInterceptor</code> function.\\n  </p>\\n  <span class=\\\"filename\\\">mixin-cache.interceptor.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ mixinCacheInterceptor }}</code></pre>\\n  <blockquote>\\n    <strong>Notice</strong> The <code>mixin()</code> is a helper function. Use it whenever you wanna create a mixin class.\\n  </blockquote>\\n  <p>\\n    This function takes the <code>isCached()</code> predicate as an argument and assigns it to the mixin class.\\n    The last step is to set up the interceptor:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ setup }}</code></pre>\\n  <p>\\n    The <code>mixin()</code> function returns the class, so you can use it in the same manner as a plain, self-created classes.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mixin-components',\n  templateUrl: './mixin-components.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MixinComponentsComponent extends BasePageComponent {\n  get cacheInterceptor() {\n    return `\nimport { Interceptor, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Interceptor()\nexport abstract class CacheInterceptor implements NestInterceptor {\n  protected abstract readonly isCached: () => boolean;\n\n  intercept(dataOrRequest, context: ExecutionContext, stream$: Observable<any>): Observable<any> {\n    if (this.isCached()) {\n      return Observable.of([]);\n    }\n    return stream$;\n  }\n}`;\n  }\n\n  get mixinCacheInterceptor() {\n    return `\nimport { mixin } from '@nestjs/common';\nimport { CacheInterceptor } from './cache.interceptor';\n\nexport function mixinCacheInterceptor(isCached: () => boolean) {\n  return mixin(class extends CacheInterceptor {\n    protected readonly isCached = isCached;\n  });\n}`;\n  }\n\n  get setup() {\n    return `\n@UseInterceptors(mixinCacheInterceptor(() => true))\nasync findAll(): Promise<Cat[]> {\n  return this.catsService.findAll();\n}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CliOverviewComponent } from './overview/overview.component';\nimport { CliUsagesComponent } from './usages/usages.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CliOverviewComponent, CliUsagesComponent],\n  exports: [CliOverviewComponent, CliUsagesComponent],\n})\nexport class CliModule {}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Overview</h3>\\n  <p>\\n    In order to help people manage their projects, the <a href=\\\"https://github.com/nestjs/nest-cli\\\" target=\\\"_blank\\\">CLI</a>\\n    tool has been created. It helps on many grounds at once, from scaffolding the project to building well-structured\\n    applications. The Nest CLI is based on the <a href=\\\"https://github.com/angular/devkit\\\" target=\\\"_blank\\\">@angular-devkit</a>\\n    package.\\n    Also, there're special schematics that are dedicated to the Nest development <a href=\\\"https://github.com/nestjs/schematics\\\"\\n      target=\\\"_blank\\\">@nestjs/schematics</a>.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>Install CLI using <strong>NPM</strong>:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm install -g @nestjs/cli</code></pre>\\n  <h4>Contribute</h4>\\n  <p>\\n    You can participate and contribute to the project <a href=\\\"https://github.com/nestjs/nest-cli\\\" target=\\\"_blank\\\">here</a>.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CliOverviewComponent extends BasePageComponent {}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Usage</h3>\\n  <p>\\n    In order to achieve a high user-experience, the CLI commands share the same command schema.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ nest [command] [...options]</code></pre>\\n  <h4>Options</h4>\\n  <p>\\n    Each command accepts a set of\\n    <strong>options</strong> that are listed below:\\n  </p>\\n  <ul>\\n    <li>\\n      <strong>--dry-run</strong>: allows to simulate the command execution in order to verify how it will affect your working\\n      directory\\n    </li>\\n  </ul>\\n  <h4>new (alias: n)</h4>\\n  <p>\\n    The\\n    <strong>new</strong> command generates a Nest project based on the <a href=\\\"https://github.com/nestjs/typescript-starter\\\"\\n      target=\\\"blank\\\">typescript-starter</a> as well as install the required packages. The CLI will ask you for missing information\\n    to create the project, for example, which package manager do you want to use to install dependencies.\\n  </p>\\n  <table>\\n    <tr>\\n      <th>Option</th>\\n      <th>Description</th>\\n      <th>Required</th>\\n      <th>Default value</th>\\n    </tr>\\n    <tr>\\n      <td>name</td>\\n      <td>Your application name</td>\\n      <td>false</td>\\n      <td>nest-app-name</td>\\n    </tr>\\n    <tr>\\n      <td>description</td>\\n      <td>Your application description</td>\\n      <td>false</td>\\n      <td>description</td>\\n    </tr>\\n    <tr>\\n      <td>version</td>\\n      <td>Your application version</td>\\n      <td>false</td>\\n      <td>1.0.0</td>\\n    </tr>\\n    <tr>\\n      <td>author</td>\\n      <td>Your application author</td>\\n      <td>false</td>\\n      <td>''</td>\\n    </tr>\\n  </table>\\n  <p>\\n    Example usage:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ nest new my-awesome-app</code>\\nOR <code class=\\\"language-bash\\\">\\n$ nest n my-awesome-app</code></pre>\\n  <h4>generate (alias: g)</h4>\\n  <p>\\n    The\\n    <strong>generate</strong> command generates a Nest architecture component.\\n  </p>\\n  <table>\\n    <tr>\\n      <th>Option</th>\\n      <th>Description</th>\\n      <th>Required</th>\\n      <th>Default value</th>\\n    </tr>\\n    <tr>\\n      <td>schematic</td>\\n      <td>The schematic name from the list bellow.</td>\\n      <td>true</td>\\n      <td>N/A</td>\\n    </tr>\\n    <tr>\\n      <td>name</td>\\n      <td>The name of the generated Nest architecture component.</td>\\n      <td>true</td>\\n      <td>N/A</td>\\n    </tr>\\n    <tr>\\n      <td>path</td>\\n      <td>The path from to generate the Nest architecture component.</td>\\n      <td>false</td>\\n      <td>src</td>\\n    </tr>\\n  </table>\\n  <p>A list of available architecture components:</p>\\n  <ul>\\n    <li>class (alias: cl)</li>\\n    <li>controller (alias: co)</li>\\n    <li>decorator (alias: d)</li>\\n    <li>exception (alias: e)</li>\\n    <li>filter (alias: f)</li>\\n    <li>gateway (alias: ga)</li>\\n    <li>guard (alias: gu)</li>\\n    <li>interceptor (alias: i)</li>\\n    <li>middleware (alias: mi)</li>\\n    <li>module (alias: mo)</li>\\n    <li>pipe (alias: pi)</li>\\n    <li>provider (alias: pr)</li>\\n    <li>service (alias: s)</li>\\n  </ul>\\n  <p>\\n    Example usage:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ nest generate service users\\nOR\\n$ nest g s users</code></pre>\\n  <h4>info (alias: i)</h4>\\n  <p>\\n    The\\n    <strong>info</strong> command will display your project information.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ nest info\\n _   _             _      ___  _____  _____  _     _____\\n| \\\\ | |           | |    |_  |/  ___|/  __ \\\\| |   |_   _|\\n|  \\\\| |  ___  ___ | |_     | |\\\\ `--. | /  \\\\/| |     | |\\n| . ` | / _ \\\\/ __|| __|    | | `--. \\\\| |    | |     | |\\n| |\\\\  ||  __/\\\\__ \\\\| |_ /\\\\__/ //\\\\__/ /| \\\\__/\\\\| |_____| |_\\n\\\\_| \\\\_/ \\\\___||___/ \\\\__|\\\\____/ \\\\____/  \\\\____/\\\\_____/\\\\___/\\n\\n[System Information]\\nOS Version     : macOS High Sierra\\nNodeJS Version : v8.9.0\\nYARN Version    : 1.5.1\\n[Nest Information]\\nmicroservices version : 5.0.0\\nwebsockets version    : 5.0.0\\ntesting version       : 5.0.0\\ncommon version        : 5.0.0\\ncore version          : 5.0.0</code>\\n  </pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-usages',\n  templateUrl: './usages.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CliUsagesComponent extends BasePageComponent {}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Providers</h3>\\n  <p>\\n    Basically, almost everything may be considered as a provider – service, repository, factory, helper, and so on. All\\n    of them\\n    can <strong>inject</strong> dependencies through <code>constructor</code>, meaning, they can create various\\n    relationships\\n    with each other. But in fact, a provider is nothing else than just a simple class annotated with an <code>@Injectable()</code>\\n    decorator.\\n  </p>\\n  <figure><img src=\\\"/assets/Components_1.png\\\" /></figure>\\n  <p>\\n    In the previous chapter, we have built a simple <code>CatsController</code>. Controllers shall handle HTTP requests\\n    and\\n    delegate more complex tasks to the <strong>services</strong>. The providers are plain JavaScript classes with an\\n    <code>@Injectable()</code> decorator\\n    on top of them.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Since Nest enables the possibility to design and organize the dependencies in a more OO-way,\\n    we\\n    strongly recommend following the <strong>SOLID</strong> principles.\\n  </blockquote>\\n  <h4>Services</h4>\\n  <p>\\n    Let's start by creating a simple <code>CatsService</code> provider.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.service' | extension: catsServiceT.isJsActive }}\\n    <app-tabs #catsServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsService }}</code></pre>\\n  <pre [class.hide]=\\\"!catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsServiceJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    To create a service using CLI, simply execute <code>$ nest g service cats/cats</code> command.\\n  </blockquote>\\n  <p>\\n    Here's a <code>CatsService</code>, a basic class with one property and two methods. The only new trait is that it\\n    uses\\n    the <code>@Injectable()</code> decorator. The <code>@Injectable()</code> attaches the metadata, thereby Nest knows\\n    that\\n    this class is a Nest provider. Notice that there is a <code>Cat</code> interface used above. We didn't mention it\\n    because\\n    the schema is exactly same as in the <code>CreateCatDto</code> class which we have created in the previous chapter.\\n    <p>\\n      Since we have the service class already done, let's use it inside the <code>CatsController</code>:\\n    </p>\\n    <span class=\\\"filename\\\">\\n      {{ 'cats.controller' | extension: catsServiceT.isJsActive }}\\n      <app-tabs #catsControllerT></app-tabs>\\n    </span>\\n    <pre [class.hide]=\\\"catsControllerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsController }}</code></pre>\\n    <pre [class.hide]=\\\"!catsControllerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsControllerJs }}</code></pre>\\n    <p>\\n      The <code>CatsService</code> is injected through the class constructor. Don't be afraid of the <code>private readonly</code>\\n      shortened\\n      syntax. It means that we've created and initialized the <code>catsService</code> member immedietely in the same\\n      location.\\n    </p>\\n    <h4>Dependency injection</h4>\\n    <p>\\n      Nest is built around the strong design pattern commonly known as <strong>Dependency injection</strong>. We\\n      recommend\\n      to read a great article about this concept in the official <a href=\\\"https://angular.io/guide/dependency-injection\\\"\\n        target=\\\"blank\\\">Angular</a>\\n      documentation.\\n    </p>\\n    <p>\\n      In Nest, thanks to the <strong>TypeScript</strong> capabilities, it's extremely easy to manage dependencies\\n      because\\n      they will be resolved just by type and afterward, passed to your controller's constructor:\\n    </p>\\n    <pre><code class=\\\"language-typescript\\\">{{ constructorSyntax }}</code></pre>\\n    <h4>Custom providers</h4>\\n    <p>\\n      An inversion of control container, that Nest makes use of to resolve relationships between providers, is far more\\n      powerful\\n      than described above. The <code>@Injectable()</code> decorator is only a tip of an iceberg, not strictly required\\n      to define providers. Instead, you can use plain values, classes, either asynchronous or synchronous factories.\\n      Look\\n      <a routerLink=\\\"/fundamentals/dependency-injection\\\">here</a> to find more examples.\\n    </p>\\n    <h4>Optional providers</h4>\\n    <p>\\n      Occasionally, you might face relations which do not necessarily have to be resolved. For instance, your class may\\n      depend\\n      on a <strong>configuration object</strong>, but if none was passed, the default values should be used. In such\\n      case, the relation becomes optional, because lack of the configuration provider wouldn't lead to errors.\\n    </p>\\n    <p>\\n      To ensure that provider isn't required, use <code>@Optional()</code> decorator in the <code>constructor</code>\\n      signature.\\n    </p>\\n    <pre><code class=\\\"language-typescript\\\">{{ optional }}</code></pre>\\n    <h4>Property-based injection</h4>\\n    <p>\\n      In some very specific cases, a property-based injection might be useful. For instance, if your top-level class\\n      depends on either one or multiple providers, passing them all the way up by calling <code>super()</code>\\n      in sub-classes from the constructor can be very annonying. Thus, in order to avoid it, you can use <code>@Inject()</code>\\n      decorator on\\n      a property level.\\n    </p>\\n    <pre><code class=\\\"language-typescript\\\">{{ propertyInjection }}</code></pre>\\n    <blockquote class=\\\"warning\\\">\\n      <strong>Warning</strong>\\n      If your class doesn't extend any other provider, you should always prefer using\\n      <strong>constructor-based</strong>\\n      injection.\\n    </blockquote>\\n    <h4>Provider registration</h4>\\n    <p>\\n      The last thing is to tell the module that something called <code>CatsService</code> truly exists. We do this by\\n      editing\\n      our module file - <code>app.module.ts</code>, and put the service into the <code>providers</code> array of the\\n      <code>@Module()</code> decorator.\\n    </p>\\n    <span class=\\\"filename\\\">\\n      {{ 'app.module' | extension: appModuleT.isJsActive }}\\n      <app-tabs #appModuleT></app-tabs>\\n    </span>\\n    <pre><code class=\\\"language-typescript\\\">{{ appModule }}</code></pre>\\n    <p>\\n      Thanks to that, Nest will be able to resolve the dependencies of the <code>CatsController</code> class. This is\\n      how\\n      our directory structure looks right now:\\n    </p>\\n    <div class=\\\"file-tree\\\">\\n      <div class=\\\"item\\\">src</div>\\n      <div class=\\\"children\\\">\\n        <div class=\\\"item\\\">cats</div>\\n        <div class=\\\"children\\\">\\n          <div class=\\\"item\\\">dto</div>\\n          <div class=\\\"children\\\">\\n            <div class=\\\"item\\\">create-cat.dto.ts</div>\\n          </div>\\n          <div class=\\\"item\\\">interfaces</div>\\n          <div class=\\\"children\\\">\\n            <div class=\\\"item\\\">cat.interface.ts</div>\\n          </div>\\n          <div class=\\\"item\\\">cats.service.ts</div>\\n          <div class=\\\"item\\\">cats.controller.ts</div>\\n        </div>\\n        <div class=\\\"item\\\">app.module.ts</div>\\n        <div class=\\\"item\\\">main.ts</div>\\n      </div>\\n    </div>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-components',\n  templateUrl: './components.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ComponentsComponent extends BasePageComponent {\n  get catsService() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\n\n@Injectable()\nexport class CatsService {\n  private readonly cats: Cat[] = [];\n\n  create(cat: Cat) {\n    this.cats.push(cat);\n  }\n\n  findAll(): Cat[] {\n    return this.cats;\n  }\n}\n`;\n  }\n\n  get catsServiceJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CatsService {\n  constructor() {\n    this.cats = [];\n  }\n\n  create(cat) {\n    this.cats.push(cat);\n  }\n\n  findAll() {\n    return this.cats;\n  }\n}\n`;\n  }\n\n  get catsController() {\n    return `\nimport { Controller, Get, Post, Body } from '@nestjs/common';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { CatsService } from './cats.service';\nimport { Cat } from './interfaces/cat.interface';\n\n@Controller('cats')\nexport class CatsController {\n  constructor(private readonly catsService: CatsService) {}\n\n  @Post()\n  async create(@Body() createCatDto: CreateCatDto) {\n    this.catsService.create(createCatDto);\n  }\n\n  @Get()\n  async findAll(): Promise<Cat[]> {\n    return this.catsService.findAll();\n  }\n}`;\n  }\n\n  get catsControllerJs() {\n    return `\nimport { Controller, Get, Post, Body, Bind, Dependencies } from '@nestjs/common';\nimport { CatsService } from './cats.service';\n\n@Controller('cats')\n@Dependencies(CatsService)\nexport class CatsController {\n  constructor(catsService) {\n    this.catsService = catsService;\n  }\n\n  @Post()\n  @Bind(Body())\n  async create(createCatDto) {\n    this.catsService.create(createCatDto);\n  }\n\n  @Get()\n  async findAll() {\n    return this.catsService.findAll();\n  }\n}`;\n  }\n\n  get constructorSyntax() {\n    return `\nconstructor(private readonly catsService: CatsService) {}`;\n  }\n\n  get appModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats/cats.controller';\nimport { CatsService } from './cats/cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class ApplicationModule {}\n`;\n  }\n\n  get optional() {\n    return `\nimport { Injectable, Optional, Inject } from '@nestjs/common';\n\n@Injectable()\nexport class HttpService<T> {\n  constructor(\n    @Optional() @Inject('HTTP_OPTIONS') private readonly httpClient: T,\n  ) {}\n}`;\n  }\n\n  get propertyInjection() {\n    return `\nimport { Injectable, Inject } from '@nestjs/common';\n\n@Injectable()\nexport class HttpService<T> {\n  @Inject('HTTP_OPTIONS')\n  private readonly httpClient: T;\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Controllers</h3>\\n  <p>\\n    Controllers are responsible for handling incoming <strong>requests</strong> and returning <strong>responses</strong>\\n    to the client.</p>\\n  <figure><img src=\\\"/assets/Controllers_1.png\\\" /></figure>\\n  <p>\\n    A controller's purpose is to receive specific requests for the application. The <strong>routing</strong> mechanism\\n    controls\\n    which controller receives which requests. Frequently, each controller has more than one route, and different routes\\n    can\\n    perform different actions.\\n  </p>\\n  <p>\\n    In order to create a basic controller, we use classes and <strong>decorators</strong>. Decorators associate classes\\n    with\\n    required metadata and enable Nest to create a routing map (tie requests to the corresponding controllers).\\n  </p>\\n  <h4>Routing</h4>\\n  <p>\\n    In the following example we'll use the <code>@Controller()</code> decorator which is <strong>required</strong> to\\n    define\\n    a basic controller. We'll specify an optional prefix of <code>cats</code>. Using a prefix in a Controller decorator\\n    allows\\n    us to avoid repeating ourselves when routes could potentially share a common prefix.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: catsControllerT.isJsActive }}\\n    <app-tabs #catsControllerT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catsController }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    To create a controller using CLI, simply execute <code>$ nest g controller cats</code> command.\\n  </blockquote>\\n  <p>\\n    The <code>@Get()</code> decorator before the <code>findAll()</code> method tells Nest to create an endpoint for\\n    this\\n    particular route path and map every corresponding request to this handler. Since we've declared a prefix for every\\n    route\\n    (\\n    <code>cats</code>), Nest will map every <code>/cats</code> <strong>GET</strong> request to this method.\\n  </p>\\n  <p>\\n    When a GET request is made to this endpoint, Nest will now return a 200 status code and the associated\\n    response, which in this case is just a string. Why does that happen? Generally, we distinguish <strong>two\\n      different\\n      approaches\\n    </strong> to manipulate responses:\\n  </p>\\n  <table>\\n    <tr>\\n      <td>Standard (recommended)</td>\\n      <td>\\n        When we return a JavaScript object or array, it'll be <strong>automatically</strong>\\n        serialized to JSON. When we return a string however, Nest will send just a string without attempting to\\n        serialize it.\\n        <br />\\n        <br /> Furthermore, the response's <strong>status code</strong> is always 200 by default, except for POST\\n        requests\\n        which use <strong>201</strong>. We can easily change this behaviour by adding the <code>@HttpCode(...)</code>\\n        decorator\\n        at a handler-level.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>Library-specific</td>\\n      <td>\\n        We can use the library specific <a href=\\\"http://expressjs.com/en/api.html#res\\\" target=\\\"blank\\\">response object</a>,\\n        which we can inject using the <code>@Res()</code> decorator in the function signature (e.g. <code>findAll(@Res() response)</code>).\\n      </td>\\n    </tr>\\n  </table>\\n  <blockquote>\\n    <strong>Warning</strong> It's forbidden to use both approaches at the same time. Nest detects whether the handler\\n    is\\n    using either <code>@Res()</code> or <code>@Next()</code>. If both approaches are used in the same time - the\\n    Standard\\n    approach is automatically disabled for this single route and will no longer work as expected.\\n  </blockquote>\\n  <h4>Request object</h4>\\n  <p>\\n    A lot of endpoints need access to the client <strong>request</strong> details. In fact, Nest is using a\\n    library-specific\\n    (express by default) <a href=\\\"http://expressjs.com/en/api.html#req\\\" target=\\\"blank\\\">request object</a>. As a result,\\n    we\\n    can force Nest to inject the request object into the handler using the <code>@Req()</code> decorator.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: requestObjectT.isJsActive }}\\n    <app-tabs #requestObjectT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"requestObjectT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ requestObject }}</code></pre>\\n  <pre [class.hide]=\\\"!requestObjectT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ requestObjectJs }}</code></pre>\\n  <p>\\n    The request object represents the HTTP request and has properties for the request query string, parameters, HTTP\\n    headers,\\n    and body (read more <a href=\\\"http://expressjs.com/en/api.html#req\\\" target=\\\"blank\\\">here</a>). In most cases, it's\\n    not necessary to grab these properties manually. We can use <strong>dedicated decorators</strong> instead, such as\\n    <code>@Body()</code> or\\n    <code>@Query()</code>, which are available out of the box. Below is a comparison of the provided decorators and the\\n    plain\\n    express objects they represent.\\n  </p>\\n  <table>\\n    <tbody>\\n      <tr>\\n        <td><code>@Request()</code></td>\\n        <td><code>req</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Response()</code></td>\\n        <td><code>res</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Next()</code></td>\\n        <td><code>next</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Session()</code></td>\\n        <td><code>req.session</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Param(param?: string)</code></td>\\n        <td><code>req.params</code> / <code>req.params[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Body(param?: string)</code></td>\\n        <td><code>req.body</code> / <code>req.body[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Query(param?: string)</code></td>\\n        <td><code>req.query</code> / <code>req.query[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Headers(param?: string)</code></td>\\n        <td><code>req.headers</code> / <code>req.headers[param]</code></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    To learn how to create your own custom decorators, visit <a routerLink=\\\"/custom-decorators\\\">this</a> chapter.\\n  </blockquote>\\n  <h4>Resources</h4>\\n  <p>\\n    We defined an endpoint to fetch the cats resource (<strong>GET</strong> route). It'll also be great to provide a\\n    way\\n    of creating new records as well. For this, let's create the <strong>POST</strong> handler:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: postEndpointT.isJsActive }}\\n    <app-tabs #postEndpointT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ postEndpoint }}</code></pre>\\n  <p>\\n    It's that simple. Nest provides the rest of those endpoint decorators in the same fashion -\\n    <code>@Put()</code>, <code>@Delete()</code>, <code>@Patch()</code>, <code>@Options()</code>, <code>@Head()</code>,\\n    and\\n    <code>@All()</code>. All of them represent respective HTTP request methods.\\n  </p>\\n  <h4>Route wildcards</h4>\\n  <p>\\n    Pattern based routes are supported as well. For instance, the asterisk is used as a wildcard, and will match any\\n    combination\\n    of characters.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ routeWildcards }}</code></pre>\\n  <p>\\n    Above route path will match <code>abcd</code>, <code>ab_cd</code>, <code>abecd</code>, and so on. The characters\\n    <code>?</code>,\\n    <code>+</code>, <code>*</code>, and <code>()</code> are subsets of their regular expression counterparts. The\\n    hyphen\\n    (\\n    <code>-</code>) and the dot (<code>.</code>) are interpreted literally by string-based paths.\\n  </p>\\n  <h4>Status code</h4>\\n  <p>\\n    As mentioned, the response <strong>status code</strong> is always <strong>200</strong> by default, except for POST\\n    requests\\n    which are <strong>201</strong>. We can easily change this behaviour by adding the <code>@HttpCode(...)</code>\\n    decorator\\n    at a handler-level.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ statusCode }}</code></pre>\\n  <p>\\n    Often, your status code isn't static but depends on various factors. In that case, you can use a library-specific\\n    <strong>response</strong>\\n    (inject using <code>@Res()</code>) object (or, in case of an error, throw an exception).\\n  </p>\\n  <h4>Headers</h4>\\n  <p>\\n    To specify a custom response header, you can either use a <code>@Header()</code> decorator or a library-specific\\n    response\\n    object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ header }}</code></pre>\\n  <h4>Route parameters</h4>\\n  <p>\\n    Routes with static paths can't help when you need to accept <strong>dynamic data</strong> as part of the URL. In\\n    order\\n    to define routes with parameters, we can directly particularise the route parameters in the path of the route.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ routeParameters }}</code></pre>\\n  <p>\\n    In order to pick up a particular parameter, simply pass its name in parenthesis.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ routeParameter }}</code></pre>\\n  <h4>Async/await</h4>\\n  <p>\\n    We love modern JavaScript and we know that data extraction is mostly <strong>asynchronous</strong>. That's why Nest\\n    supports\\n    and works well with <code>async</code> functions.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Learn more about <code>async / await</code>&nbsp;<a href=\\\"https://kamilmysliwiec.com/typescript-2-1-introduction-async-await\\\"\\n      target=\\\"blank\\\">here</a>!\\n  </blockquote>\\n  <p>\\n    Every async function has to return a <code>Promise</code>. It means that you can return a deferred value that Nest\\n    will\\n    be able to resolve by itself. Let's see an example of this below:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: asyncExampleT.isJsActive }}\\n    <app-tabs #asyncExampleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"asyncExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ asyncExample }}</code></pre>\\n  <pre [class.hide]=\\\"!asyncExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ asyncExampleJs }}</code></pre>\\n  <p>\\n    The above code is fully valid. Furthermore, Nest route handlers are even more powerful by being able to return Rx\\n    <a href=\\\"http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html\\\" target=\\\"blank\\\">observable streams</a>.\\n    Nest\\n    will automatically subscribe to the source underneath and take the last emitted value (once the stream is\\n    completed).\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: observableExampleT.isJsActive }}\\n    <app-tabs #observableExampleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"observableExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ observableExample }}</code></pre>\\n  <pre [class.hide]=\\\"!observableExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ observableExampleJs }}</code></pre>\\n  <p>\\n    Either of the above approaches work and you can use whatever fits your requirements.\\n  </p>\\n  <h4>Request payloads</h4>\\n  <p>\\n    Our previous example of the POST route handler didn't accept any client params. Let's fix this by adding the <code>@Body()</code>\\n    argument\\n    here.\\n  </p>\\n  <p>\\n    But first (if you use TypeScript), we need to determine the <strong>DTO</strong> (Data Transfer Object) schema. A\\n    DTO\\n    is an object that defines how the data will be sent over the network. We could determine the DTO schema by using\\n    <strong>TypeScript</strong>\\n    interfaces, or by simple classes. Surprisingly, we recommend using <strong>classes</strong> here. Why? Classes are\\n    part\\n    of the JavaScript ES6 standard, and therefore they represent plain functions. On the other hand, since TypeScript\\n    interfaces\\n    are removed during the transpilation, Nest can't refer to them. This is important because features such as <strong>Pipes</strong>\\n    enable additional possibilities when they have access to the metatype of the variable.\\n  </p>\\n  <p>\\n    Let's create the <code>CreateCatDto</code> class:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'create-cat.dto' | extension: createCatSchemaT.isJsActive }}\\n    <app-tabs #createCatSchemaT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatSchema }}</code></pre>\\n  <p>\\n    It has only three basic properties. All of them are marked as <code>readonly</code> because we should always try to\\n    make\\n    our functions as <a href=\\\"https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976\\\"\\n      target=\\\"blank\\\">pure</a> as possible.\\n  </p>\\n  <p>\\n    Thereafter we can use the newly created schema inside the <code>CatsController</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: exampleWithBodyT.isJsActive }}\\n    <app-tabs #exampleWithBodyT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"exampleWithBodyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exampleWithBody }}</code></pre>\\n  <pre [class.hide]=\\\"!exampleWithBodyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exampleWithBodyJs }}</code></pre>\\n  <h4>Full resource sample</h4>\\n  <p>\\n    Here is a example that makes use of a few available decorators to create a basic controller. The following\\n    controller exposes\\n    a couple of methods to access and manipulate internal data.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: fullSampleT.isJsActive }}\\n    <app-tabs #fullSampleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"fullSampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ fullSample }}</code></pre>\\n  <pre [class.hide]=\\\"!fullSampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ fullSample }}</code></pre>\\n  <h4>Handling errors</h4>\\n  <p>\\n    There's a separate chapter about handling errors (i.e. working with exceptions) <a routerLink=\\\"/exception-filters\\\">here</a>.\\n  </p>\\n  <h4>Getting up and running</h4>\\n  <p>\\n    With the above controller fully prepared, Nest still doesn't know that <code>CatsController</code> exists and as a\\n    result\\n    won't create an instance of this class.\\n  </p>\\n  <p>\\n    Controllers always belong to the module, which is why we hold the <code>controllers</code> array within the <code>@Module()</code>\\n    decorator.\\n    Since we don't have any other modules except the root <code>ApplicationModule</code>, we'll use that to introduce\\n    the\\n    <code>CatsController</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: appModuleT.isJsActive }}\\n    <app-tabs #appModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ appModule }}</code></pre>\\n  <p>\\n    We attached the metadata to the module class, and Nest can now easily reflect which controllers have to be mounted.\\n  </p>\\n  <h4>Library-specific approach</h4>\\n  <p>\\n    So far we've discussed the Nest standard way of manipulating responses. The second way of manipulating the response\\n    is to\\n    use a library-specific <a href=\\\"http://expressjs.com/en/api.html#res\\\" target=\\\"blank\\\">response object</a>. In order\\n    to inject a particular response object, we need to use the <code>@Res()</code> decorator. To show the differences,\\n    let's\\n    rewrite the <code>CatsController</code> to the following:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #expressWayT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"expressWayT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ expressWay }}</code></pre>\\n  <pre [class.hide]=\\\"!expressWayT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ expressWayJs }}</code></pre>\\n  <p>\\n    Though this approach works, it's much less clear in general. The first approach should always be preferred, but to\\n    make Nest\\n    <strong>backwards compatible</strong>\\n    with previous versions, the above approach is still available. One other thing to note is the <strong>response\\n      object</strong>\\n    in this approach allows for more flexibility - by allowing us to have full control of the response object (headers\\n    manipulation\\n    and so on).\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-controllers',\n  templateUrl: './controllers.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ControllersComponent extends BasePageComponent {\n  get catsController(): string {\n    return `\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Get()\n  findAll() {\n    return 'This action returns all cats';\n  }\n}`;\n  }\n\n  get requestObject(): string {\n    return `\nimport { Controller, Get, Req } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Get()\n  findAll(@Req() request) {\n    return 'This action returns all cats';\n  }\n}`;\n  }\n\n  get requestObjectJs(): string {\n    return `\nimport { Controller, Bind, Get, Req } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Get()\n  @Bind(Req())\n  findAll(request) {\n    return 'This action returns all cats';\n  }\n}`;\n  }\n\n  get postEndpoint() {\n    return `\nimport { Controller, Get, Post } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Post()\n  create() {\n    return 'This action adds a new cat';\n  }\n\n  @Get()\n  findAll() {\n    return 'This action returns all cats';\n  }\n}`;\n  }\n\n  get routeParameters() {\n    return `\n@Get(':id')\nfindOne(@Param() params) {\n  console.log(params.id);\n  return \\`This action returns a #\\${params.id}\\ cat\\`;\n}`;\n  }\n\n  get routeParameter() {\n    return `\n@Get(':id')\nfindOne(@Param('id') id) {\n  return \\`This action returns a #\\${id}\\ cat\\`;\n}`;\n  }\n\n  get routeWildcards() {\n    return `\n@Get('ab*cd')\nfindAll() {\n  return 'This route uses a wildcard';\n}`;\n  }\n\n  get statusCode() {\n    return `\n@Post()\n@HttpCode(204)\ncreate() {\n  return 'This action adds a new cat';\n}`;\n  }\n\n  get header() {\n    return `\n@Post()\n@Header('Cache-Control', 'none')\ncreate() {\n  return 'This action adds a new cat';\n}`;\n  }\n\n  get asyncExample() {\n    return `\n@Get()\nasync findAll(): Promise<any[]> {\n  return [];\n}`;\n  }\n\n  get asyncExampleJs() {\n    return `\n@Get()\nasync findAll() {\n  return [];\n}`;\n  }\n\n  get observableExample() {\n    return `\n@Get()\nfindAll(): Observable<any[]> {\n  return of([]);\n}`;\n  }\n\n  get observableExampleJs() {\n    return `\n@Get()\nfindAll() {\n  return of([]);\n}`;\n  }\n\n  get createCatSchema() {\n    return `\nexport class CreateCatDto {\n  readonly name: string;\n  readonly age: number;\n  readonly breed: string;\n}`;\n  }\n\n  get exampleWithBody() {\n    return `\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  return 'This action adds a new cat';\n}`;\n  }\n\n  get exampleWithBodyJs() {\n    return `\n@Post()\n@Bind(Body())\nasync create(createCatDto) {\n  return 'This action adds a new cat';\n}`;\n  }\n\n  get appModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats/cats.controller';\n\n@Module({\n  controllers: [CatsController],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get bodyParser() {\n    return `\nimport * as bodyParser from 'body-parser';\nimport { NestFactory } from '@nestjs/core';\nimport { ApplicationModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  app.use(bodyParser.json());\n  await app.listen(3000);\n}\nbootstrap();`;\n  }\n\n  get expressWay() {\n    return `\nimport { Controller, Get, Post, Res, HttpStatus } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Post()\n  create(@Res() res) {\n    res.status(HttpStatus.CREATED).send();\n  }\n\n  @Get()\n  findAll(@Res() res) {\n     res.status(HttpStatus.OK).json([]);\n  }\n}`;\n  }\n\n  get expressWayJs() {\n    return `\nimport { Controller, Get, Post, Bind, Res, Body, HttpStatus } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Post()\n  @Bind(Res(), Body())\n  create(res, createCatDto) {\n    res.status(HttpStatus.CREATED).send();\n  }\n\n  @Get()\n  @Bind(Res())\n  findAll(res) {\n     res.status(HttpStatus.OK).json([]);\n  }\n}`;\n  }\n\n  get fullSample() {\n    return `\nimport { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\n\n@Controller('cats')\nexport class CatsController {\n  @Post()\n  create(@Body() createCatDto) {\n    return 'This action adds a new cat';\n  }\n\n  @Get()\n  findAll(@Query() query) {\n    return \\`This action returns all cats (limit: \\${query.limit} items)\\`;\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id) {\n    return \\`This action returns a #\\${id}\\ cat\\`;\n  }\n\n  @Put(':id')\n  update(@Param('id') id, @Body() updateCatDto) {\n    return \\`This action updates a #\\${id}\\ cat\\`;\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id) {\n    return \\`This action removes a #\\${id}\\ cat\\`;\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Custom route decorators</h3>\\n  <p>\\n    Nest is built around a language feature called <strong>decorators</strong>. It's a well-known concept in a lot of commonly\\n    used programming languages, but in the JavaScript world, it's still relatively new. In order to better understand how\\n    the decorators work, you should take a look at <a href=\\\"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841\\\"\\n      target=\\\"blank\\\">this</a> article. Here's a simple definition:\\n  </p>\\n  <blockquote class=\\\"external\\\">\\n    An ES2016 decorator is an expression which returns a function and can take a target, name and property descriptor as arguments.\\n    You apply it by prefixing the decorator with an <code>@</code> character and placing this at the very top of what\\n    you are trying to decorate. Decorators can be defined for either a class or a property.\\n  </blockquote>\\n  <p>\\n    Nest provides a set of useful <strong>param decorators</strong> that you can use together with the HTTP route handlers.\\n    Below is a comparison of the decorators with the plain express objects.\\n  </p>\\n  <table>\\n    <tbody>\\n      <tr>\\n        <td><code>@Request()</code></td>\\n        <td><code>req</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Response()</code></td>\\n        <td><code>res</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Next()</code></td>\\n        <td><code>next</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Session()</code></td>\\n        <td><code>req.session</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Param(param?: string)</code></td>\\n        <td><code>req.params</code> / <code>req.params[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Body(param?: string)</code></td>\\n        <td><code>req.body</code> / <code>req.body[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Query(param?: string)</code></td>\\n        <td><code>req.query</code> / <code>req.query[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Headers(param?: string)</code></td>\\n        <td><code>req.headers</code> / <code>req.headers[param]</code></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <p>\\n    Additionally, you can create your own, <strong>custom decorator</strong>. Why it is useful?\\n  </p>\\n  <p>\\n    In the node.js world, it's a common practice to attach properties to the <strong>request</strong> object. Then you have\\n    to manually grab them every time in the route handlers, for example, using following construction:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\nconst user = req.user;</code></pre>\\n  <p>\\n    In order to make it more readable and transparent, we can create a <code>@User()</code> decorator and reuse it across\\n    all existing controllers.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'user.decorator' | extension: userDecoratorT.isJsActive }}\\n    <app-tabs #userDecoratorT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ userDecorator }}</code></pre>\\n  <p>\\n    Then, you can simply use it wherever it fits your requirements.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #controllerExampleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"controllerExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ controllerExample }}</code></pre>\\n  <pre [class.hide]=\\\"!controllerExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ controllerExampleJs }}</code></pre>\\n  <h4>Passing data</h4>\\n  <p>\\n    When the behavior of your decorator depends on some conditions, you may use the <code>data</code> param to pass an argument\\n    to the decorator's factory function. For example, the construction below:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #controllerExampleDataT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"controllerExampleDataT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ controllerExampleData }}</code></pre>\\n  <pre [class.hide]=\\\"!controllerExampleDataT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ controllerExampleDataJs }}</code></pre>\\n  <p>\\n    Will make possible to access the <code>test</code> string via the <code>data</code> argument:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'user.decorator' | extension: userDecoratorDataT.isJsActive }}\\n    <app-tabs #userDecoratorDataT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ userDecoratorData }}</code></pre>\\n  <h4>Working with pipes</h4>\\n  <p>\\n    Nest treats custom param decorators in the same fashion as the built-in ones (<code>@Body()</code>, <code>@Param()</code>    and\\n    <code>@Query()</code>). It means that pipes are executed for the custom annotated parameters as well (in this case, for\\n    the <code>user</code> argument). Moreover, you can apply the pipe directly to the custom decorator:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #pipeExampleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"pipeExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ pipeExample }}</code></pre>\\n  <pre [class.hide]=\\\"!pipeExampleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ pipeExampleJs }}</code></pre>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-custom-decorators',\n  templateUrl: './custom-decorators.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomDecoratorsComponent extends BasePageComponent {\n  get userDecorator() {\n    return `\nimport { createParamDecorator } from '@nestjs/common';\n\nexport const User = createParamDecorator((data, req) => {\n  return req.user;\n});`;\n  }\n\n  get userDecoratorData() {\n    return `\nimport { createParamDecorator } from '@nestjs/common';\n\nexport const User = createParamDecorator((data, req) => {\n  console.log(data); // test\n  return req.user;\n});`;\n  }\n\n  get controllerExampleData() {\n    return `\n@Get()\nasync findOne(@User('test') user: UserEntity) {\n  console.log(user);\n}`;\n  }\n\n  get controllerExampleDataJs() {\n    return `\n@Get()\n@Bind(User('test'))\nasync findOne(user) {\n  console.log(user);\n}`;\n  }\n\n  get controllerExample() {\n    return `\n@Get()\nasync findOne(@User() user: UserEntity) {\n  console.log(user);\n}`;\n  }\n\n  get controllerExampleJs() {\n    return `\n@Get()\n@Bind(User())\nasync findOne(user) {\n  console.log(user);\n}`;\n  }\n\n  get pipeExample() {\n    return `\n@Get()\nasync findOne(@User(new ValidationPipe()) user: UserEntity) {\n  console.log(user);\n}`;\n  }\n\n  get pipeExampleJs() {\n    return `\n@Get()\n@Bind(User(new ValidationPipe()))\nasync findOne(user) {\n  console.log(user);\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Who is using Nest?</h3>\\n  <p>\\n    We are proudly helping various companies building their products at scale.\\n    If you are using Nest and would you like to be listed here, see this <a href=\\\"https://github.com/nestjs/nest/issues/1006\\\"\\n      target=\\\"blank\\\">thread</a>. We are willing to put your logo here!\\n  </p>\\n  <h4>Companies</h4>\\n  <p>\\n    According to our knowledge, all the following companies have built awesome projects on top of our framework:\\n  </p>\\n  <div class=\\\"companies-wrapper\\\">\\n    <a class=\\\"company-logo\\\" *ngFor=\\\"let item of companies\\\" [href]=\\\"item.url\\\" target=\\\"blank\\\"><img [src]=\\\"item.logo\\\"\\n        [style.width]=\\\"item.width\\\" /></a>\\n  </div>\\n  <table class=\\\"companies-list\\\">\\n    <tr *ngFor=\\\"let item of companiesUrls\\\">\\n      <td><a [href]=\\\"item\\\" target=\\\"blank\\\">{{ item }}</a></td>\\n    </tr>\\n  </table>\\n  <p>\\n    and a lot more but we don't have enough time to update above list. Feel free to create a <a href=\\\"https://github.com/nestjs/docs.nestjs.com/pulls\\\"\\n      target=\\\"blank\\\">pull\\n      request</a> though!\\n  </p>\\n</div>\"","module.exports = \"@media (max-width: 480px) {\\n  .company-logo {\\n    width: 360px;\\n    max-width: 100%;\\n    display: block;\\n    text-align: center;\\n    margin: 40px auto; }\\n    .company-logo img {\\n      width: 180px !important;\\n      max-width: 100%;\\n      max-height: none; } }\\n\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-who-uses',\n  templateUrl: './who-uses.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./who-uses.component.scss'],\n})\nexport class WhoUsesComponent extends BasePageComponent {\n  readonly companies = [\n    {\n      logo: 'https://nestjs.com/valor-software.5dab60ec.png',\n      url: 'https://valor-software.com/',\n    },\n    {\n      logo: 'https://nestjs.com/logo-xtremis.0feb160c.svg',\n      url: 'http://xtremis.com/',\n      width: '200px',\n    },\n    {\n      logo: 'https://nestjs.com/neoteric.0e4df380.png',\n      url: 'https://neoteric.eu/',\n    },\n    {\n      logo: 'https://nestjs.com/swingdev-logo.66e92510.svg',\n      url: 'https://swingdev.io/',\n    },\n    {\n      logo: '/assets/logo/adidas.svg',\n      url: 'https://adidas.com',\n      width: '80px',\n    },\n    {\n      logo: 'https://nestjs.com/gojob-logo.2b6e823c.png',\n      url: 'https://gojob.com/',\n      width: '100px',\n    },\n    {\n      logo: '/assets/logo/trellis.png',\n      url: 'https://trellis.org/',\n      width: '70px',\n    },\n    {\n      logo: 'https://nestjs.com/scalio-logo.0a1046af.svg',\n      url: 'https://scal.io',\n      width: '120px',\n    },\n    {\n      logo: '/assets/logo/rewe.svg',\n      url: 'https://rewe-digital.com/',\n      width: '180px',\n    },\n    {\n      logo: 'https://nestjs.com/genuinebee.bdd5ef72.svg',\n      url: 'https://genuinebee.com/',\n    },\n    {\n      logo: '/assets/logo/architectnow.png',\n      url: 'http://architectnow.net',\n    },\n  ];\n\n  readonly companiesUrls = [\n    'https://gorrion.io/',\n    'http://balticdatascience.com/',\n    'https://prohabits.com/',\n    'https://komed-health.com/',\n    'https://kerberus.com.co/',\n    'https://notadd.com/',\n    'http://jsdaddy.io/',\n    'https://yumpingo.com/',\n    'https://analytics-importer.cz/',\n    'https://dayzim.com/',\n    'https://wizkids.co.uk/',\n    'https://pilvia.com/',\n    'https://wi-q.com/',\n    'http://agrofel.com.br',\n    'https://societegenerale.com/',\n    'https://trashpanda.hulan.nl/',\n    'https://bytedance.com/',\n    'https://votercircle.com',\n    'https://erento.com',\n    'https://ideas.manticore-labs.com/',\n    'https://smartexlab.com/',\n    'https://automama.ru/',\n    'https://iflix.com/',\n  ];\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Exception filters</h3>\\n  <p>\\n    The built-in\\n    <strong>exceptions layer</strong> is responsible for handling all thrown exceptions across your whole application. When\\n    an unhandled exception is caught, the end-user will receive an appropriate user-friendly response.\\n  </p>\\n  <figure>\\n    <img src=\\\"/assets/Filter_1.png\\\" />\\n  </figure>\\n  <p>\\n    Each ocurred exception is handled by the global exception filter, and when it's\\n    <strong>unrecognized</strong> (is neither\\n    <code>HttpException</code> nor a class that inherits from\\n    <code>HttpException</code>), a user receives the below JSON response:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ errorResponse }}</code></pre>\\n  <h4>Base exceptions</h4>\\n  <p>\\n    There's a built-in\\n    <code>HttpException</code> class exposed from the\\n    <code>@nestjs/common</code> package. As you already know, when you throw a\\n    <code>HttpException</code> object, it'll be caught by the handler and afterwards, transformed to the relevant JSON response.\\n  </p>\\n  <p>\\n    In the\\n    <code>CatsController</code>, we have a\\n    <code>create()</code> method (a\\n    <code>POST</code> route). Let's assume that this route handler would throw an exception for some reason. We're gonna\\n    hardcode it:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: createMethodT.isJsActive }}\\n    <app-tabs #createMethodT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"createMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ createMethod }}</code></pre>\\n  <pre [class.hide]=\\\"!createMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ createMethodJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> We used the\\n    <code>HttpStatus</code> here. It is a helper enumerator imported from the\\n    <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    When the client calls this endpoint, the response would look like this:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ forbiddenResponse }}</code></pre>\\n  <p>\\n    The\\n    <code>HttpException</code> constructor takes\\n    <code>string | object</code> as the first argument. If you pass an\\n    <code>object</code> instead of a\\n    <code>string</code>, you'll completely override the response body.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: exceptionObjT.isJsActive }}\\n    <app-tabs #exceptionObjT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"exceptionObjT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exceptionObj }}</code></pre>\\n  <pre [class.hide]=\\\"!exceptionObjT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exceptionObjJs }}</code></pre>\\n  <p>\\n    And this's how the response would look like:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ customResponse }}</code></pre>\\n  <h4>Exceptions hierarchy</h4>\\n  <p>\\n    A good practice is to create your own\\n    <strong>exceptions hierarchy</strong>. It means that every HTTP exception should inherit from the base\\n    <code>HttpException</code> class. As a result, Nest will recognize your exception, and will fully take care of the error\\n    responses.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'forbidden.exception' | extension: forbiddenExceptionT.isJsActive }}\\n    <app-tabs #forbiddenExceptionT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ forbiddenException }}</code></pre>\\n  <p>\\n    Since\\n    <code>ForbiddenException</code> extends the base\\n    <code>HttpException</code>, it's going to work well with the core exceptions handler, and therefore we can use it inside\\n    the\\n    <code>create()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: forbiddenCreateMethodT.isJsActive }}\\n    <app-tabs #forbiddenCreateMethodT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"forbiddenCreateMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forbiddenCreateMethod }}</code></pre>\\n  <pre [class.hide]=\\\"!forbiddenCreateMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forbiddenCreateMethodJs }}</code></pre>\\n  <h4>HTTP exceptions</h4>\\n  <p>\\n    In order to reduce the boilerplate code, Nest provides a set of usable exceptions that inherits from the core\\n    <code>HttpException</code>. All of them are exposed from the\\n    <code>@nestjs/common</code> package:\\n  </p>\\n  <ul>\\n    <li>\\n      <code>BadRequestException</code>\\n    </li>\\n    <li>\\n      <code>UnauthorizedException</code>\\n    </li>\\n    <li>\\n      <code>NotFoundException</code>\\n    </li>\\n    <li>\\n      <code>ForbiddenException</code>\\n    </li>\\n    <li>\\n      <code>NotAcceptableException</code>\\n    </li>\\n    <li>\\n      <code>RequestTimeoutException</code>\\n    </li>\\n    <li>\\n      <code>ConflictException</code>\\n    </li>\\n    <li>\\n      <code>GoneException</code>\\n    </li>\\n    <li>\\n      <code>PayloadTooLargeException</code>\\n    </li>\\n    <li>\\n      <code>UnsupportedMediaTypeException</code>\\n    </li>\\n    <li>\\n      <code>UnprocessableEntityException</code>\\n    </li>\\n    <li>\\n      <code>InternalServerErrorException</code>\\n    </li>\\n    <li>\\n      <code>NotImplementedException</code>\\n    </li>\\n    <li>\\n      <code>BadGatewayException</code>\\n    </li>\\n    <li>\\n      <code>ServiceUnavailableException</code>\\n    </li>\\n    <li>\\n      <code>GatewayTimeoutException</code>\\n    </li>\\n  </ul>\\n  <h4>Exception filters</h4>\\n  <p>\\n    The base exception handler is fine, but sometimes you may want to have a\\n    <strong>full control</strong> over the exceptions layer, for example, add some logging or use a different JSON schema\\n    based on some chosen factors. We adore generic solutions and making your life easier, that's why the feature called\\n    <strong>exception filters</strong> has been created.\\n  </p>\\n  <p>\\n    We are going to create a filter which is responsible for catching exceptions that are an instance of\\n    <code>HttpException</code> class and set up a custom response logic for them.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'http-exception.filter' | extension: httpExceptionFilterT.isJsActive }}\\n    <app-tabs #httpExceptionFilterT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"httpExceptionFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ httpExceptionFilter }}</code></pre>\\n  <pre [class.hide]=\\\"!httpExceptionFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ httpExceptionFilterJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> All exception filters should implement the generic\\n    <code>ExceptionFilter&#60;T&#62;</code> interface. It forces you to provide the\\n    <code>catch(exception: T, host: ArgumentsHost)</code> method with the valid signature.\\n    <code>T</code> indicates a type of the exception.\\n  </blockquote>\\n  <p>\\n    The\\n    <code>@Catch(HttpException)</code> decorator binds the required metadata to the exception filter, telling Nest that this\\n    particular filter is looking for\\n    <code>HttpException</code> and nothing else. In practice, the\\n    <code>@Catch()</code> decorator may take an endless number of parameters, therefore you can set up the filter for several\\n    types of exceptions, just separate them by a comma.\\n  </p>\\n  <p>\\n    The\\n    <code>exception</code> property is a currently processed exception, while\\n    <code>host</code> is a\\n    <code>ArgumentsHost</code> object. The\\n    <code>ArgumentsHost</code> is a wrapper around arguments that have been passed to the\\n    <strong>original</strong> handler, and it contains different arguments array under the hood based on the type of the\\n    application.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ argumentsHost }}</code></pre>\\n  <p>\\n    The\\n    <code>ArgumentsHost</code> supplies us with a set of useful methods that helps to pick correct arguments from the underlying\\n    array. In other words,\\n    <code>ArgumentsHost</code> is nothing else than just an\\n    <strong>array of arguments</strong>. For example, when the filter is used within HTTP application context,\\n    <code>ArgumentsHost</code> will contain\\n    <code>[request, response]</code> array inside. However, when current context is a web sockets application, this array\\n    will be equal to\\n    <code>[client, data]</code>. This design decision enables you to access any argument that would be eventually passed\\n    to the corresponding handler.\\n  </p>\\n  <h4>Binding filters</h4>\\n  <p>\\n    Let's tie\\n    <code>HttpExceptionFilter</code> to the\\n    <code>create()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: forbiddenCreateMethodWithFilterT.isJsActive }}\\n    <app-tabs #forbiddenCreateMethodWithFilterT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"forbiddenCreateMethodWithFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forbiddenCreateMethodWithFilter }}</code></pre>\\n  <pre [class.hide]=\\\"!forbiddenCreateMethodWithFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forbiddenCreateMethodWithFilterJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The\\n    <code>@UseFilters()</code> decorator is imported from the\\n    <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    We have used the\\n    <code>@UseFilters()</code> decorator here. Same as\\n    <code>@Catch()</code>, it takes an endless number of parameters. The instance of\\n    <code>HttpExceptionFilter</code> has been created immediately in-place. Another available way is to pass the class (not\\n    instance), leaving framework the instantiation responsibility and enabling\\n    <strong>dependency injection</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: forbiddenCreateMethodWithFilterDiT.isJsActive }}\\n    <app-tabs #forbiddenCreateMethodWithFilterDiT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"forbiddenCreateMethodWithFilterDiT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forbiddenCreateMethodWithFilterDi }}</code></pre>\\n  <pre [class.hide]=\\\"!forbiddenCreateMethodWithFilterDiT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forbiddenCreateMethodWithFilterDiJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Prefer applying classes instead of instances when possible. It reduces\\n    <strong>memory usage</strong> since Nest can easily reuse instances of the same class across your whole application.\\n  </blockquote>\\n  <p>\\n    In the example above, the\\n    <code>HttpExceptionFilter</code> is applied only to the single\\n    <code>create()</code> route handler, but it's not the only available way. In fact, the exception filters can be method-scoped,\\n    controller-scoped, and also global-scoped.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: controllerScopedFilterT.isJsActive }}\\n    <app-tabs #controllerScopedFilterT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ controllerScopedFilter }}</code></pre>\\n  <p>\\n    This construction sets up the\\n    <code>HttpExceptionFilter</code> for every route handler defined inside the\\n    <code>CatsController</code>. It's the example of the controller-scoped exception filter. The last available scope is\\n    the global-scoped exception filter.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: globalScopedFilterT.isJsActive }}\\n    <app-tabs #globalScopedFilterT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalScopedFilter }}</code></pre>\\n  <blockquote>\\n    <strong>Warning</strong> The\\n    <code>useGlobalFilters()</code> method neither set up filters for gateways nor microservices.\\n  </blockquote>\\n  <p>\\n    The global filters are used across the whole application, for every controller and every route handler. In terms of dependency\\n    injection, global filters registered from the outside of any module (as in the previous example above) cannot inject\\n    dependencies since they don't belong to any module. In order to solve this issue, you can set up a filter\\n    <strong>directly from any module</strong> using following construction:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: globalScopedFilterModuleT.isJsActive }}\\n    <app-tabs #globalScopedFilterModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalModuleFilter }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The alternative option is to use an <a routerLink=\\\"/execution-context\\\">execution context</a> feature.\\n    Also, <code>useClass</code> is not the only way of dealing with custom providers registration. Learn more <a routerLink=\\\"/fundamentals/dependency-injection\\\">here</a>.\\n  </blockquote>\\n  <h4>Catch everything</h4>\\n  <p>\\n    In order to handle every occurred exception (regardless of the exception type), you may leave the parentheses empty, e.g.\\n    <code>@Catch()</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #exceptionFilterT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"exceptionFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exceptionFilter }}</code></pre>\\n  <pre [class.hide]=\\\"!exceptionFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exceptionFilterJs }}</code></pre>\\n  <p>In the example above the filter will catch each exception that has been thrown without limiting itself to a set of particular\\n    classes.\\n  </p>\\n  <h4>Inheritance</h4>\\n  <p>\\n    Typically, you'll create fully customized exception filters crafted to fulfill your application requirements. There might\\n    be use-cases though when you would like to reuse an already implemented, <strong>core exception filter</strong>,\\n    and override the behavior based on certain factors.\\n  </p>\\n  <p>\\n    In order to delegate exception processing to the base filter, you need to extend <code>BaseExceptionFilter</code> and\\n    call inherited <code>catch()</code> method. Besides, <code>HttpServer</code> reference has to be injected and passed\\n    to the\\n    <code>super()</code> call.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #inheritanceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"inheritanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inheritance }}</code></pre>\\n  <pre [class.hide]=\\\"!inheritanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inheritanceJs }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Warning</strong>\\n    Filters that extend base classes have to be instantiated by the framework itself (don't manually create instances using <code>new</code> keyword but <code>@UseFilters()</code>).\\n  </blockquote>\\n    You can use a global filter that extends the base filter by injecting the <code>HttpServer</code> reference.\\n  <pre><code class=\\\"language-typescript\\\">{{ globalScopedBaseFilter }}</code></pre>\\n  <p>\\n    Obviously, you should enhance above implementation with your tailored <strong>business</strong> logic (e.g. add various\\n    conditions).\\n  </p>\\n</div>\\n\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-exception-filters',\n  templateUrl: './exception-filters.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExceptionFiltersComponent extends BasePageComponent {\n  get errorResponse() {\n    return `\n{\n  \"statusCode\": 500,\n  \"message\": \"Internal server error\"\n}`;\n  }\n\n  get createMethod() {\n    return `\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n}\n`;\n  }\n\n  get createMethodJs() {\n    return `\n@Post()\n@Bind(Body())\nasync create(createCatDto) {\n  throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);\n}\n`;\n  }\n\n  get exceptionObj() {\n    return `\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  throw new HttpException({\n    status: HttpStatus.FORBIDDEN,\n    error: 'This is a custom message',\n  }, 403);\n}\n`;\n  }\n\n  get exceptionObjJs() {\n    return `\n@Post()\n@Bind(Body())\nasync create(createCatDto) {\n  throw new HttpException({\n    status: HttpStatus.FORBIDDEN,\n    error: 'This is a custom message',\n  }, 403);\n}\n`;\n  }\n\n  get customResponse() {\n    return `\n{\n  \"status\": 403,\n  \"error\": \"This is a custom message\"\n}`;\n  }\n\n  get forbiddenResponse() {\n    return `\n{\n  \"statusCode\": 403,\n  \"message\": \"Forbidden\"\n}`;\n  }\n\n  get forbiddenException() {\n    return `\nexport class ForbiddenException extends HttpException {\n  constructor() {\n    super('Forbidden', HttpStatus.FORBIDDEN);\n  }\n}`;\n  }\n\n  get forbiddenCreateMethod() {\n    return `\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  throw new ForbiddenException();\n}`;\n  }\n\n  get forbiddenCreateMethodJs() {\n    return `\n@Post()\n@Bind(Body())\nasync create(createCatDto) {\n  throw new ForbiddenException();\n}`;\n  }\n\n  get httpExceptionFilter() {\n    return `\nimport { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common';\nimport { HttpException } from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}`;\n  }\n\n  get httpExceptionFilterJs() {\n    return `\nimport { Catch } from '@nestjs/common';\nimport { HttpException } from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter {\n  catch(exception, host) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}`;\n  }\n\n  get exceptionFilter() {\n    return `\nimport { ExceptionFilter, Catch, ArgumentsHost } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}`;\n  }\n\n  get exceptionFilterJs() {\n    return `\nimport { ExceptionFilter, Catch } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception, host) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}`;\n  }\n\n  get forbiddenCreateMethodWithFilter() {\n    return `\n@Post()\n@UseFilters(new HttpExceptionFilter())\nasync create(@Body() createCatDto: CreateCatDto) {\n  throw new ForbiddenException();\n}\n`;\n  }\n\n  get forbiddenCreateMethodWithFilterJs() {\n    return `\n@Post()\n@UseFilters(new HttpExceptionFilter())\n@Bind(Body())\nasync create(createCatDto) {\n  throw new ForbiddenException();\n}\n`;\n  }\n\n  get forbiddenCreateMethodWithFilterDi() {\n    return `\n@Post()\n@UseFilters(HttpExceptionFilter)\nasync create(@Body() createCatDto: CreateCatDto) {\n  throw new ForbiddenException();\n}\n`;\n  }\n\n  get forbiddenCreateMethodWithFilterDiJs() {\n    return `\n@Post()\n@UseFilters(HttpExceptionFilter)\n@Bind(Body())\nasync create(createCatDto) {\n  throw new ForbiddenException();\n}\n`;\n  }\n\n  get controllerScopedFilter() {\n    return `\n@UseFilters(new HttpExceptionFilter())\nexport class CatsController {}`;\n  }\n\n  get globalScopedFilter() {\n    return `\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  app.useGlobalFilters(new HttpExceptionFilter());\n  await app.listen(3000);\n}\nbootstrap();\n`;\n  }\n\n  get getLoggerExceptionFilter() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst loggerFilter = app\n  .select(LoggerModule)\n  .get(LoggerExceptionFilter);\n\napp.useGlobalFilters(loggerFilter);\n`;\n  }\n\n  get argumentsHost() {\n    return `\nexport interface ArgumentsHost {\n  getArgs<T extends Array<any> = any[]>(): T;\n  getArgByIndex<T = any>(index: number): T;\n  switchToRpc(): RpcArgumentsHost;\n  switchToHttp(): HttpArgumentsHost;\n  switchToWs(): WsArgumentsHost;\n}`;\n  }\n\n  get globalModuleFilter() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\n\n@Module({\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: HttpExceptionFilter,\n    },\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get inheritance() {\n    return `\nimport { Catch, ArgumentsHost, HttpServer } from '@nestjs/common';\nimport { BaseExceptionFilter, HTTP_SERVER_REF } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n  constructor(@Inject(HTTP_SERVER_REF) applicationRef: HttpServer) {\n    super(applicationRef);\n  }\n\n  catch(exception: any, host: ArgumentsHost) {\n    super.catch(exception, host);\n  }\n}`;\n  }\n\n  get inheritanceJs() {\n    return `\nimport { Catch } from '@nestjs/common';\nimport { BaseExceptionFilter, HTTP_SERVER_REF } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n  constructor(@Inject(HTTP_SERVER_REF) applicationRef) {\n    super(applicationRef);\n  }\n\n  catch(exception, host) {\n    super.catch(exception, host);\n  }\n}`;\n  }\n\n  get globalScopedBaseFilter() {\n    return `\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  const httpRef = app.get(HTTP_SERVER_REF);\n  app.useGlobalFilters(new AllExceptionsFilter(httpRef));\n  await app.listen(3000);\n}\nbootstrap();\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Execution Context</h3>\\n  <p>\\n    There are several ways of mounting the Nest application. You can create either a web app, microservice or just a Nest <strong>execution\\n      context</strong>. The Nest context is a wrapper around the Nest container, which holds all instantiated classes. We\\n    can grab an existing instance from within any imported module directly using application object. Thanks to that, you\\n    can take advantages of the Nest framework everywhere, including <strong>CRON</strong> jobs and even build a <strong>CLI</strong>\\n    on top of it.\\n  </p>\\n  <h4>Getting started</h4>\\n  <p>\\n    In order to create a Nest application context, we use the following syntax:\\n  </p>\\n  <span class=\\\"filename\\\"><app-tabs></app-tabs></span>\\n  <pre><code class=\\\"language-typescript\\\">{{ executionContext }}</code></pre>\\n  <p>\\n    Afterward, Nest allows you to pick any instance registered within Nest application. Let's imagine that we have a <code>TasksController</code>    in\\n    the <code>TasksModule</code>. This class provides a set of usable methods, which we want to call from within CRON job.\\n  </p>\\n  <span class=\\\"filename\\\"><app-tabs></app-tabs></span>\\n  <pre><code class=\\\"language-typescript\\\">{{ pickTasksController }}</code></pre>\\n  <p>\\n    And that's it. To grab <code>TasksController</code> instance we had to use <code>get()</code> method. We didn't have\\n    to go through entire modules tree, the <code>get()</code> method act like a <strong>query</strong> that search for an\\n    instance in each registered module automatically. However, if you prefer a strict context checking, you can always switch\\n    to it using <code>strict: true</code> options object that has to be passed as the second argument of <code>get()</code>    method.\\n    Then, you have to go through all modules to pick up a particular instance from the selected context.\\n  </p>\\n  <span class=\\\"filename\\\"><app-tabs></app-tabs></span>\\n  <pre><code class=\\\"language-typescript\\\">{{ pickTasksControllerStrict }}</code></pre>\\n  <table>\\n    <tr>\\n      <td>\\n        <code>get()</code>\\n      </td>\\n      <td>\\n        Retrieves an instance of either controller or provider (including guards, filters, and so on) available in the application\\n        context.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>select()</code>\\n      </td>\\n      <td>\\n        Navigates through the module tree, for example, to pull out a specific instance from the selected module (used together with\\n        enabled strict mode).\\n      </td>\\n    </tr>\\n  </table>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The root module is selected by default. In order to select any other module, you need to go through\\n    entire modules tree (step by step).\\n  </blockquote>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-execution-context',\n  templateUrl: './execution-context.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExecutionContextComponent extends BasePageComponent {\n  get executionContext() {\n    return `\nasync function bootstrap() {\n  const app = await NestFactory.createApplicationContext(ApplicationModule);\n  // logic...\n}\nbootstrap();`;\n  }\n\n  get pickTasksController() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst tasksController = app.get(TasksController);\n`;\n  }\n\n  get pickTasksControllerStrict() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst tasksController = app.select(TasksModule).get(TasksController, { strict: true });\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Express instance</h3>\\n  <p>\\n    In order to have a full control of the <code>express</code> lifecycle, you can pass a self-created instance as a second argument of the <code>NestFactory.create()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ expressInstance }}</code></pre>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-express-instance',\n  templateUrl: './express-instance.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExpressInstanceComponent extends BasePageComponent {\n  get expressInstance() {\n    return `\nconst server = express();\nconst app = await NestFactory.create(ApplicationModule, server);`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Global Prefix</h3>\\n  <p>\\n    In order to set a prefix for each route registered in the application at once, you can \\n    use the <code>setGlobalPrefix()</code> method of the <code>INestApplication</code> instance.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalPrefix }}</code></pre>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-global-prefix',\n  templateUrl: './global-prefix.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GlobalPrefixComponent extends BasePageComponent {\n  get globalPrefix() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.setGlobalPrefix('v1');`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Hybrid Application</h3>\\n  <p>\\n    The <strong>hybrid application</strong> is an application that listens for HTTP requests, as well as makes use of connected microservices\\n    The <code>INestApplication</code> can be combined with the endless number of the <code>INestMicroservice</code> instances through <code>connectMicroservice()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ hybridApplication }}</code></pre>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-hybrid-application',\n  templateUrl: './hybrid-application.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HybridApplicationComponent extends BasePageComponent {\n  get hybridApplication() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst microservice = app.connectMicroservice({\n  transport: Transport.TCP,\n});\n\nawait app.startAllMicroservicesAsync();\nawait app.listen(3001);`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Lifecycle Events</h3>\\n  <p>\\n    There are two application lifecycle events, <code>OnModuleInit</code> and <code>OnModuleDestroy</code> hooks. \\n    It's a good practice to use them for all the initialization stuff and avoid putting anything directly in the constructor.\\n   The constructor should be used only to initialize the class members and for injecting the required dependencies.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #lifecycleEventsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"lifecycleEventsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ lifecycleEvents }}</code></pre>\\n  <pre [class.hide]=\\\"!lifecycleEventsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ lifecycleEventsJs }}</code></pre>\\n  <p>\\n    In order to defer initialization of the application, you can either use <code>await</code> keyword or return a <code>Promise</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #asyncLifecycleEventT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"asyncLifecycleEventT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ asyncLifecycleEvent }}</code></pre>\\n  <pre [class.hide]=\\\"!asyncLifecycleEventT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ asyncLifecycleEventJs }}</code></pre>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-lifecycle-events',\n  templateUrl: './lifecycle-events.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LifecycleEventsComponent extends BasePageComponent {\n  get lifecycleEvents() {\n    return `\nimport { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService implements OnModuleInit, OnModuleDestroy {\n  onModuleInit() {\n    console.log(\\`Initialization...\\`);\n  }\n  \n  onModuleDestroy() {\n    console.log(\\`Cleanup...\\`);\n  }\n}`;\n  }\n\n  get lifecycleEventsJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UsersService {\n  onModuleInit() {\n    console.log(\\`Initialization...\\`);\n  }\n\n  onModuleDestroy() {\n    console.log(\\`Cleanup...\\`);\n  }\n}`;\n  }\n\n  get asyncLifecycleEvent() {\n    return `\nasync onModuleInit(): Promise<any> {\n  await this.fetch();\n}`;\n  }\n\n  get asyncLifecycleEventJs() {\n    return `\nasync onModuleInit() {\n  await this.fetch();\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>HTTPS</h3>\\n  <p>\\n    In order to create application that uses HTTPS protocol, we have to pass an options object:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ https }}</code></pre>\\n <h4>Multiple simultaneous servers</h4>\\n <p>\\n   A full control over the <code>express</code> instance gives a simple way to create a several multiple simultaneous servers that are listening on different ports. \\n </p>\\n <pre><code class=\\\"language-typescript\\\">{{ servers }}</code></pre>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-multiple-servers',\n  templateUrl: './multiple-servers.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MultipleServersComponent extends BasePageComponent {\n  get https() {\n    return `\nconst httpsOptions = {\n  key: fs.readFileSync('./secrets/private-key.pem'),\n  cert: fs.readFileSync('./secrets/public-certificate.pem')\n};\nconst app = await NestFactory.create(ApplicationModule, {\n  httpsOptions,\n});\nawait app.listen(3000);`;\n  }\n  get servers() {\n    return `\nconst httpsOptions = {\n  key: fs.readFileSync('./secrets/private-key.pem'),\n  cert: fs.readFileSync('./secrets/public-certificate.pem')\n};\n\nconst server = express();\nconst app = await NestFactory.create(ApplicationModule, server);\nawait app.init();\n\nhttp.createServer(server).listen(3000);\nhttps.createServer(httpsOptions, server).listen(443);\n`;\n  }\n}","module.exports = \"<div class=\\\"content\\\" #contentReference>\\n  <h3 id=\\\"first-steps\\\">First steps</h3>\\n  <p>\\n    In this set of articles, you'll learn the\\n    <strong>core fundamentals</strong> of Nest. To get familiar with the essential building-blocks of Nest applications,\\n    we'll build a basic CRUD application with features that cover a lot of ground at an introductory level.\\n  </p>\\n  <h4 id=\\\"language\\\">Language</h4>\\n  <p>\\n    We're in love with\\n    <a href=\\\"http://www.typescriptlang.org/\\\" target=\\\"blank\\\">TypeScript</a>, but above all - we love\\n    <a href=\\\"https://nodejs.org/en/\\\" target=\\\"blank\\\">Node.js</a>. That's why Nest is compatible with both TypeScript and\\n    <strong>pure JavaScript</strong>. Nest is taking advantage of latest language features, so to use a framework with simple\\n    JavaScript we need a\\n    <a href=\\\"http://babeljs.io/\\\" target=\\\"blank\\\">Babel</a> compiler.\\n  </p>\\n  <p>\\n    We'll mostly use TypeScript in the examples we provide, but you can always\\n    <strong>switch the code snippets</strong> to vanilla JavaScript syntax.\\n  </p>\\n  <h4 id=\\\"prerequisites\\\">Prerequisites</h4>\\n  <p>\\n    Please make sure that\\n    <a href=\\\"https://nodejs.org/\\\" target=\\\"blank\\\">Node.js</a>\\n    <strong>(>= 8.9.0)</strong> is installed on your operating system.\\n  </p>\\n  <h4 id=\\\"setup\\\">Setup</h4>\\n  <p>\\n    Setting up a new project is quite simple with the\\n    <a routerLink=\\\"/cli/overview\\\">Nest CLI</a>. With\\n    <a href=\\\"https://www.npmjs.com/\\\" target=\\\"blank\\\">npm</a> installed, you can create a new Nest project with the following\\n    commands in your OS terminal:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i -g @nestjs/cli\\n$ nest new project</code></pre>\\n  <p>The\\n    <code>project</code> directory will be scaffolded with several core files being located within a\\n    <code>src/</code> directory.\\n  </p>\\n  <div class=\\\"file-tree\\\">\\n    <div class=\\\"item\\\">src</div>\\n    <div class=\\\"children\\\">\\n      <div class=\\\"item\\\">app.controller.ts</div>\\n      <div class=\\\"item\\\">app.module.ts</div>\\n      <div class=\\\"item\\\">main.ts</div>\\n    </div>\\n  </div>\\n  <p>\\n    Following the convention, newly created modules should have their dedicated directory.\\n    <table>\\n      <tr>\\n        <td>\\n          <code>main.ts</code>\\n        </td>\\n        <td>The entry file of the application. It uses\\n          <code>NestFactory</code> to create the Nest application instance.</td>\\n      </tr>\\n      <tr>\\n        <td>\\n          <code>app.module.ts</code>\\n        </td>\\n        <td>Defines\\n          <code>AppModule</code>, the root module of the application.</td>\\n      </tr>\\n      <tr>\\n        <td>\\n          <code>app.controller.ts</code>\\n        </td>\\n        <td>Basic controller sample with a single route.</td>\\n      </tr>\\n    </table>\\n    <p>\\n      The\\n      <code>main.ts</code> includes an async function, which will\\n      <strong>bootstrap</strong> our application:\\n    </p>\\n    <span class=\\\"filename\\\">\\n      {{ 'main' | extension: bootstrapSwitch.isJsActive }}\\n      <app-tabs #bootstrapSwitch></app-tabs>\\n    </span>\\n    <pre><code class=\\\"language-typescript\\\">{{ bootstrap }}</code></pre>\\n    <p>\\n      To create a Nest application instance, we are using the\\n      <code>NestFactory</code>. <code>NestFactory</code> is one of the most fundamental classes, it exposes a few static\\n      methods that allows creating application instance. The\\n      <code>create()</code> method returns an object, which fulfills the\\n      <code>INestApplication</code> interface, and provides a set of usable methods which are well described in the next\\n      chapters.\\n    </p>\\n    <h4 id=\\\"running-application\\\">Running application</h4>\\n    <p>\\n      Once the installation process is complete, you can run the following command to start the HTTP server:\\n    </p>\\n    <pre><code class=\\\" language-bash \\\">\\n$ npm run start</code></pre>\\n    <p>\\n      This command starts the HTTP server on the port defined inside the <code>src/main.ts</code> file. While the application\\n      is running, open your browser and navigate to <code>http://localhost:3000/</code>. You should see the <code>Hello world!</code>      message.\\n    </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-first-steps',\n  templateUrl: './first-steps.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FirstStepsComponent extends BasePageComponent {\n  get bootstrap(): string {\n    return `\nimport { NestFactory } from '@nestjs/core';\nimport { ApplicationModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  await app.listen(3000);\n}\nbootstrap();\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Asynchronous providers</h3>\\n  <p>\\n    When the application start has to be delayed until some <strong>asynchronous tasks</strong> will be finished, for example,\\n    until the connection with the database will be established, you should consider using asynchronous providers. In order\\n    to create an <code>async</code> provider, we use the <code>useFactory</code>. The factory has to return a <code>Promise</code>    (thus\\n    <code>async</code> functions fit as well).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncComponent }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Learn more about the custom providers syntax <a routerLink=\\\"/fundamentals/custom-providers\\\">here</a>.\\n  </blockquote>\\n  <h4>Injection</h4>\\n  <p>\\n    The asynchronous providers can be simply injected to other components by their tokens (in the above case, by the <code>AsyncDbConnection</code>    token).\\n    Each class that depends on the asynchronous provider will be instantiated once the async provider is <strong>already\\n      resolved</strong>.\\n  </p>\\n  <p>\\n    The above example is for demonstration purposes. If you're looking for more detailed one, <a routerLink=\\\"/recipes/sql-typeorm\\\">see\\n      here</a>.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-async-components',\n  templateUrl: './async-components.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AsyncComponentsComponent extends BasePageComponent {\n  get asyncComponent() {\n    return `\n{\n  provide: 'AsyncDbConnection',\n  useFactory: async () => {\n    const connection = await createConnection(options);\n    return connection;\n  },\n},`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Circular dependency</h3>\\n  <p>\\n    The circular dependency occurs when for example, class A needs class B, and class B needs class A as well. Nest permits creating\\n    <strong>circular dependencies</strong> between both providers and modules, but we advise you to avoid whenever it's possible.\\n    Sometimes it's really difficult to avoid this kind of the relationships, that's why we have provided some ways to deal\\n    with this issue.\\n  </p>\\n  <h4>Forward reference</h4>\\n  <p>\\n    The <strong>forward reference</strong> allows Nest referring to references which aren't defined so far. When <code>CatsService</code>    and\\n    <code>CommonService</code> depend on each other, both sides of the relationship need to use <code>@Inject()</code> and\\n    the <code>forwardRef()</code> utility, otherwise Nest won't instantiate them because all of the essential metadata won't\\n    be available. Let's see the following snippet:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.service' | extension: forwardRefT.isJsActive }}\\n    <app-tabs #forwardRefT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"forwardRefT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forwardRef }}</code></pre>\\n  <pre [class.hide]=\\\"!forwardRefT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forwardRefJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>forwardRef()</code> function is imported from the <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    Here's the first side of the relationship. Now let's do the same with the <code>CommonService</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'common.service' | extension: forwardRefCommonT.isJsActive }}\\n    <app-tabs #forwardRefCommonT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"forwardRefCommonT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forwardRefCommon }}</code></pre>\\n  <pre [class.hide]=\\\"!forwardRefCommonT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ forwardRefCommonJs }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Warning</strong> You don't have a guarantee which constructor will be called first.\\n  </blockquote>\\n  <p>\\n    In order to create circular dependencies between modules you have to use the same <code>forwardRef()</code> utility on\\n    both parts of the modules association:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'common.module' | extension: forwardRefModuleT.isJsActive }}\\n    <app-tabs #forwardRefModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ forwardRefModule }}</code></pre>\\n  <h4>Module reference</h4>\\n  <p>\\n    Nest provides the <code>ModuleRef</code> class that can be simply injected into any component.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.service' | extension: moduleRefT.isJsActive }}\\n    <app-tabs #moduleRefT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"moduleRefT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ moduleRef }}</code></pre>\\n  <pre [class.hide]=\\\"!moduleRefT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ moduleRefJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>ModuleRef</code> class is imported from the <code>@nestjs/core</code> package.\\n  </blockquote>\\n  <p>\\n    The module reference has a <code>get()</code> method which allows retrieving a provider available in the current module.\\n    Additionally, you can switch to a non-strict mode, which enables you to pick any existing provider across the whole app.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ nonStrictMode }}</code></pre>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-circular-dependency',\n  templateUrl: './circular-dependency.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CircularDependencyComponent extends BasePageComponent {\n  get nonStrictMode() {\n    return `\nthis.moduleRef.get(Service, { strict: false });`;\n  }\n  get moduleRef() {\n    return `\n@Injectable()\nexport class CatsService implements OnModuleInit {\n  private service: Service;\n  constructor(private readonly moduleRef: ModuleRef) {}\n\n  onModuleInit() {\n    this.service = this.moduleRef.get(Service);\n  }\n}`;\n  }\n\n  get moduleRefJs() {\n    return `\n@Injectable()\n@Dependencies(ModuleRef)\nexport class CatsService {\n  constructor(moduleRef) {\n    this.moduleRef = moduleRef;\n  }\n\n  onModuleInit() {\n    this.service = this.moduleRef.get(Service);\n  }\n}`;\n  }\n\n  get proxy() {\n    return `\n@Injectable()\nexport class Proxy {\n  private readonly subject: Subject<any>;\n\n  get stream$(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  publish(event) {\n    this.subject.next(event);\n  }\n}`;\n  }\n\n  get forwardRef() {\n    return `\n@Injectable()\nexport class CatsService {\n  constructor(\n    @Inject(forwardRef(() => CommonService))\n    private readonly commonService: CommonService,\n  ) {}\n}`;\n  }\n\n  get forwardRefJs() {\n    return `\n@Injectable()\n@Dependencies(forwardRef(() => CommonService))\nexport class CatsService {\n  constructor(commonService) {\n    this.commonService = commonService;\n  }\n}`;\n  }\n\n  get forwardRefCommon() {\n    return `\n@Injectable()\nexport class CommonService {\n  constructor(\n    @Inject(forwardRef(() => CatsService))\n    private readonly catsService: CatsService,\n  ) {}\n}`;\n  }\n\n  get forwardRefCommonJs() {\n    return `\n@Injectable()\n@Dependencies(forwardRef(() => CatsService))\nexport class CommonService {\n  constructor(catsService) {\n    this.catsService = catsService;\n  }\n}`;\n  }\n\n  get forwardRefModule() {\n    return `\n@Module({\n  imports: [forwardRef(() => CatsModule)],\n})\nexport class CommonModule {}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Custom providers</h3>\\n  <p>\\n    There are a lot of scenarios when you might want to bind something <strong>directly</strong> to the Nest inversion of control container.\\n    For example, any constant values, configuration objects created based on the current environment, external libraries, or pre-calculated values that depends on few other defined providers.\\n    Moreover, you are able to override default implementations, e.g. use different classes or make use of various test doubles (for testing purposes) when needed.\\n  </p>\\n  <p>\\n    One essential thing that you should always keep in mind is that Nest uses <strong>tokens</strong> to identify dependencies.\\n    Usually, the auto-generated tokens are equal to classes. If you want to create a custom provider, you'd need to choose a token.\\n    Mostly, the custom tokens are represented by plain strings. Following best practices, you should hold those tokens in the separated file, for example, inside <code>constants.ts</code>.\\n  </p>\\n  <p>\\n    Let's go through the available options.\\n  </p>\\n  <h4>Use value</h4>\\n  <p>\\n    The <code>useValue</code> syntax is useful when it comes to either define a constant value, put external library into Nest container, or replace a real implementation with the mock object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useValue }}</code></pre>\\n  <p>\\n    In order to inject custom provider, we use the <code>@Inject()</code> decorator.\\n    This decorator takes a single argument - the token.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #injectT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"injectT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inject }}</code></pre>\\n  <pre [class.hide]=\\\"!injectT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ injectJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@Inject()</code> decorator is imported from <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    When you want to override a default provider's value, let's say, you'd like to force Nest to use a mock <code>CatsService</code> due to testing purposes, you can simply use an existing class as a token.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ override }}</code></pre>\\n  <p>\\n    In above example, the <code>CatsService</code> will be overridden by a passed <code>mockCatsService</code> mock object.\\n    It means, that Nest instead of creating <code>CatsService</code> instance manually, will treat this provider as resolved already, and use <code>mockCatsService</code> as its representative value.\\n  </p>\\n  <h4>Use class</h4>\\n  <p>\\n    The <code>useClass</code> syntax allows you using different class per chosen factors.\\n    For example, we have an abstract (or default) <code>ConfigService</code> class. Depending on the current environment, Nest should use a different implementation of the configuration service.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useClass }}</code></pre>\\n  <blockquote>\\n    <strong>Notice</strong> Instead of a custom token, we have used the <code>ConfigService</code> class, and therefore we have overridden the default implementation.\\n  </blockquote>\\n  <p>\\n    In this case, even if any class depends on <code>ConfigService</code>, Nest will inject an instance of the provided class (<code>DevelopmentConfigService</code> or <code>ProductionConfigService</code>) instead.\\n  </p>\\n  <h4>Use factory</h4>\\n  <p>\\n    The <code>useFactory</code> is a way of creating providers <strong>dynamically</strong>. The actual provider will be equal to a returned value of the factory function.\\n    The factory function can either depend on several different providers or stay completely independent.\\n    It means that factory may accept arguments, that Nest will resolve and pass during the instantiation process.\\n    Additionally, this function can return value <strong>asynchronously</strong>. It's explained in more detail <a routerLink=\\\"/fundamentals/async-providers\\\">here</a>.\\n    Use it when your provider has to be dynamically calculated or in case to resolve an asynchronous operation.\\n  </p>\\n  <span class=\\\"filename\\\">\\n     <app-tabs #useFactoryT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"useFactoryT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useFactory }}</code></pre>\\n  <pre [class.hide]=\\\"!useFactoryT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useFactoryJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> If your factory needs other providers, you have to pass their tokens inside the <code>inject</code> array. Nest will pass instances as arguments of the function in the same order.\\n  </blockquote>\\n  <h4>Export custom provider</h4>\\n  <p>\\n    In order to export a custom provider, we can either use a token or a whole object. \\n    The following example shows a token case:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #useFactoryExportsT></app-tabs>\\n </span>\\n <pre [class.hide]=\\\"useFactoryExportsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useFactoryExports }}</code></pre>\\n <pre [class.hide]=\\\"!useFactoryExportsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useFactoryExportsJs }}</code></pre>\\n <p>\\n   But you can use a whole object as well:\\n </p>\\n <span class=\\\"filename\\\">\\n    <app-tabs #useFactoryExportsObjectT></app-tabs>\\n </span>\\n <pre [class.hide]=\\\"useFactoryExportsObjectT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useFactoryExportsObject }}</code></pre>\\n <pre [class.hide]=\\\"!useFactoryExportsObjectT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useFactoryExportsObjectJs }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-dependency-injection',\n  templateUrl: './dependency-injection.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DependencyInjectionComponent extends BasePageComponent {\n  get useValue() {\n    return `\nimport { connection } from './connection';\n\nconst connectionProvider = {\n  provide: 'Connection',\n  useValue: connection,\n};\n\n@Module({\n  providers: [connectionProvider],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get override() {\n    return `\nimport { CatsService } from './cats.service';\n\nconst mockCatsService = {};\nconst catsServiceProvider = {\n  provide: CatsService,\n  useValue: mockCatsService,\n};\n\n@Module({\n  imports: [CatsModule],\n  providers: [catsServiceProvider],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get useFactory() {\n    return `\nconst connectionFactory = {\n  provide: 'Connection',\n  useFactory: (optionsProvider: OptionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get useFactoryJs() {\n    return `\nconst connectionFactory = {\n  provide: 'Connection',\n  useFactory: (optionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get useClass() {\n    return `\nconst configServiceProvider = {\n  provide: ConfigService,\n  useClass: process.env.NODE_ENV === 'development'\n    ? DevelopmentConfigService\n    : ProductionConfigService,\n};\n\n@Module({\n  providers: [configServiceProvider],\n})\nexport class ApplicationModule {}\n`;\n  }\n\n  get inject() {\n    return `\n@Injectable()\nclass CatsRepository {\n  constructor(@Inject('Connection') connection: Connection) {}\n}`;\n  }\n\n  get injectJs() {\n    return `\n@Injectable()\n@Dependencies('Connection')\nclass CatsRepository {\n  constructor(connection) {}\n}`;\n  }\n\n  get useFactoryExports() {\n    return `\nconst connectionFactory = {\n  provide: 'Connection',\n  useFactory: (optionsProvider: OptionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: ['Connection'],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get useFactoryExportsJs() {\n    return `\nconst connectionFactory = {\n  provide: 'Connection',\n  useFactory: (optionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: ['Connection'],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get useFactoryExportsObject() {\n    return `\nconst connectionFactory = {\n  provide: 'Connection',\n  useFactory: (optionsProvider: OptionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: [connectionFactory],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get useFactoryExportsObjectJs() {\n    return `\nconst connectionFactory = {\n  provide: 'Connection',\n  useFactory: (optionsProvider) => {\n    const options = optionsProvider.get();\n    return new DatabaseConnection(options);\n  },\n  inject: [OptionsProvider],\n};\n\n@Module({\n  providers: [connectionFactory],\n  exports: [connectionFactory],\n})\nexport class ApplicationModule {}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>E2E Testing</h3>\\n  <p>\\n    The end to end testing is a great way to verify how the application works from <strong>beginning to end</strong>.\\n    For example, when the application grows, it's difficult to manually test every API endpoint. The e2e tests help us to make sure that everything's working correctly and fits our requirements.\\n  </p>\\n  <p>\\n    The steps to perform e2e tests are exactly the same as in the case of <a routerLink=\\\"/fundamentals/unit-testing\\\">unit testing</a>.\\n    We're using <a href=\\\"https://github.com/facebook/jest\\\" target=\\\"blank\\\">Jest</a> library as a test runner and the <code>Test</code> static class to create a testing module.\\n    Moreover, to simulate the HTTP requests, we've installed the <a href=\\\"https://github.com/visionmedia/supertest\\\" target=\\\"blank\\\">supertest</a> library.\\n  </p>\\n  <p>\\n    Let's create an <code>e2e</code> directory and test the <code>CatsModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.e2e-spec' | extension: e2eTestsT.isJsActive }}\\n    <app-tabs #e2eTestsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ e2eTests }}</code></pre>\\n  <blockquote>\\n    <strong>Hint</strong> Keep your e2e test files inside the <code>e2e</code> directory. The testing files should have a <code>.e2e-spec</code> or <code>.e2e-test</code> suffix.\\n  </blockquote>\\n  <p>\\n    Here's a <code>cats.e2e-spec.ts</code> test file. It contains a single HTTP request test, where we're checking whether the response looks like expected.\\n  </p>\\n  <p>\\n    Notice that <code>TestingModule</code> instance provides an <code>overrideComponent()</code> method thus we can <strong>override</strong> the component which is the part of the imported module.\\n    Also, we can successively override the guards and interceptors using <code>overrideGuard()</code> and <code>overrideInterceptor()</code>.\\n  </p> \\n  <p>\\n    The compiled module has several methods well described in the following table:\\n  </p>\\n  <table>\\n    <tr>\\n      <td>\\n        <code>createNestInstance()</code>\\n      </td>\\n      <td>\\n        Creates a Nest instance based on a given module (returns <code>INestApplication</code>).\\n        Notice that it's necessary to manually initialize the application using <code>init()</code> method.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>createNestMicroservice()</code>\\n      </td>\\n      <td>\\n        Creates a Nest microservice instance based on a given module (returns <code>INestMicroservice</code>).\\n      </td>\\n    </tr>\\n    <tr>\\n    <td>\\n      <code>get()</code>\\n    </td>\\n    <td>\\n      Retrieves an instance of either controller or provider (including guards, filters, and so on) available in the application context.\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>\\n      <code>select()</code>\\n    </td>\\n    <td>\\n      Navigates through the module tree, for example, to pull out a specific instance from the selected module (used together with enabled strict mode).\\n    </td>\\n  </tr>\\n  </table>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-e2e-testing',\n  templateUrl: './e2e-testing.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class E2eTestingComponent extends BasePageComponent {\n  get e2eTests() {\n    return `\nimport * as express from 'express';\nimport * as request from 'supertest';\nimport { Test } from '@nestjs/testing';\nimport { CatsModule } from '../../src/cats/cats.module';\nimport { CatsService } from '../../src/cats/cats.service';\n\ndescribe('Cats', () => {\n    const server = express();\n    const catsService = { findAll: () => ['test'] };\n\n    beforeAll(async () => {\n        const module = await Test.createTestingModule({\n            imports: [CatsModule],\n          })\n          .overrideComponent(CatsService).useValue(catsService)\n          .compile();\n\n        const app = module.createNestApplication(server);\n        await app.init();\n    });\n\n    it(\\`/GET cats\\`, () => {\n        return request(server)\n            .get('/cats')\n            .expect(200)\n            .expect({\n              data: catsService.findAll(),\n            });\n    });\n});`;\n  }\n  \n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Platform agnosticism</h3>\\n  <p>\\n    The whole point of Nest is staying as a platform-agnostic framework. A platform independence makes possible creating <strong>reusable\\n      logical parts</strong>, that people can take advantage of across several different types of applications. A framework's\\n    architecture is focused on being applicable to any kind of server-side solution.\\n  </p>\\n  <h4>Build once, use everywhere</h4>\\n  <p>\\n    An <strong>overview</strong> category is mostly referring to HTTP server (REST APIs). However, all those building blocks\\n    can be easily used in different transport layers (<code>microservices</code> or <code>websockets</code> packages). Furthermore,\\n    Nest comes with a dedicated <a routerLink=\\\"/graphql/quick-start\\\">GraphQL</a> module. Last but not least, an <a routerLink=\\\"/execution-context\\\">execution\\n      context</a> feature helps to create everything that runs on Node.js on top of Nest.\\n  </p>\\n  <p>\\n    Nest inspires to be a fully-fledged platform, that brings a higher-level of reusability for your applications. Build once,\\n    use everywhere!\\n  </p>\\n</div>\"","module.exports = \"\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-platform-agnosticism',\n  templateUrl: './platform-agnosticism.component.html',\n  styleUrls: ['./platform-agnosticism.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlatformAgnosticismComponent extends BasePageComponent {\n\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Testing</h3>\\n  <p>\\n    Automatic tests are an essential part of the fully functional <strong>software product</strong>.\\n    That is very critical to cover at least the most sensitive parts of your system. \\n    In order to achieve that goal, we produce a set of different tests like integration tests, unit tests, e2e tests, and so on.\\n    And Nest provides a bunch of test utilities that improves testing experience.\\n  </p>\\n  <p>\\n    In general, you can use any <strong>testing framework</strong> that you enjoy working with.\\n    We don't enforce tooling, choose whatever fits your requirements.\\n    The main Nest application starter is integrated with <a href=\\\"https://github.com/facebook/jest\\\" target=\\\"blank\\\">Jest</a> framework to reduce an amount of overhead when it comes to start writing your tests, but still, you can get rid of it and use any other tool easily.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly, we need to install the required package:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n$ npm i --save-dev @nestjs/testing</code></pre>\\n  <h4>Unit testing</h4>\\n  <p> \\n    In the following example, we have two different classes, <code>CatsController</code> and <code>CatsService</code> respectively.\\n    As mentioned before, <a href=\\\"https://github.com/facebook/jest\\\" target=\\\"blank\\\">Jest</a> is used as a fully-fledged testing framework.\\n    That framework behaves like a test-runner and also, provides assert functions and test-doubles utilities that helps with mocking, spying, etc.\\n    We have manually enforced <code>catsService.findAll()</code> method to return <code>result</code> variable, once it's called.\\n    Thanks to that, we can test whether <code>catsController.findAll()</code> returns expected result, or not.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller.spec' | extension: isolatedTestsT.isJsActive }}\\n    <app-tabs #isolatedTestsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"isolatedTestsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ isolatedTests }}</code></pre>\\n  <pre [class.hide]=\\\"!isolatedTestsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ isolatedTestsJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Keep your test files nearby tested classes. The testing files should have a <code>.spec</code> or <code>.test</code> suffix.\\n  </blockquote>\\n  <p>\\n    We didn't make use of any existing Nest testing utility so far. \\n    Since we have manually taken care of instantiating tested classes, above test suite has nothing to do with Nest.\\n    This type of testing is called <strong>isolated tests</strong>.\\n  </p>\\n  <h4>Testing utilities</h4>\\n  <p>\\n    The <code>@nestjs/testing</code> package gives us a set of utilities that boost the testing process.\\n    Let's rewrite the previous example, but now, using exposed <code>Test</code> class.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller.spec' | extension: utilsT.isJsActive }}\\n    <app-tabs #utilsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"utilsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ utils }}</code></pre>\\n  <pre [class.hide]=\\\"!utilsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ utilsJs }}</code></pre>\\n  <p>\\n    <code>Test</code> class has a <code>createTestingModule()</code> method that takes a module metadata (the same object as this one passed in <code>@Module()</code> decorator) as an argument.\\n    This method creates a <code>TestingModule</code> instance which in turn provides a few methods, but only one of them is useful when it comes to unit tests - the <code>compile()</code>.\\n    This function is <strong>asynchronous</strong>, therefore it has to be awaited. Once module is compiled, you can retrieve any instance using <code>get()</code> method. \\n  </p>\\n  <p>\\n    In order to mock a real instance, you can override existing provider with a <a routerLink=\\\"/fundamentals/dependency-injection\\\">custom provider</a>.\\n  </p>\\n  <h4>End-to-end testing</h4>\\n  <p>\\n    When the application grows, it is difficult to manually test a behavior of each API endpoint. The end-to-end tests help us to make sure that everything is working correctly and fits project requirements.\\n    To perform e2e tests we use the same configuration as in the case of <strong>unit testing</strong>, but additionally, we take advantage of <a href=\\\"https://github.com/visionmedia/supertest\\\" target=\\\"blank\\\">supertest</a> library that allows simulating HTTP requests.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.e2e-spec' | extension: e2eTestsT.isJsActive }}\\n    <app-tabs #e2eTestsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ e2eTests }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Keep your e2e test files inside the <code>e2e</code> directory. The testing files should have a <code>.e2e-spec</code> or <code>.e2e-test</code> suffix.\\n  </blockquote>\\n  <p>\\n    The <code>cats.e2e-spec.ts</code> test file contains a single HTTP endpoint test (<code>/cats</code>).\\n    We have used <code>app.getHttpServer()</code> method to pick up an underlying HTTP server that runs in the background of Nest application.\\n    Notice that <code>TestingModule</code> instance provides a <code>overrideProvider()</code> method, and thus we can <strong>override</strong> the existing provider which is declared by the imported module.\\n    Also, we can successively override the guards, interceptors, filters, and pipes using corresponding methods, <code>overrideGuard()</code>, <code>overrideInterceptor()</code>, <code>overrideFilter()</code>, and <code>overridePipe()</code> respectively.\\n  </p> \\n  <p>\\n    The compiled module has several methods well described in the following table:\\n  </p>\\n  <table>\\n      <tr>\\n        <td>\\n          <code>createNestInstance()</code>\\n        </td>\\n        <td>\\n          Creates a Nest instance based on a given module (returns <code>INestApplication</code>).\\n          Notice that it's necessary to manually initialize the application using <code>init()</code> method.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          <code>createNestMicroservice()</code>\\n        </td>\\n        <td>\\n          Creates a Nest microservice instance based on a given module (returns <code>INestMicroservice</code>).\\n        </td>\\n      </tr>\\n      <tr>\\n      <td>\\n        <code>get()</code>\\n      </td>\\n      <td>\\n        Retrieves an instance of either controller or provider (including guards, filters, and so on) available in the application context.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>select()</code>\\n      </td>\\n      <td>\\n        Navigates through the module tree, for example, to pull out a specific instance from the selected module (used together with enabled strict mode).\\n      </td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-unit-testing',\n  templateUrl: './unit-testing.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UnitTestingComponent extends BasePageComponent {\n  get isolatedTests() {\n    return `\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController: CatsController;\n  let catsService: CatsService;\n\n  beforeEach(() => {\n    catsService = new CatsService();\n    catsController = new CatsController(catsService);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});`;\n  }\n\n  get isolatedTestsJs() {\n    return `\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController;\n  let catsService;\n\n  beforeEach(() => {\n    catsService = new CatsService();\n    catsController = new CatsController(catsService);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});`;\n  }\n\n  get utils() {\n    return `\nimport { Test } from '@nestjs/testing';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController: CatsController;\n  let catsService: CatsService;\n\n  beforeEach(async () => {\n    const module = await Test.createTestingModule({\n        controllers: [CatsController],\n        providers: [CatsService],\n      }).compile();\n\n    catsService = module.get<CatsService>(CatsService);\n    catsController = module.get<CatsController>(CatsController);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});`\n  }\n\n  get utilsJs() {\n    return `\nimport { Test } from '@nestjs/testing';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\ndescribe('CatsController', () => {\n  let catsController;\n  let catsService;\n\n  beforeEach(async () => {\n    const module = await Test.createTestingModule({\n        controllers: [CatsController],\n        providers: [CatsService],\n      }).compile();\n\n    catsService = module.get(CatsService);\n    catsController = module.get(CatsController);\n  });\n\n  describe('findAll', () => {\n    it('should return an array of cats', async () => {\n      const result = ['test'];\n      jest.spyOn(catsService, 'findAll').mockImplementation(() => result);\n\n      expect(await catsController.findAll()).toBe(result);\n    });\n  });\n});`\n  }\n\n  get e2eTests() {\n    return `\nimport * as request from 'supertest';\nimport { Test } from '@nestjs/testing';\nimport { CatsModule } from '../../src/cats/cats.module';\nimport { CatsService } from '../../src/cats/cats.service';\nimport { INestApplication } from '@nestjs/common';\n\ndescribe('Cats', () => {\n  let app: INestApplication;\n  let catsService = { findAll: () => ['test'] };\n\n  beforeAll(async () => {\n    const module = await Test.createTestingModule({\n      imports: [CatsModule],\n    })\n      .overrideProvider(CatsService)\n      .useValue(catsService)\n      .compile();\n\n    app = module.createNestApplication();\n    await app.init();\n  });\n\n  it(\\`/GET cats\\`, () => {\n    return request(app.getHttpServer())\n      .get('/cats')\n      .expect(200)\n      .expect({\n        data: catsService.findAll(),\n      });\n  });\n\n  afterAll(async () => {\n    await app.close();\n  });\n});`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Tooling</h3>\\n  <p>\\n    In the GraphQL world, a lot of articles complain how to handle stuff like an <strong>authentication</strong>, or\\n    <strong>side-effects</strong>\\n    of operations. Should we put it inside the business logic? Shall we use a higher-order function to enhance queries\\n    and mutations\\n    as well, for example, with an authorization logic? Or maybe use <a href=\\\"https://www.apollographql.com/docs/apollo-server/v2/features/directives.html\\\"\\n      target=\\\"blank\\\">schema directives</a>. There is no single answer anyway.\\n  </p>\\n  <p>\\n    Nest ecosystem is trying to help with this issue using existing features like <a routerLink=\\\"/guards\\\">guards</a>\\n    and <a routerLink=\\\"/interceptors\\\">interceptors</a>. The idea behind them is to reduce redundancy and also, supply\\n    you\\n    with tooling that helps creating well-structured, readable, and consistent applications.\\n  </p>\\n  <h4>Overview</h4>\\n  <p>\\n    You can use either <a routerLink=\\\"/guards\\\">guards</a>, <a routerLink=\\\"/interceptors\\\">interceptors</a>, and <a\\n      routerLink=\\\"/pipes\\\">pipes</a>\\n    in the same fashion as in the simple REST application. Additionally, you are able to easily create your own\\n    decorators, by\\n    leveraging <a routerLink=\\\"/custom-decorators\\\">custom decorators</a> feature. They all act equivalently. Let's have\\n    a look at the following code:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useGuardsExample }}</code></pre>\\n  <p>\\n    As you can see, GraphQL works pretty well with both guards and pipes. Thanks to that you can, for instance, move\\n    your authentication\\n    logic to the guard, or even reuse the same guard class as in the REST application. The interceptors works in the\\n    exact\\n    same way:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useInterceptorsExample }}</code></pre>\\n  <h4>Execution context</h4>\\n  <p>\\n    However, the <code>ExecutionContext</code> received by both guards and interceptors is somewhat different. GraphQL\\n    resolvers\\n    have a separate set of arguments, respectively, <code>root</code>, <code>args</code>, <code>context</code>, and\\n    <code>info</code>.\\n    Hence, we need to transform given <code>ExecutionContext</code> to <code>GqlExecutionContext</code>, which is\\n    basically\\n    very simple.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ gqlExecutionContext }}</code></pre>\\n  <p>\\n    <code>GqlExecutionContext</code> exposes corresponding methods for each argument, like <code>getArgs()</code>,\\n    <code>getContext()</code>,\\n    and so on. Now we can effortlessly pick up every argument specific for currently processed request.\\n  </p>\\n  <h4>Custom decorators</h4>\\n  <p>\\n    As mentioned before, the <a routerLink=\\\"/custom-decorators\\\">custom decorators</a> feature works like a charm with\\n    GraphQL\\n    resolvers as well. Though, the factory function takes an array of arguments, instead of a <code>request</code>\\n    object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ customDecorators }}</code></pre>\\n  <p>\\n    And then:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ customDecoratorsExample }}</code></pre>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-guards-interceptors',\n  templateUrl: './guards-interceptors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GuardsInterceptorsComponent extends BasePageComponent {\n  get useGuardsExample() {\n    return `\n@Query('author')\n@UseGuards(AuthGuard)\nasync getAuthor(@Args('id', ParseIntPipe) id: number) {\n  return await this.authorsService.findOneById(id);\n}`;\n  }\n\n  get useInterceptorsExample() {\n    return `\n@Mutation()\n@UseInterceptors(EventsInterceptor)\nasync upvotePost(@Args('postId') postId: number) {\n  return await this.postsService.upvoteById({ id: postId });\n}`;\n  }\n\n  get gqlExecutionContext() {\n    return `\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const ctx = GqlExecutionContext.create(context);\n    return true;\n  }\n}`;\n  }\n\n  get customDecorators() {\n    return `\nexport const User = createParamDecorator(\n  (data, [root, args, ctx, info]) => ctx.user,\n);`;\n  }\n\n  get customDecoratorsExample() {\n    return `\n@Mutation()\nasync upvotePost(\n  @User() user: UserEntity,\n  @Args('postId') postId: number,\n) {}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>IDE</h3>\\n  <p>\\n    One of the most popular GraphQL in-browser IDE is called <a href=\\\"https://github.com/graphql/graphiql\\\" target=\\\"blank\\\">GraphiQL</a>.\\n    In order to use a GraphiQL with your application, you need to set up a middleware. \\n    This particular middleware comes with <code>apollo-server-express</code> package that we had to install a while ago.\\n    Its name is a <code>graphiqlExpress()</code>.\\n  </p>\\n  <p>\\n    In order to set up a middleware, we need to open an <code>app.module.ts</code> file once again:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: appModuleSchemaT.isJsActive }}\\n    <app-tabs #appModuleSchemaT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"appModuleSchemaT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ createSchema }}</code></pre>\\n  <pre [class.hide]=\\\"!appModuleSchemaT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ createSchemaJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>graphiqlExpress()</code> offers few other options, read more about them <a href=\\\"https://www.apollographql.com/docs/apollo-server/graphiql.html\\\" target=\\\"blank\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    Afterward, when you navigate to the <code>http://localhost:PORT/graphiql</code> you should see a graphical interactive GraphiQL IDE.\\n  </p>\\n</div>\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-ide',\n  templateUrl: './ide.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IdeComponent extends BasePageComponent {\n  get createSchema() {\n    return `\nimport { Module, MiddlewareConsumer, NestModule } from '@nestjs/common';\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport { GraphQLModule, GraphQLFactory } from '@nestjs/graphql';\n\n@Module({\n  imports: [GraphQLModule],\n})\nexport class ApplicationModule implements NestModule {\n  constructor(private readonly graphQLFactory: GraphQLFactory) {}\n\n  configure(consumer: MiddlewareConsumer) {\n    const typeDefs = this.graphQLFactory.mergeTypesByPaths('./**/*.graphql');\n    const schema = this.graphQLFactory.createSchema({ typeDefs });\n\n    consumer\n      .apply(graphiqlExpress({ endpointURL: '/graphql' }))\n      .forRoutes('/graphiql')\n      .apply(graphqlExpress(req => ({ schema, rootValue: req })))\n      .forRoutes('/graphql');\n  }\n}`;\n  }\n\n  get createSchemaJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { graphqlExpress, graphiqlExpress } from 'apollo-server-express';\nimport { GraphQLModule, GraphQLFactory } from '@nestjs/graphql';\n\n@Dependencies(GraphQLFactory)\n@Module({\n  imports: [GraphQLModule],\n})\nexport class ApplicationModule {\n  constructor(graphQLFactory) {\n    this.graphQLFactory = graphQLFactory;\n  }\n\n  configure(consumer) {\n    const typeDefs = this.graphQLFactory.mergeTypesByPaths('./**/*.graphql');\n    const schema = this.graphQLFactory.createSchema({ typeDefs });\n\n    consumer\n      .apply(graphiqlExpress({ endpointURL: '/graphql' }))\n      .forRoutes('/graphiql')\n      .apply(graphqlExpress(req => ({ schema, rootValue: req })))\n      .forRoutes('/graphql');\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Mutations</h3>\\n  <p>\\n    In GraphQL, in order to modify the server-side data, we use mutations (read more\\n    <a href=\\\"http://graphql.org/learn/queries/#mutations\\\" target=\\\"blank\\\">here</a>)a. The official\\n    <a href=\\\"https://www.apollographql.com/docs/graphql-tools/generate-schema.html\\\" target=\\\"blank\\\">Apollo</a>\\n    documentation\\n    shares an\\n    <code>upvotePost()</code> mutation example. This mutation allows to increase a post\\n    <code>votes</code> property value. In order to create an equivalent mutation in Nest, we'll make use of the\\n    <code>@Mutation()</code> decorator. Let's extend our\\n    <code>AuthorResolver</code> used in the previous section (see <a routerLink=\\\"/graphql/resolvers-map\\\">resolvers</a>).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ realWorldExample }}</code></pre>\\n  <p>\\n    Notice that we've assumed that the business logic has been moved to the <code>PostsService</code>\\n    (respectively\\n    querying post and incrementing <code>votes</code> property).\\n  </p>\\n  <h4>Type definitions</h4>\\n  <p>\\n    The last step is to add our mutation to the existing types definition.\\n  </p>\\n  <pre><code class=\\\"language-java\\\">{{ typeDefs }}</code></pre>\\n  <p>\\n    The <code>upvotePost(postId: Int!): Post</code> mutation should be available now.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mutations',\n  templateUrl: './mutations.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MutationsComponent extends BasePageComponent {\n  get mutationsExample() {\n    return `\nMutation: {\n  upvotePost: (_, { postId }) => {\n    const post = find(posts, { id: postId });\n    if (!post) {\n      throw new Error(\\`Couldn't find post with id \\${postId}\\`);\n    }\n    post.votes += 1;\n    return post;\n  },\n}`;\n  }\n\n  get resolversWithNames() {\n    return `\nimport { Query, Mutation, Resolver, ResolveProperty, Parent, Args } from '@nestjs/graphql';\nimport { find, filter } from 'lodash';\n\n// example data\nconst authors = [\n  { id: 1, firstName: 'Tom', lastName: 'Coleman' },\n  { id: 2, firstName: 'Sashko', lastName: 'Stubailo' },\n];\nconst posts = [\n  { id: 1, authorId: 1, title: 'Introduction to GraphQL', votes: 2 },\n  { id: 2, authorId: 2, title: 'Welcome to Meteor', votes: 3 },\n];\n\n@Resolver('Author')\nexport class AuthorResolver {\n  @Query('author')\n  getAuthor(@Args('id') id: number) {\n    return find(authors, { id: id });\n  }\n\n  @Mutation()\n  upvotePost(@Args('postId') postId: number) {\n    const post = find(posts, { id: postId });\n    if (!post) {\n      throw new Error(\\`Couldn't find post with id \\${postId}\\`);\n    }\n    post.votes += 1;\n    return post;\n  }\n\n  @ResolveProperty('posts')\n  getPosts(@Parent() author) {\n    return filter(posts, { authorId: author.id });\n  }\n}`;\n  }\n\n  get realWorldExample() {\n    return `\n@Resolver('Author')\nexport class AuthorResolver {\n  constructor(\n    private readonly authorsService: AuthorsService,\n    private readonly postsService: PostsService,\n  ) {}\n\n  @Query('author')\n  async getAuthor(@Args('id') id: number) {\n    return await this.authorsService.findOneById(id);\n  }\n\n  @Mutation()\n  async upvotePost(@Args('postId') postId: number) {\n    return await this.postsService.upvoteById({ id: postId });\n  }\n\n  @ResolveProperty('posts')\n  async getPosts(@Parent() { id }) {\n    return await this.postsService.findAll({ authorId: id });\n  }\n}`;\n  }\n\n  get typeDefs() {\n    return `\ntype Author {\n  id: Int!\n  firstName: String\n  lastName: String\n  posts: [Post]\n}\n\ntype Post {\n  id: Int!\n  title: String\n  votes: Int\n}\n\ntype Query {\n  author(id: Int!): Author\n}\n\ntype Mutation {\n  upvotePost(postId: Int!): Post\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Quick start</h3>\\n  <p>\\n    GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. It is an\\n    elegant\\n    approach that solves many of these problems that we have with typical REST apis. There is a great\\n    <a href=\\\"https://dev-blog.apollodata.com/graphql-vs-rest-5d425123e34b\\\" target=\\\"blank\\\">comparison</a> between\\n    GraphQL\\n    and REST. In this set of articles, we're not going to explain what the GraphQL is, but rather show how to work with\\n    the\\n    dedicated\\n    <code>@nestjs/graphql</code> module. This chapter assumes that you are already familiar with GraphQL essentials.\\n  </p>\\n  <p>\\n    The\\n    <code>GraphQLModule</code> is nothing more than a wrapper around the\\n    <a href=\\\"https://www.apollographql.com/\\\" target=\\\"blank\\\">Apollo</a> server. We don't reinvent the wheel but provide\\n    a\\n    ready to use module instead, that brings a clean way to play with the GraphQL and Nest together.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly, we need to install the required packages:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n$ npm i --save @nestjs/graphql apollo-server-express graphql-tools graphql</code></pre>\\n  <h4>Getting started</h4>\\n  <p>\\n    Once the packages are installed, we can register the <code>GraphQlModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: appModuleT.isJsActive }}\\n    <app-tabs #appModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ middleware }}</code></pre>\\n  <p>\\n    The <code>typePaths</code> property indicates where the <code>GraphQLModule</code> should look for the GraphQL\\n    files.\\n    Besides, all options will be passed down to the underlying Apollo instance (read more about available settings <a\\n      href=\\\"https://www.apollographql.com/docs/apollo-server/v2/api/apollo-server.html#constructor-options-lt-ApolloServer-gt\\\"\\n      target=\\\"blank\\\">here</a>). For instance, if you want to disable the <code>playground</code> and turn off the <code>debug</code>\\n    mode,\\n    simply pass below options:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: moreOptionsT.isJsActive }}\\n    <app-tabs #moreOptionsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ moreOptions }}</code></pre>\\n  <p>\\n    As mentioned, all these settings will be forwarded to the <code>ApolloServer</code> constructor.\\n  </p>\\n  <h4>Playground</h4>\\n  <p>\\n    The playground is a graphical, interactive, in-browser GraphQL IDE, available by default on the same URL as the\\n    GraphQL server\\n    itself. Whilst your application is running in the background, open your web browser and navigate to <code>http://localhost:3000/graphql</code>\\n    (host\\n    and port may vary depending on your configuration).\\n  </p>\\n  <figure>\\n    <img src=\\\"/assets/playground.png\\\" alt=\\\"\\\" />\\n  </figure>\\n  <h4>Multiple endpoints</h4>\\n  <p>\\n    Another useful feature of this module is a capability to serve multiple endpoints at once. Thanks to that, you can\\n    decide which modules should be included in which endpoint. By default, <code>GraphQL</code> searches for resolvers\\n    throughout the whole app. To limit only a subset of modules, you can use the <code>include</code> property.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ includeSubset }}</code></pre>\\n  <h4>Async configuration</h4>\\n  <p>\\n    Quite often you might want to asynchronously pass your module options instead of passing them beforehand. In such\\n    case, use\\n    <code>forRootAsync()</code> method, that provides a couple of various ways to deal with async data.\\n  </p>\\n  <p>\\n    First possible approach is to use a factory function:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfiguration }}</code></pre>\\n  <p>\\n    Obviously, our factory behaves like every other one (might be <code>async</code> and is able to inject dependencies\\n    through\\n    <code>inject</code>).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationFactoryAsync }}</code></pre>\\n  <p>\\n    Alternatively, you are able to use class instead of a factory.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClass }}</code></pre>\\n  <p>\\n    Above construction will instantiate <code>GqlConfigService</code> inside <code>GraphQLModule</code> and will\\n    leverage\\n    it to create options object. The <code>GqlConfigService</code> has to implement <code>GqlOptionsFactory</code>\\n    interface.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClassBody }}</code></pre>\\n  <p>\\n    In order to prevent the creation of <code>GqlConfigService</code> inside <code>GraphQLModule</code> and use a\\n    provider\\n    imported from a different module, you can use the <code>useExisting</code> syntax.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationExisting }}</code></pre>\\n  <p>\\n    It works the same as <code>useClass</code> with one critical difference - <code>GraphQLModule</code> will lookup\\n    imported\\n    modules to reuse already created <code>ConfigService</code>, instead of instantiating it on its own.\\n  </p>\\n  <h4>Example</h4>\\n  <p>\\n    A fully working sample is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/12-graphql-apollo\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-quick-start',\n  templateUrl: './quick-start.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickStartComponent extends BasePageComponent {\n  get middleware() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      typePaths: ['./**/*.graphql'],\n    }),\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get moreOptions() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { GraphQLModule } from '@nestjs/graphql';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      typePaths: ['./**/*.graphql'],\n      debug: false,\n      playground: false,\n    }),\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get asyncConfiguration() {\n    return `\nGraphQLModule.forRootAsync({\n  useFactory: () => ({\n    typePaths: ['./**/*.graphql'],\n  }),\n})`;\n  }\n\n  get asyncConfigurationFactoryAsync() {\n    return `\nGraphQLModule.forRootAsync({\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => ({\n    typePaths: configService.getString('GRAPHQL_TYPE_PATHS'),\n  }),\n  inject: [ConfigService],\n})`;\n  }\n\n  get asyncConfigurationClass() {\n    return `\nGraphQLModule.forRootAsync({\n  useClass: GqlConfigService,\n})`;\n  }\n\n  get asyncConfigurationClassBody() {\n    return `\n@Injectable()\nclass GqlConfigService implements GqlOptionsFactory {\n  createGqlOptions(): GqlModuleOptions {\n    return {\n      typePaths: ['./**/*.graphql'],\n    };\n  }\n}`;\n  }\n\n  get asyncConfigurationExisting() {\n    return `\nGraphQLModule.forRootAsync({\n  imports: [ConfigModule],\n  useExisting: ConfigService,\n})`;\n  }\n\n  get includeSubset() {\n    return `\nGraphQLModule.forRoot({\n  include: [CatsModule],\n})`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Resolvers</h3>\\n  <p>\\n    Typically, you have to create a resolvers map manually. The <code>@nestjs/graphql</code>\\n    package, on the other hand, generate resolvers map automatically using the metadata provided\\n    by the decorators. In order to learn the library basics, we'll create a simple authors API. Firstly, let's define\\n    our types in SDL (read <a href=\\\"http://graphql.org/learn/schema/#type-language\\\" target=\\\"blank\\\">more</a>):\\n  </p>\\n  <pre><code class=\\\"language-java\\\">{{ typeDefs }}</code></pre>\\n  <p>\\n    Our GraphQL schema contains single query exposed, the <code>author(id: Int!): Author</code>.\\n    Now, let's create an <code>AuthorResolver</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ resolvers }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> If you use the <code>@Resolver()</code> decorator, you don't have to mark a class as an <code>@Injectable()</code>,\\n    otherwise, it's necessary.\\n  </blockquote>\\n  <p>\\n    The <code>@Resolver()</code> decorator does not affect queries and mutations (neither <code>@Query()</code> nor\\n    <code>@Mutation()</code> decorators).\\n    It only informs Nest that each <code>@ResolveProperty()</code> inside this particular class has a parent, which is\\n    an <code>Author</code> type\\n    in this case (<code>Author.posts</code> relation).\\n  </p>\\n  <p>\\n    Conventionally, we would use something like <code>getAuthor()</code> or <code>getPosts()</code> as method names.\\n    We\\n    can do that easily as well by moving the real names between decorator's parentheses.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ realWorldExample }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@Resolver()</code> decorator can be used at the method-level as well.\\n  </blockquote>\\n  <h4>Decorators</h4>\\n  <p>\\n    You may note that we refer to the following arguments using dedicated decorators. Below is a\\n    comparison\\n    of the provided decorators and the plain Apollo parameters they represent.\\n  </p>\\n  <table>\\n    <tbody>\\n      <tr>\\n        <td><code>@Root()</code> and <code>@Parent()</code></td>\\n        <td><code>root</code>/<code>parent</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Context(param?: string)</code></td>\\n        <td><code>context</code> / <code>context[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Info(param?: string)</code></td>\\n        <td><code>info</code> / <code>info[param]</code></td>\\n      </tr>\\n      <tr>\\n        <td><code>@Args(param?: string)</code></td>\\n        <td><code>args</code> / <code>args[param]</code></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <h4>Module</h4>\\n  <p>\\n    Once we're done here, we have to register the <code>AuthorResolver</code>\\n    somewhere,\\n    for example inside the newly created <code>AuthorsModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ authorsModule }}</code></pre>\\n  <p>\\n    The <code>GraphQLModule</code> will take care of reflecting the metadata and transforming class into the correct\\n    resolvers\\n    map automatically. The only thing that you should be aware of is that you need to import this module somewhere,\\n    therefore\\n    Nest will know that <code>AuthorsModule</code> truly exists.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Learn more about GraphQL queries <a href=\\\"http://graphql.org/learn/queries/\\\" target=\\\"blank\\\">here</a>.\\n  </blockquote>\\n  <h4>Typings</h4>\\n  <p>\\n    Separate creation of both GraphQL types and corresponding TypeScript definitions creates unnecessary redundancy.\\n    Eventually, we end up without a single source of truth and each change made within SDL forces us to adjust\\n    interfaces\\n    as well. Thus, the <code>@nestjs/graphql</code> package serves another interesting functionality, which is\\n    the automatic generation of TS definitions using abstract syntax tree (AST). In order to enable it, simply\\n    customize <code>definitions</code> property.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ generateTypings }}</code></pre>\\n  <p>\\n    The <code>src/graphql.ts</code> indicates where to save TypeScript output. By default, all types are transformed\\n    to the interfaces.\\n    However, you can switch to classes instead by changing <code>outputAs</code> property to <code>class</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ generateTypingsAsClass }}</code></pre>\\n  <p>\\n    Consequently, it will generate the following file:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ generatedTypings }}</code></pre>\\n  <p>\\n    Classes allow you using <strong>decorators</strong> which makes them extremely useful in terms of the validation\\n    purposes (read <a routerLink=\\\"/techniques/validation\\\">more</a>). For example:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ validateInput }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong>\\n    To enable auto-validation of your inputs (and parameters), you have to use <code>ValidationPipe</code>. Read more\\n    about validation <a routerLink=\\\"/techniques/validation\\\">here</a> or more specifically about pipes <a routerLink=\\\"/pipes\\\">here</a>.\\n  </blockquote>\\n</div>\\n\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-resolvers-map',\n  templateUrl: './resolvers-map.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResolversMapComponent extends BasePageComponent {\n  get resolvers() {\n    return `\n@Resolver('Author')\nexport class AuthorResolver {\n  constructor(\n    private readonly authorsService: AuthorsService,\n    private readonly postsService: PostsService,\n  ) {}\n\n  @Query()\n  async author(@Args('id') id: number) {\n    return await this.authorsService.findOneById(id);\n  }\n\n  @ResolveProperty()\n  async posts(@Parent() author) {\n    const { id } = author;\n    return await this.postsService.findAll({ authorId: id });\n  }\n}`;\n  }\n\n  get realWorldExample() {\n    return `\n@Resolver('Author')\nexport class AuthorResolver {\n  constructor(\n    private readonly authorsService: AuthorsService,\n    private readonly postsService: PostsService,\n  ) {}\n\n  @Query('author')\n  async getAuthor(@Args('id') id: number) {\n    return await this.authorsService.findOneById(id);\n  }\n\n  @ResolveProperty('posts')\n  async getPosts(@Parent() author) {\n    const { id } = author;\n    return await this.postsService.findAll({ authorId: id });\n  }\n}`;\n  }\n\n  get authorsModule() {\n    return `\n@Module({\n  imports: [PostsModule],\n  providers: [AuthorsService, AuthorResolver],\n})\nexport class AuthorsModule {}`;\n  }\n\n  get typeDefs() {\n    return `\ntype Author {\n  id: Int!\n  firstName: String\n  lastName: String\n  posts: [Post]\n}\n\ntype Post {\n  id: Int!\n  title: String\n  votes: Int\n}\n\ntype Query {\n  author(id: Int!): Author\n}`;\n  }\n\n  get generateTypings() {\n    return `\nGraphQLModule.forRoot({\n  typePaths: ['./**/*.graphql'],\n  definitions: {\n    path: join(process.cwd(), 'src/graphql.ts'),\n  },\n})`;\n  }\n\n  get generateTypingsAsClass() {\n    return `\nGraphQLModule.forRoot({\n  typePaths: ['./**/*.graphql'],\n  definitions: {\n    path: join(process.cwd(), 'src/graphql.ts'),\n    outputAs: 'class',\n  },\n})`;\n  }\n\n  get generatedTypings() {\n    return `\nexport class Author {\n  id: number;\n  firstName?: string;\n  lastName?: string;\n  posts?: Post[];\n}\n\nexport class Post {\n  id: number;\n  title?: string;\n  votes?: number;\n}\n\nexport abstract class IQuery {\n  abstract author(id: number): Author | Promise<Author>;\n}`;\n  }\n\n  get validateInput() {\n    return `\nimport { MinLength, MaxLength } from 'class-validator';\n\nexport class CreatePostInput {\n  @MinLength(3)\n  @MaxLength(50)\n  title: string;\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Scalars</h3>\\n  <p>\\n    In order to define a custom scalar (read more about scalars <a href=\\\"https://www.apollographql.com/docs/graphql-tools/scalars.html\\\"\\n      target=\\\"blank\\\">here</a>), we have to create a type definition and a dedicated resolver as well. Here (as in the official\\n    documentation), we’ll take the <code>graphql-type-json</code> package for demonstration purposes. This npm package defines\\n    a <code>JSON</code> GraphQL scalar type. Firstly, let's install the package:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save graphql-type-json\\n</code></pre>\\n  <p>\\n    Once the package is installed, we have to pass a custom resolver to the <code>forRoot()</code> method:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ jsonScalar }}</code></pre>\\n  <p>\\n    Now we can use <code>JSON</code> scalar in our type definitions:\\n  </p>\\n  <pre><code class=\\\"language-java\\\">{{ typeDefJson }}</code></pre>\\n  <h4>Classes</h4>\\n  <p>\\n    Another form of defining the scalar type is to create a simple class. Let's say that we would like to enhance our schema\\n    with the <code>Date</code> type.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ classScalar }}</code></pre>\\n  <p>\\n    Afterward, we need to register <code>DateScalar</code> as a provider.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ registerDateScalar }}</code></pre>\\n  <p>\\n    And now we are able to use <code>Date</code> scalar in our type definitions.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-scalars',\n  templateUrl: './scalars.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScalarsComponent extends BasePageComponent {\n  get jsonScalar() {\n    return `\nimport * as GraphQLJSON from 'graphql-type-json';\n\n@Module({\n  imports: [\n    GraphQLModule.forRoot({\n      typePaths: ['./**/*.graphql'],\n      resolvers: { JSON: GraphQLJSON },\n    }),\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get typeDefJson() {\n    return `\nscalar JSON\n\ntype Foo {\n  field: JSON\n}`;\n  }\n\n  get classScalar() {\n    return `\nimport { Scalar } from '@nestjs/graphql';\nimport { Kind } from 'graphql';\n\n@Scalar('Date')\nexport class DateScalar {\n  description = 'Date custom scalar type';\n\n  parseValue(value) {\n    return new Date(value); // value from the client\n  }\n\n  serialize(value) {\n    return value.getTime(); // value sent to the client\n  }\n\n  parseLiteral(ast) {\n    if (ast.kind === Kind.INT) {\n      return parseInt(ast.value, 10); // ast value is always in string format\n    }\n    return null;\n  }\n}`;\n  }\n\n  get registerDateScalar() {\n    return `\n@Module({\n  providers: [DateScalar],\n})\nexport class CommonModule {}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Schema stitching</h3>\\n  <p>\\n    The schema stitching is a feature that allows creating a single GraphQL schema from multiple underlying GraphQL APIs. You\\n    can read more about it <a href=\\\"https://www.apollographql.com/docs/graphql-tools/schema-stitching.html\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n  <h4>Proxying</h4>\\n  <p>\\n    To add the ability to proxy fields between schemas, you need to create additional resolvers between them. Let's have a look\\n    on the example from the <a href=\\\"https://www.apollographql.com/docs/graphql-tools/schema-stitching.html#adding-resolvers\\\"\\n      target=\\\"blank\\\">Apollo</a> documentation:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ stitchingExample }}</code></pre>\\n  <p>\\n    Here we delegate <code>chirps</code> property of <code>User</code> to another GraphQL API. In order to achieve the same\\n    behavior in Nest, we use <code>@DelegateProperty()</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ stitchNestWay }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@Resolver()</code> decorator is used here at the method-level, but you can use it at\\n    top (class) level as well.\\n  </blockquote>\\n  <p>\\n    Then, let's take a step back to the <code>graphqlExpress</code> middleware. We need to merge our schemas and add delegates\\n    between them. To create delegates we use <code>createDelegates()</code> method of the <code>GraphQLFactory</code> class.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: appModuleSchemaT.isJsActive }}\\n    <app-tabs #appModuleSchemaT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createSchema }}</code></pre>\\n  <p>\\n    In order to merge schemas, we have used <code>mergeSchemas()</code> function (<a href=\\\"https://www.apollographql.com/docs/graphql-tools/schema-stitching.html#mergeSchemas\\\"\\n      target=\\\"blank\\\">read more</a>). Moreover, you may notice <code>chirpsSchema</code> and <code>linkTypeDefs</code> variables.\\n    They're copied & pasted directly from the <a href=\\\"https://www.apollographql.com/docs/graphql-tools/schema-stitching.html\\\"\\n      target=\\\"blank\\\">Apollo</a> documentation.\\n  </p>\\n  <span class=\\\"filename\\\"><app-tabs></app-tabs></span>\\n  <pre><code class=\\\"language-typescript\\\">{{ chirpsSchema }}</code></pre>\\n  <p>\\n    That's all.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-schema-stitching',\n  templateUrl: './schema-stitching.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SchemaStitchingComponent extends BasePageComponent {\n  get stitchingExample() {\n    return `\nmergeInfo => ({\n  User: {\n    chirps: {\n      fragment: \\`fragment UserFragment on User { id }\\`,\n      resolve(parent, args, context, info) {\n        const authorId = parent.id;\n        return mergeInfo.delegate(\n          'query',\n          'chirpsByAuthorId',\n          {\n            authorId,\n          },\n          context,\n          info,\n        );\n      },\n    },\n  }\n})`;\n  }\n\n  get stitchNestWay() {\n    return `\n@Resolver('User')\n@DelegateProperty('chirps')\nfindChirpsByUserId() {\n  return (mergeInfo: MergeInfo) => ({\n    fragment: \\`fragment UserFragment on User { id }\\`,\n    resolve(parent, args, context, info) {\n      const authorId = parent.id;\n      return mergeInfo.delegate(\n        'query',\n        'chirpsByAuthorId',\n        {\n          authorId,\n        },\n        context,\n        info,\n      );\n    },\n  });\n}`;\n  }\n\n  get createSchema() {\n    return `\nconfigure(consumer) {\n  const typeDefs = this.graphQLFactory.mergeTypesByPaths('./**/*.graphql');\n  const localSchema = this.graphQLFactory.createSchema({ typeDefs });\n  const delegates = this.graphQLFactory.createDelegates();\n  const schema = mergeSchemas({\n    schemas: [localSchema, chirpSchema, linkTypeDefs],\n    resolvers: delegates,\n  });\n\n  consumer\n    .apply(graphqlExpress(req => ({ schema, rootValue: req })))\n    .forRoutes('/graphql');\n}`;\n  }\n\n  get chirpsSchema() {\n    return `\nimport { makeExecutableSchema } from 'graphql-tools';\n    \nconst chirpSchema = makeExecutableSchema({\n  typeDefs: \\`\n    type Chirp {\n      id: ID!\n      text: String\n      authorId: ID!\n    }\n\n    type Query {\n      chirpById(id: ID!): Chirp\n      chirpsByAuthorId(authorId: ID!): [Chirp]\n    }\n  \\`\n});\nconst linkTypeDefs = \\`\n  extend type User {\n    chirps: [Chirp]\n  }\n\n  extend type Chirp {\n    author: User\n  }\n\\`;`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Subscriptions</h3>\\n  <p>\\n    Subscription is just another GraphQL operation type like Query and Mutation. It allows creating real-time\\n    subscriptions over\\n    a bidirectional transport layer, mainly over websockets. Read more about the subscriptions <a href=\\\"https://www.apollographql.com/docs/graphql-subscriptions\\\"\\n      target=\\\"blank\\\">here</a>. Below is a <code>commentAdded</code> subscription example, copied and pasted directly\\n    from the official <a href=\\\"https://www.apollographql.com/docs/graphql-subscriptions/subscriptions-to-schema.html\\\"\\n      target=\\\"blank\\\">Apollo</a> documentation:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ subscriptionOfficialExample }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> The <code>pubsub</code> is an instance of <code>PubSub</code> class. Read more about it <a\\n      href=\\\"https://www.apollographql.com/docs/graphql-subscriptions/setup.html\\\" target=\\\"blank\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    In order to create an equivalent subscription in Nest, we'll make use of the\\n    <code>@Subscription()</code> decorator. Let's extend our\\n    <code>AuthorResolver</code> used in the <a routerLink=\\\"/graphql/resolvers-map\\\">resolvers</a> section.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ resolversWithNames }}</code></pre>\\n  <p>\\n    We have used a local <code>PubSub</code> instance here. Instead, we should define <code>PubSub</code> as a <strong>provider</strong>,\\n    inject it through the constructor (using <code>@Inject()</code> decorator), and reuse it across the whole\\n    application.\\n    You can read more about Nest custom providers <a routerLink=\\\"/fundamentals/custom-providers\\\">here</a>.\\n  </p>\\n  <h4>Module</h4>\\n  <p>\\n    In order to enable subscriptions, we have to set <code>installSubscriptionHandlers</code> property to <code>true</code>.\\n  </p>\\n  <pre><code class=\\\"language-java\\\">{{ enableSubscriptions }}</code></pre>\\n  <p>\\n    To customize the subscriptions server (e.g. change port), you can use <code>subscriptions</code> property (read <a\\n      href=\\\"https://www.apollographql.com/docs/apollo-server/v2/api/apollo-server.html#constructor-options-lt-ApolloServer-gt\\\"\\n      target=\\\"blank\\\">more</a>).\\n  </p>\\n  <h4>Type definitions</h4>\\n  <p>\\n    The last step is to update type definitions file.\\n  </p>\\n  <pre><code class=\\\"language-java\\\">{{ typeDefs }}</code></pre>\\n  <p>\\n    Well done. We created a single <code>commentAdded(repoFullName: String!): Comment</code> subscription.\\n    You can find a full sample implementation <a href=\\\"https://github.com/nestjs/nest/blob/master/sample/12-graphql-apollo\\\"\\n      target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-subscriptions',\n  templateUrl: './subscriptions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SubscriptionsComponent extends BasePageComponent {\n  get subscriptionOfficialExample() {\n    return `\nSubscription: {\n  commentAdded: {\n    subscribe: () => pubSub.asyncIterator('commentAdded')\n  }\n}`;\n  }\n\n  get resolversWithNames() {\n    return `\nconst pubSub = new PubSub();\n\n@Resolver('Author')\nexport class AuthorResolver {\n  constructor(\n    private readonly authorsService: AuthorsService,\n    private readonly postsService: PostsService,\n  ) {}\n\n  @Query('author')\n  async getAuthor(@Args('id') id: number) {\n    return await this.authorsService.findOneById(id);\n  }\n\n  @ResolveProperty('posts')\n  async getPosts(@Parent() author) {\n    const { id } = author;\n    return await this.postsService.findAll({ authorId: id });\n  }\n\n  @Subscription()\n  commentAdded() {\n    return {\n      subscribe: () => pubSub.asyncIterator('commentAdded'),\n    };\n  }\n}`;\n  }\n\n  get enableSubscriptions() {\n    return `\nGraphQLModule.forRoot({\n  typePaths: ['./**/*.graphql'],\n  installSubscriptionHandlers: true,\n})`;\n  }\n\n  get typeDefs() {\n    return `\ntype Author {\n  id: Int!\n  firstName: String\n  lastName: String\n  posts: [Post]\n}\n\ntype Post {\n  id: Int!\n  title: String\n  votes: Int\n}\n\ntype Query {\n  author(id: Int!): Author\n}\n\ntype Comment {\n  id: String\n  content: String\n}\n\ntype Subscription {\n  commentAdded(repoFullName: String!): Comment\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Guards</h3>\\n  <p>\\n    A guard is a class annotated with the <code>@Injectable()</code> decorator. The guard should implement the <code>CanActivate</code>    interface.\\n  </p>\\n  <figure><img src=\\\"/assets/Guards_1.png\\\" /></figure>\\n  <p>\\n    The guards have a <strong>single responsibility</strong>. They determine whether a request shall be handled by the route\\n    handler or not. Until now, the access restriction logic was mostly inside the <a routerLink=\\\"/middleware\\\">middleware</a>.\\n    It's still fine since things such as token validation or attaching properties to the <code>request</code> object are\\n    not strongly connected with a particular routes.\\n  </p>\\n  <p>\\n    But middleware, by its nature, is dumb. It doesn't know which handler will be executed after calling the <code>next()</code>    function.\\n    On the other hand, <strong>Guards</strong> have an access to the <code>ExecutionContext</code> instance, and thus we\\n    know exactly what's going to be evaluated.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Guards are executed <strong>after</strong> each middleware, but <strong>before</strong> any pipe.\\n  </blockquote>\\n  <h4>Authorization guard</h4>\\n  <p>\\n    One of the best guards use-cases is the <strong>authorization</strong> logic because specific routes should be available\\n    only when the caller has sufficient permissions. The <code>AuthGuard</code> that we have a plan to create is going to\\n    sequentially extract and validate the token sent in request headers.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'auth.guard' | extension: authGuardT.isJsActive }}\\n    <app-tabs #authGuardT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"authGuardT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authGuard }}</code></pre>\\n  <pre [class.hide]=\\\"!authGuardT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authGuardJs }}</code></pre>\\n  <p>\\n    Regardless of the logic that sits behind <code>validateRequest()</code> function, the main point is to show how simple\\n    is to take advantage of guards. Every guard provides a <code>canActivate()</code> function. The guard might return its\\n    boolean answer either synchronously or asynchronously via a (<code>Promise</code> or <code>Observable</code>). The returned\\n    value controls the Nest behavior:\\n  </p>\\n  <ul>\\n    <li>if it returns <code>true</code>, the user call will be processed.</li>\\n    <li>if it returns <code>false</code>, Nest will ignore a currently processed request.</li>\\n  </ul>\\n  <p>\\n    The <code>canActivate()</code> function takes single argument, the <code>ExecutionContext</code> instance. The <code>ExecutionContext</code>    inherits\\n    from <code>ArgumentsHost</code> (first mention <a routerLink=\\\"/exception-filters\\\">here</a>). The\\n    <code>ArgumentsHost</code> is a wrapper around arguments that have been passed to the\\n    <strong>original</strong> handler, and it contains different arguments array under the hood based on the type of the\\n    application.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ argumentsHost }}</code></pre>\\n  <p>\\n    The\\n    <code>ArgumentsHost</code> supplies us with a set of useful methods that helps to pick correct arguments from the underlying\\n    array. In other words,\\n    <code>ArgumentsHost</code> is nothing else than just an\\n    <strong>array of arguments</strong>. For example, when the guard is used within HTTP application context,\\n    <code>ArgumentsHost</code> will contain\\n    <code>[request, response]</code> array inside. However, when current context is a web sockets application, this array\\n    will be equal to\\n    <code>[client, data]</code>. This design decision enables you to access any argument that would be eventually passed\\n    to the corresponding handler.\\n  </p>\\n  <p>\\n    The <code>ExecutionContext</code> offers a little bit more. It extends <code>ArgumentsHost</code>, but also, provides\\n    more details about current execution process.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ executionContext }}</code></pre>\\n  <p>\\n    The <code>getHandler()</code> returns a reference to the currently processed handler, while <code>getClass()</code> returns\\n    a type of the <code>Controller</code> class which this particular handler belongs to. Using other words, if the user\\n    points to <code>create()</code> method that is defined and registered within <code>CatsController</code>, the <code>getHandler()</code>    will\\n    return a reference to the <code>create()</code> method and <code>getClass()</code> in this case, will simply return a\\n    <code>CatsController</code> <strong>type</strong> (not instance).\\n  </p>\\n  <h4>Role-based authentication</h4>\\n  <p>\\n    A little bit more detailed example is a <code>RolesGuard</code>. This guard permits access only to users with a specific\\n    role. We are gonna start with a basic guard template:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'roles.guard' | extension: rolesGuardT.isJsActive }}\\n    <app-tabs #rolesGuardT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rolesGuardT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rolesGuard }}</code></pre>\\n  <pre [class.hide]=\\\"!rolesGuardT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rolesGuardJs }}</code></pre>\\n  <h4>Binding guards</h4>\\n  <p>\\n    The guards can be <strong>controller-scoped</strong>, method-scoped, and global-scoped as well. In order to set up the\\n    guard, we have to use a <code>@UseGuards()</code> decorator. This decorator may take an endless number of arguments,\\n    meaning, you can pass several guards and separate them by a comma.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: useGuardsT.isJsActive }}\\n    <app-tabs #useGuardsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ useGuards }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@UseGuards()</code> decorator is imported from the <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    We have passed the <code>RolesGuard</code> type instead of an instance, leaving framework the instantiation responsibility\\n    and enabling dependency injection. Another available way is to pass the immediately created instance:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: useGuardsInstanceT.isJsActive }}\\n    <app-tabs #useGuardsInstanceT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ useGuardsWithInstance }}</code></pre>\\n  <p>\\n    The construction above attaches the guard to every handler declared by this controller. If we decide to restrict only one\\n    of them, we just need to set up the guard at <strong>method level</strong>. In order to bind the global guard, we\\n    use the <code>useGlobalGuards()</code> method of the Nest application instance:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalGuard }}</code></pre>\\n  <blockquote>\\n    <strong>Notice</strong> The\\n    <code>useGlobalGuards()</code> method doesn't set up guards for gateways and microservices.\\n  </blockquote>\\n  <p>\\n    The global guards are used across the whole application, for every controller and every route handler. In terms of dependency\\n    injection, global guards registered from the outside of any module (as in the previous example above) cannot inject dependencies\\n    since they don't belong to any module. In order to solve this issue, you can set up a guard\\n    <strong>directly from any module</strong> using following construction:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: globalScopedGuardModuleT.isJsActive }}\\n    <app-tabs #globalScopedGuardModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalScopedGuardModule }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The alternative option is to use an <a routerLink=\\\"/execution-context\\\">execution context</a> feature.\\n    Also, <code>useClass</code> is not the only way of dealing with custom providers registration. Learn more <a routerLink=\\\"/fundamentals/dependency-injection\\\">here</a>.\\n  </blockquote>\\n  <h4>Reflector</h4>\\n  <p>\\n    The guard is working now, but we're still not taking advantage of the most important guard features, being the <strong>execution\\n      context\\n    </strong>.\\n  </p>\\n  <p>\\n    The <code>RolesGuard</code> isn't reusable so far. How would we know which roles need to be processed by the handler?\\n    The <code>CatsController</code> could have a lot of them. Some might be available only for admin, some for everyone,\\n    although, they don't have any permissions.\\n  </p>\\n  <p>\\n    That's why along with the guards, Nest provides the ability to attach <strong>custom metadata</strong> through <code>@ReflectMetadata()</code>    decorator.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: reflectMetadataT.isJsActive }}\\n    <app-tabs #reflectMetadataT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"reflectMetadataT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ reflectMetadata }}</code></pre>\\n  <pre [class.hide]=\\\"!reflectMetadataT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ reflectMetadataJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@ReflectMetadata()</code> decorator is imported from the <code>@nestjs/common</code>    package.\\n  </blockquote>\\n  <p>\\n    With the construction above, we attached the <code>roles</code> metadata (<code>roles</code> is a key, while <code>['admin']</code>    is\\n    a particular value) to the <code>create()</code> method. It's not a good practice to use <code>@ReflectMetadata()</code>    directly.\\n    Instead, you should always create your own decorators:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'roles.decorator' | extension: rolesDecoratorT.isJsActive }}\\n    <app-tabs #rolesDecoratorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rolesDecoratorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rolesDecorator }}</code></pre>\\n  <pre [class.hide]=\\\"!rolesDecoratorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rolesDecoratorJs }}</code></pre>\\n  <p>\\n    This approach is much cleaner and readable. Since we've got a <code>@Roles()</code> decorator now, we can use it with\\n    the <code>create()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: catsRolesDecoratorT.isJsActive }}\\n    <app-tabs #catsRolesDecoratorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsRolesDecoratorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsRolesDecorator }}</code></pre>\\n  <pre [class.hide]=\\\"!catsRolesDecoratorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsRolesDecoratorJs }}</code></pre>\\n  <p>\\n    Alright. Let's take a step back to the <code>RolesGuard</code> again. It simply returns <code>true</code> immediately,\\n    allowing request to proceed so far. In order to reflect the metadata, we'll use the <code>Reflector</code> helper class\\n    which is provided out of the box by the framework and exposed from the <code>@nestjs/core</code> package.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'roles.guard' | extension: rolesGuardExtT.isJsActive }}\\n    <app-tabs #rolesGuardExtT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rolesGuardExtT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rolesGuardExt }}</code></pre>\\n  <pre [class.hide]=\\\"!rolesGuardExtT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rolesGuardExtJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> In the node.js world, it's a common practice to attach the authorized user to the <code>request</code>    object.\\n    That's why we assumed that <code>request.user</code> contains the user instance.\\n  </blockquote>\\n  <p>\\n    The <code>Reflector</code> allows us to easily reflect the metadata by the specified <strong>key</strong>. In the example\\n    above, we used <code>getHandler()</code> in order to reflect the metadata because it's a <strong>reference</strong> to\\n    the route handler function. We could make this guard even <strong>more generic</strong> if we add the controller reflection\\n    part as well. To extract the <strong>controller metadata</strong>, we should use <code>context.getClass()</code> instead\\n    of <code>getHandler()</code> function:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #controllerMetadataT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"controllerMetadataT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ controllerMetadata }}</code></pre>\\n  <pre [class.hide]=\\\"!controllerMetadataT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ controllerMetadataJs }}</code></pre>\\n  <p>\\n    When a user tries to call the <code>/cats</code> POST endpoint without enough privileges, Nest will automatically return\\n    response below:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ forbidden }}</code></pre>\\n  <p>\\n    In fact, the guard which returns <code>false</code> throws <code>HttpException</code>. If you want to return a different\\n    error response to the end-user, you should throw an exception. Afterward, this exception can be caught by the <a routerLink=\\\"/exception-filters\\\">exception\\n      filter\\n    </a>.\\n  </p>\\n</div>\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-guards',\n  templateUrl: './guards.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GuardsComponent extends BasePageComponent {\n  get authGuard() {\n    return `\nimport { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    const request = context.switchToHttp().getRequest();\n    return validateRequest(request);\n  }\n}`;\n  }\n\n  get authGuardJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthGuard {\n  async canActivate(context) {\n    const request = context.switchToHttp().getRequest();\n    return await validateRequest(request);\n  }\n}`;\n  }\n\n  get rolesGuard() {\n    return `\nimport { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    return true;\n  }\n}`;\n  }\n\n  get rolesGuardJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class RolesGuard {\n  canActivate(context) {\n    return true;\n  }\n}`;\n  }\n\n  get argumentsHost() {\n    return `\nexport interface ArgumentsHost {\n  getArgs<T extends Array<any> = any[]>(): T;\n  getArgByIndex<T = any>(index: number): T;\n  switchToRpc(): RpcArgumentsHost;\n  switchToHttp(): HttpArgumentsHost;\n  switchToWs(): WsArgumentsHost;\n}`;\n  }\n\n  get executionContext() {\n    return `\nexport interface ExecutionContext extends ArgumentsHost {\n  getClass<T = any>(): Type<T>;\n  getHandler(): Function;\n}`;\n  }\n\n  get useGuards() {\n    return `\n@Controller('cats')\n@UseGuards(RolesGuard)\nexport class CatsController {}\n`;\n  }\n\n  get useGuardsWithInstance() {\n    return `\n@Controller('cats')\n@UseGuards(new RolesGuard())\nexport class CatsController {}\n`;\n  }\n\n  get globalScopedGuardModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: RolesGuard,\n    },\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get reflectMetadata() {\n    return `\n@Post()\n@ReflectMetadata('roles', ['admin'])\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get reflectMetadataJs() {\n    return `\n@Post()\n@ReflectMetadata('roles', ['admin'])\n@Bind(Body())\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get rolesDecorator() {\n    return `\nimport { ReflectMetadata } from '@nestjs/common';\n\nexport const Roles = (...roles: string[]) => ReflectMetadata('roles', roles);`;\n  }\n\n  get rolesDecoratorJs() {\n    return `\nimport { ReflectMetadata } from '@nestjs/common';\n\nexport const Roles = (...roles) => ReflectMetadata('roles', roles);`;\n  }\n\n  get catsRolesDecorator() {\n    return `\n@Post()\n@Roles('admin')\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get catsRolesDecoratorJs() {\n    return `\n@Post()\n@Roles('admin')\n@Bind(Body())\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get rolesGuardExt() {\n    return `\nimport { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get<string[]>('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () => user.roles.some((role) => roles.includes(role));\n    return user && user.roles && hasRole();\n  }\n}`;\n  }\n\n  get rolesGuardExtJs() {\n    return `\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\n@Injectable()\n@Dependencies(Reflector)\nexport class RolesGuard {\n  constructor(reflector) {\n    this.reflector = reflector;\n  }\n\n  canActivate(context) {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () => user.roles.some((role) => roles.includes(role));\n    return user && user.roles && hasRole();\n  }\n}`;\n  }\n\n  get controllerMetadata() {\n    return `\nconst roles = this.reflector.get<string[]>('roles', context.getClass());`;\n  }\n\n  get controllerMetadataJs() {\n    return `\nconst roles = this.reflector.get('roles', context.getClass());`;\n  }\n\n  get forbidden() {\n    return `\n{\n  \"statusCode\": 403,\n  \"message\": \"Forbidden resource\"\n}`;\n  }\n\n  get globalGuard() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.useGlobalGuards(new RolesGuard());`;\n  }\n\n  get getAuthGuard() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst authGuard = app\n  .select(AuthModule)\n  .get(AuthGuard);\n\napp.useGlobalGuards(authGuard);\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Interceptors</h3>\\n  <p>\\n    An interceptor is a class annotated with the <code>@Injectable()</code> decorator. The interceptor should implement the\\n    <code>NestInterceptor</code> interface.\\n  </p>\\n  <figure><img src=\\\"/assets/Interceptors_1.png\\\" /></figure>\\n  <p>\\n    Interceptors have a set of useful capabilities which are inspired by the <strong>Aspect-Oriented Programming</strong>\\n    (AOP) technique. They make possible to:\\n  </p>\\n  <ul>\\n    <li>bind <strong>extra logic</strong> before / after method execution</li>\\n    <li><strong>transform</strong> the result returned from a function</li>\\n    <li><strong>transform</strong> the exception thrown from a function</li>\\n    <li>extend the basic function behaviour</li>\\n    <li>completely <strong>override</strong> a function depending on the chosen conditions (e.g. caching purposes)</li>\\n  </ul>\\n  <h4>Basics</h4>\\n  <p>\\n    Each interceptor has the <code>intercept()</code> method that takes 2 arguments. The first one is the <code>ExecutionContext</code>    instance\\n    (exactly the same object as for <a routerLink=\\\"/guards\\\">guards</a>). The <code>ExecutionContext</code> inherits from\\n    <code>ArgumentsHost</code> (first mention <a routerLink=\\\"/exception-filters\\\">here</a>). The\\n    <code>ArgumentsHost</code> is a wrapper around arguments that have been passed to the\\n    <strong>original</strong> handler, and it contains different arguments array under the hood based on the type of the\\n    application.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ argumentsHost }}</code></pre>\\n  <p>\\n    The\\n    <code>ArgumentsHost</code> supplies us with a set of useful methods that helps to pick correct arguments from the underlying\\n    array. In other words,\\n    <code>ArgumentsHost</code> is nothing else than just an\\n    <strong>array of arguments</strong>. For example, when the guard is used within HTTP application context,\\n    <code>ArgumentsHost</code> will contain\\n    <code>[request, response]</code> array inside. However, when current context is a web sockets application, this array\\n    will be equal to\\n    <code>[client, data]</code>. This design decision enables you to access any argument that would be eventually passed\\n    to the corresponding handler.\\n  </p>\\n  <p>\\n    The <code>ExecutionContext</code> offers a little bit more. It extends <code>ArgumentsHost</code>, but also, provides\\n    more details about current execution process.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ executionContext }}</code></pre>\\n  <p>\\n    The <code>getHandler()</code> returns a reference to the currently processed handler, while <code>getClass()</code> returns\\n    a type of the <code>Controller</code> class which this particular handler belongs to. Using other words, if the user\\n    points to <code>create()</code> method that is defined and registered within <code>CatsController</code>, the <code>getHandler()</code>    will\\n    return a reference to the <code>create()</code> method and <code>getClass()</code> in this case, will simply return a\\n    <code>CatsController</code> <strong>type</strong> (not instance).\\n  </p>\\n  <p>\\n    The second argument is a <code>call$</code>, an <code>Observable</code> stream. If you don't return this stream, the\\n    main handler won't be evaluated at all. What does it mean? Basically, the <code>call$</code> is a stream that <strong>defers\\n      the final handler execution</strong>. Let's say, someone made a POST <code>/cats</code> request. This request points\\n    to <code>create()</code> handler defined inside the <code>CatsController</code>. If an interceptor which does not return\\n    a <code>call$</code> stream is called along the way, the <code>create()</code> method won't be evaluated. Only when <code>call$</code>    stream\\n    is returned, the final method will be triggered. Why? Because Nest <strong>subscribes</strong> to the returned stream\\n    and uses values that this stream produces to create either a single response or multiple responses for the end-user.\\n    Moreover, as mentioned a while ago, <code>call$</code> is an <code>Observable</code>, meaning, it supplies us with a\\n    set of very powerful operators that helps with, for example, response manipulation.\\n  </p>\\n  <h4>Aspect interception</h4>\\n  <p>\\n    The first use case is to use the interceptor to add extra logic either before or after the function execution. It's useful\\n    when we're gonna <strong>log interaction</strong> with the application, e.g. storing user calls, asynchronously dispatching\\n    events or calculating the timestamp. As an example, let's create a simple <code>LoggingInterceptor</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'logging.interceptor' | extension: loggingInterceptorT.isJsActive }}\\n    <app-tabs #loggingInterceptorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"loggingInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ loggingInterceptor }}</code></pre>\\n  <pre [class.hide]=\\\"!loggingInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ loggingInterceptorJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    The <code>NestInterceptor&#60;T, R&#62;</code> is a generic interface in which <code>T</code> indicates a type of the\\n    processed <code>Observable&#60;T&#62;</code> (behind the stream), while <code>R</code> the return type of the value wrapped\\n    into returned <code>Observable&#60;R&#62;</code>.\\n  </blockquote>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> Interceptors act the same as controllers, providers, guards, and so on, meaning, they can <strong>inject\\n      dependencies\\n    </strong> through the <code>constructor</code>.\\n  </blockquote>\\n  <p>\\n    Since <code>call$</code> is a <a href=\\\"https://github.com/reactivex/rxjs\\\" target=\\\"blank\\\">RxJS</a> <code>Observable</code>,\\n    we have a lot of various operators which we can use to manipulate the stream. In the example above, We used the <code>tap()</code>    operator\\n    that invokes the function upon graceful or exceptional termination of the observable sequence.\\n  </p>\\n  <p>\\n    In order to set up the interceptor, we use the <code>@UseInterceptors()</code> decorator imported from the <code>@nestjs/common</code>    package.\\n    Same as <a routerLink=\\\"/guards\\\">guards</a>, interceptors can be controller-scoped, method-scoped, and global-scoped as\\n    well.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: useLoggingInterceptorT.isJsActive }}\\n    <app-tabs #useLoggingInterceptorT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ useLoggingInterceptor }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@UseInterceptors()</code> decorator is imported from the <code>@nestjs/common</code>    package.\\n  </blockquote>\\n  <p>\\n    Thanks to that, each route handler defined in <code>CatsController</code> will use <code>LoggingInterceptor</code>. When\\n    someone calls the GET <code>/cats</code> endpoint, you'll see a following output in your console window:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ consoleOutput }}</code></pre>\\n  <p>\\n    Note that we passed the <code>LoggingInterceptor</code> type instead of an instance, leaving framework the instantiation\\n    responsibility and enabling dependency injection. Another available way is to pass the immediately created instance:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.controller' | extension: useLoggingInterceptorWithInstanceT.isJsActive }}\\n    <app-tabs #useLoggingInterceptorWithInstanceT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ useLoggingInterceptorWithInstance }}</code></pre>\\n  <p>\\n    As mentioned before, the construction above attaches the interceptor to every handler declared by this controller. If we\\n    decide to restrict only one of them, we just need to set up the interceptor at <strong>method level</strong>. In\\n    order to bind the global interceptor, we use the <code>useGlobalInterceptors()</code> method of the Nest application\\n    instance:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalInterceptors }}</code></pre>\\n  <p>\\n    The global interceptors are used across the whole application, for every controller and every route handler. In terms of\\n    dependency injection, global interceptors registered from the outside of any module (as in the previous example above)\\n    cannot inject dependencies since they don't belong to any module. In order to solve this issue, you can set up a guard\\n    <strong>directly from any module</strong> using following construction:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: globalScopedInterceptorModuleT.isJsActive }}\\n    <app-tabs #globalScopedInterceptorModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalScopedInterceptorModule }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The alternative option is to use an <a routerLink=\\\"/execution-context\\\">execution context</a> feature.\\n    Also, <code>useClass</code> is not the only way of dealing with custom providers registration. Learn more <a routerLink=\\\"/fundamentals/dependency-injection\\\">here</a>.\\n  </blockquote>\\n  <h4>Response mapping</h4>\\n  <p>\\n    We already know that <code>call$</code> is an <code>Observable</code>. This object contains the value <strong>returned</strong>\\n    from the route handler, and thus we can easily mutate it using the <code>map()</code> operator.\\n  </p>\\n  <blockquote>\\n    <strong>Warning</strong> The response mapping feature doesn't work with the library-specific response strategy (using\\n    the <code>@Res()</code> object directly is forbidden).\\n  </blockquote>\\n  <p>\\n    Let's create the <code>TransformInterceptor</code> that will take each response and modify it by assigning to the <code>data</code>    property\\n    of the newly created object.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'transform.interceptor' | extension: transformInterceptorT.isJsActive }}\\n    <app-tabs #transformInterceptorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"transformInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ transformInterceptor }}</code></pre>\\n  <pre [class.hide]=\\\"!transformInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ transformInterceptorJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Nest interceptors work like a charm with asynchronous <code>intercept()</code> methods, meaning,\\n    you can effortlessly switch your method to <code>async</code> if necessary.\\n  </blockquote>\\n  <p>\\n    Afterward, when someone calls the GET <code>/cats</code> endpoint, the request would look like below (we assumed that\\n    route handler returns an empty array <code>[]</code>):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ dataResponse }}</code></pre>\\n  <p>\\n    The interceptors have a huge potential when it comes to creating reusable solutions used in whole applications. For example,\\n    let's imagine that we need to transform each occurred <code>null</code> value to empty string <code>''</code>. We\\n    can do it using one line of code and bind interceptor as a global one. Thanks to that, it'll be automatically reused\\n    by each registered handler.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #nullTransformInterceptorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"nullTransformInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ nullTransformInterceptor }}</code></pre>\\n  <pre [class.hide]=\\\"!nullTransformInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ nullTransformInterceptorJs }}</code></pre>\\n  <h4>Exception mapping</h4>\\n  <p>\\n    Another interesting use-case is to take advantage of the <code>catchError()</code> operator to override thrown exceptions:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'errors.interceptor' | extension: exceptionMappingT.isJsActive }}\\n    <app-tabs #exceptionMappingT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"exceptionMappingT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exceptionMapping }}</code></pre>\\n  <pre [class.hide]=\\\"!exceptionMappingT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ exceptionMappingJs }}</code></pre>\\n  <h4>Stream overriding</h4>\\n  <p>\\n    There're several reasons why sometimes we might want to completely prevent calling the handler and return a different value\\n    instead (e.g. from cache due to performance issues). An excellent example is a <strong>cache interceptor</strong>\\n    that would store the cached responses with some TTL. Unfortunately, this feature needs a bit more code and due to simplification,\\n    we'll provide only a basic example that should briefly explain the main concept.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cache.interceptor' | extension: cacheInterceptorT.isJsActive }}\\n    <app-tabs #cacheInterceptorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"cacheInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ cacheInterceptor }}</code></pre>\\n  <pre [class.hide]=\\\"!cacheInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ cacheInterceptorJs }}</code></pre>\\n  <p>\\n    Here's a <code>CacheInterceptor</code> with a hardcoded <code>isCached</code> variable and the hardcoded response <code>[]</code>    as\\n    well. We returned a new stream here, created through the <code>of</code> operator, therefore the route handler <strong>won't\\n      be called</strong> at all. When someone calls endpoint that makes use of <code>CacheInterceptor</code>, the response\\n    (a hardcoded, empty array) will be returned immedietely. In order to create a generic solution, you can take advantage\\n    of <code>Reflector</code> and create a custom decorator. The <code>Reflector</code> is well described in the <a routerLink=\\\"/guards\\\">guards</a>\\n    chapter.\\n  </p>\\n  <p>\\n    The possibility of returning the stream gives us many possibilities. Let's think about another common use-case. Imagine you\\n    would like to handle <strong>timeouts</strong>. When your endpoint doesn't return anything after a period of time,\\n    we want to respond with an error response.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'timeout.interceptor' | extension: timeoutInterceptorT.isJsActive }}\\n    <app-tabs #timeoutInterceptorT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"timeoutInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ timeoutInterceptor }}</code></pre>\\n  <pre [class.hide]=\\\"!timeoutInterceptorT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ timeoutInterceptorJs }}</code></pre>\\n  <p>\\n    After 5 seconds the request processing will be canceled.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-interceptors',\n  templateUrl: './interceptors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InterceptorsComponent extends BasePageComponent {\n  get loggingInterceptor() {\n    return `\nimport { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<any>,\n  ): Observable<any> {\n    console.log('Before...');\n\n    const now = Date.now();\n    return call$.pipe(\n      tap(() => console.log(\\`After... \\${Date.now() - now\\}ms\\`)),\n    );\n  }\n}`;\n  }\n\n  get loggingInterceptorJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LoggingInterceptor {\n  intercept(context, call$) {\n    console.log('Before...');\n\n    const now = Date.now();\n    return call$.pipe(\n      tap(() => console.log(\\`After... \\${Date.now() - now\\}ms\\`)),\n    );\n  }\n}`;\n  }\n\n  get useLoggingInterceptor() {\n    return `\n@UseInterceptors(LoggingInterceptor)\nexport class CatsController {}`;\n  }\n\n  get useLoggingInterceptorWithInstance() {\n    return `\n@UseInterceptors(new LoggingInterceptor())\nexport class CatsController {}`;\n  }\n\n  get consoleOutput() {\n    return `\nBefore...\nAfter... 1ms`;\n  }\n\n  get globalScopedInterceptorModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\n@Module({\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggingInterceptor,\n    },\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get transformInterceptor() {\n    return `\nimport { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Response<T> {\n  data: T;\n}\n\n@Injectable()\nexport class TransformInterceptor<T>\n  implements NestInterceptor<T, Response<T>> {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<T>,\n  ): Observable<Response<T>> {\n    return call$.pipe(map(data => ({ data })));\n  }\n}`;\n  }\n\n  get transformInterceptorJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TransformInterceptor {\n  intercept(context, call$) {\n    return call$.pipe(map(data => ({ data })));\n  }\n}`;\n  }\n\n  get nullTransformInterceptor() {\n    return `\nimport { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ExcludeNullInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<any>,\n  ): Observable<any> {\n    return call$.pipe(map(value => value === null ? '' : value ));\n  }\n}`;\n  }\n\n  get nullTransformInterceptorJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class ExcludeNullInterceptor {\n  intercept(context, call$) {\n    return call$.pipe(map(value => value === null ? '' : value ));\n  }\n}`;\n  }\n\n  get dataResponse() {\n    return `\n{\n    \"data\": []\n}`;\n  }\n\n  get cacheInterceptor() {\n    return `\nimport { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { of } from 'rxjs/observable/of';\n\n@Injectable()\nexport class CacheInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<any>,\n  ): Observable<any> {\n    const isCached = true;\n    if (isCached) {\n      return of([]);\n    }\n    return call$;\n  }\n}`;\n  }\n\n  get cacheInterceptorJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { of } from 'rxjs/observable/of';\n\n@Injectable()\nexport class CacheInterceptor {\n  intercept(context, call$) {\n    const isCached = true;\n    if (isCached) {\n      return of([]);\n    }\n    return call$;\n  }\n}`;\n  }\n\n  get exceptionMapping() {\n    return `\nimport {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  HttpStatus,\n} from '@nestjs/common';\nimport { HttpException } from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<any>,\n  ): Observable<any> {\n    return call$.pipe(\n      catchError(err =>\n        throwError(new HttpException('Message', HttpStatus.BAD_GATEWAY)),\n      ),\n    );\n  }\n}`;\n  }\n\n  get exceptionMappingJs() {\n    return `\nimport { Injectable, HttpStatus } from '@nestjs/common';\nimport { HttpException } from '@nestjs/common';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorsInterceptor {\n  intercept(context, call$) {\n    return call$.pipe(\n      catchError(err =>\n        throwError(new HttpException('Message', HttpStatus.BAD_GATEWAY)),\n      ),\n    );\n  }\n}`;\n  }\n\n  get globalInterceptors() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.useGlobalInterceptors(new LoggingInterceptor());`;\n  }\n\n  get getEventsInterceptor() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst eventsInterceptor = app\n  .select(EventsModule)\n  .get(EventsInterceptor);\n\napp.useGlobalInterceptors(eventsInterceptor);\n`;\n  }\n\n  get argumentsHost() {\n    return `\nexport interface ArgumentsHost {\n  getArgs<T extends Array<any> = any[]>(): T;\n  getArgByIndex<T = any>(index: number): T;\n  switchToRpc(): RpcArgumentsHost;\n  switchToHttp(): HttpArgumentsHost;\n  switchToWs(): WsArgumentsHost;\n}`;\n  }\n\n  get executionContext() {\n    return `\nexport interface ExecutionContext extends ArgumentsHost {\n  getClass<T = any>(): Type<T>;\n  getHandler(): Function;\n}`;\n  }\n\n  get timeoutInterceptor() {\n    return `\nimport { Injectable, NestInterceptor, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<any>,\n  ): Observable<any> {\n    return call$.pipe(timeout(5000))\n  }\n}`;\n  }\n\n  get timeoutInterceptorJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable()\nexport class TimeoutInterceptor {\n  intercept(context, call$) {\n    return call$.pipe(timeout(5000))\n  }\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Introduction</h3>\\n  <p>Nest is a framework for building efficient, scalable <a href=\\\"http://nodejs.org\\\" target=\\\"_blank\\\">Node.js</a>\\n    server-side\\n    applications. It uses progressive JavaScript, is built with <a href=\\\"http://www.typescriptlang.org\\\" target=\\\"_blank\\\">TypeScript</a>\\n    (preserves compatibility with pure JavaScript) and combines elements of OOP (Object Oriented Programming), FP\\n    (Functional\\n    Programming), and FRP (Functional Reactive Programming).</p>\\n  <p>Under the hood, Nest makes use of <a href=\\\"https://expressjs.com/\\\" target=\\\"_blank\\\">Express</a>, but also provides\\n    compatibility\\n    with a wide range of other libraries (e.g. <a href=\\\"https://github.com/fastify/fastify\\\" target=\\\"_blank\\\">Fastify</a>).\\n    This allows for easy use of the myriad third-party plugins which are available.</p>\\n\\n  <h3>Philosophy</h3>\\n  <p>In recent years, thanks to Node.js, JavaScript has become the “lingua franca” of the web for both front and\\n    backend\\n    applications. This has given rise to awesome projects like <a href=\\\"https://angular.io/\\\" target=\\\"_blank\\\">Angular</a>,\\n    <a href=\\\"https://github.com/facebook/react\\\" target=\\\"_blank\\\">React</a> and <a href=\\\"https://github.com/vuejs/vue\\\"\\n      target=\\\"_blank\\\">Vue</a>\\n    which improve developer productivity and enable the construction of fast, testable, and extensible frontend\\n    applications.\\n    However, while plenty of superb libraries, helpers, and tools exist for Node (and server-side JavaScript), none of\\n    them\\n    effectively solve the main problem - <strong>architecture</strong>.</p>\\n  <p>Nest provides an out-of-the-box application architecture which allows for effortless creation of highly testable,\\n    scalable,\\n    loosely coupled, and easily maintainable applications.</p>\\n\\n  <h3>Installation</h3>\\n  <p>To get started, scaffold the base project with the <a routerLink=\\\"/cli/overview\\\">Nest CLI</a>:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i -g @nestjs/cli\\n$ nest new project-name</code></pre>\\n\\n  <p>Install the starter project with <strong>Git</strong>:</p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #starter></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"starter.isJsActive\\\"><code class=\\\"language-bash\\\">\\n$ git clone https://github.com/nestjs/typescript-starter.git project\\n$ cd project\\n$ npm install\\n$ npm run start</code></pre>\\n  <pre [class.hide]=\\\"!starter.isJsActive\\\"><code class=\\\"language-bash\\\">\\n$ git clone https://github.com/nestjs/javascript-starter.git project\\n$ cd project\\n$ npm install\\n$ npm run start</code></pre>\\n\\n  <p>Or start a new project from scratch with <strong>npm</strong> (or <strong>yarn</strong>):</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save @nestjs/core @nestjs/common rxjs reflect-metadata</code></pre>\\n  <h3>Stay in touch</h3>\\n  <ul>\\n    <li>Author - <a href=\\\"https://kamilmysliwiec.com\\\" title=\\\"Kamil Mysliwiec Blog | Full-Stack Software Engineer\\\"\\n        target=\\\"blank\\\">Kamil\\n        Myśliwiec\\n      </a></li>\\n    <li>Website - <a href=\\\"https://nestjs.com\\\" title=\\\"NestJS - A node.js framework built on top of TypeScript\\\" target=\\\"blank\\\">https://nestjs.com</a></li>\\n    <li>Twitter - <a href=\\\"https://twitter.com/nestframework\\\" target=\\\"blank\\\">@nestframework</a></li>\\n  </ul>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-introduction',\n  templateUrl: './introduction.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IntroductionComponent extends BasePageComponent {}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Basics</h3>\\n  <p>\\n    The Nest microservice is a type of application that uses a different <strong>transport</strong> layer than HTTP.\\n  </p>\\n  <figure><img src=\\\"/assets/Microservices_1.png\\\" /></figure>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly, we need to install the required package:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n$ npm i --save @nestjs/microservices</code></pre>\\n  <h4>Overview</h4>\\n  <p>\\n    In general, Nest supports a bunch of built-in transporters. They are based on <strong>request-response</strong> paradigm\\n    and a whole communication logic is hidden behind an abstraction layer. Thanks to that you can easily switch between transporters\\n    without changing any line of your code. We don't support streaming platforms with log based persistance, such as <a href=\\\"https://docs.confluent.io/3.0.0/streams/\\\"\\n      target=\\\"blank\\\">Kafka</a> or <a href=\\\"https://github.com/nats-io/node-nats-streaming\\\" target=\\\"blank\\\">NATS streaming</a>\\n    because they have been created to solve a different range of issues. However, you can still use them with Nest by making\\n    use of <a routerLink=\\\"/execution-context\\\">execution context</a> feature.\\n  </p>\\n  <p>\\n    In order to create a microservice, we use <code>createMicroservice()</code> method of the <code>NestFactory</code> class.\\n    By default, a microservice listens on messages via <strong>TCP protocol</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: bootstrapT.isJsActive }}\\n    <app-tabs #bootstrapT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ bootstrap }}</code></pre>\\n  <p>\\n    The second argument of the <code>createMicroservice()</code> method is an options object. This object may have two members:\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>transport</code></td>\\n      <td>Specifies the transporter</td>\\n    </tr>\\n    <tr>\\n      <td><code>options</code></td>\\n      <td>A transporter-specific options object that determines transporter behaviour</td>\\n    </tr>\\n  </table>\\n  <p>\\n    The <code>options</code> object is different depending on chosen transporter. A <strong>TCP</strong> transporter exposes\\n    few properties described below.\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>host</code></td>\\n      <td>Connection hostname</td>\\n    </tr>\\n    <tr>\\n      <td><code>port</code></td>\\n      <td>Connection port</td>\\n    </tr>\\n    <tr>\\n      <td><code>retryAttempts</code></td>\\n      <td>A total amount of connection attempts</td>\\n    </tr>\\n    <tr>\\n      <td><code>retryDelay</code></td>\\n      <td>A connection retrying delay (ms)</td>\\n    </tr>\\n  </table>\\n  <h4>Patterns</h4>\\n  <p>\\n    A microservice recognizes messages through <strong>patterns</strong>. The pattern is a plain value, for example, a literal\\n    object, string, or a symbol. In order to create a pattern handler, we use the <code>@MessagePattern()</code> decorator\\n    which is imported from the <code>@nestjs/microservices</code> package.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'math.controller' | extension: mathControllerT.isJsActive }}\\n    <app-tabs #mathControllerT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"mathControllerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ mathController }}</code></pre>\\n  <pre [class.hide]=\\\"!mathControllerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ mathControllerJs }}</code></pre>\\n  <p>\\n    The <code>sum()</code> handler is listening to messages that fulfil the <code>cmd: 'sum'</code> pattern. The pattern\\n    handler takes a single argument, the <code>data</code> passed from the client. In this case, the data is an array of\\n    numbers which has to be accumulated.\\n  </p>\\n  <h4>Asynchronous responses</h4>\\n  <p>\\n    Each pattern handler is able to respond either synchronously or <strong>asynchronously</strong>. Hence, <code>async</code>    methods\\n    are supported.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'math.controller' | extension: asyncT.isJsActive }}\\n    <app-tabs #asyncT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"asyncT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ asyncPromise }}</code></pre>\\n  <pre [class.hide]=\\\"!asyncT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ asyncPromiseJs }}</code></pre>\\n  <p>\\n    Additionally, we are able to return the <a href=\\\"https://github.com/reactivex/rxjs\\\" target=\\\"blank\\\">Rx</a>&nbsp;<code>Observable</code>,\\n    and thus the values will be emitted until the stream is completed.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'math.controller' | extension: streamingT.isJsActive }}\\n    <app-tabs #streamingT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"streamingT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ streaming }}</code></pre>\\n  <pre [class.hide]=\\\"!streamingT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ streamingJs }}</code></pre>\\n  <p>\\n    Above message handler will respond <strong>3 times</strong> (with each item from the array).\\n  </p>\\n  <h4>Client</h4>\\n  <p>\\n    In order to connect with the Nest microservice, we are using the <code>ClientProxy</code> class which instance is assigned\\n    to a property through <code>@Client()</code> decorator. This decorator takes a single argument. It is the same object\\n    as a Nest microservice options object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ clientDecorator }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Both <code>@Client()</code> decorator and <code>ClientProxy</code> class are imported from the\\n    <code>@nestjs/microservices</code> package.\\n  </blockquote>\\n  <p>\\n    Another solution would be to manually create the <code>ClientProxy</code> instance using the <code>ClientProxyFactory</code>    (exported\\n    from <code>@nestjs/microservices</code> package).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ clientProxy }}</code></pre>\\n  <p>\\n    The <code>ClientProxy</code> is <strong>lazy</strong>. It doesn't initiate a connection immediately. Instead, it will\\n    be established before the first microservice's call, and then reused across each subsequent call. However, if you want\\n    to delay an application's bootstrapping process and manually initialize a connection, you can use a <code>connect()</code>    method\\n    inside the <code>OnModuleInit</code> lifecycle hook.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ connect }}</code></pre>\\n  <p>\\n    If the connection cannot be created, the <code>connect()</code> method will reject with the corresponding error object.\\n  </p>\\n  <p>\\n    The <code>ClientProxy</code> exposes a <code>send()</code> method. This method is intended to call the microservice and\\n    returns the <code>Observable</code> with its response, meaning, we can subscribe to the emitted values easily.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #sendMethodT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"sendMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ sendMethod }}</code></pre>\\n  <pre [class.hide]=\\\"!sendMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ sendMethodJs }}</code></pre>\\n  <p>\\n    The <code>send()</code> method takes 2 arguments, <code>pattern</code> and <code>payload</code>. The <code>pattern</code>    has\\n    to be equal to this one defined in the <code>@MessagePattern()</code> decorator, while <code>payload</code> is a message\\n    that we want to transmit to another microservice.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-basics',\n  templateUrl: './basics.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BasicsComponent extends BasePageComponent {\n  get bootstrap() {\n    return `\nimport { NestFactory } from '@nestjs/core';\nimport { Transport } from '@nestjs/microservices';\nimport { ApplicationModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice(ApplicationModule, {\n    transport: Transport.TCP,\n  });\n  app.listen(() => console.log('Microservice is listening'));\n}\nbootstrap();\n`;\n  }\n\n  get mathController() {\n    return `\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\n\n@Controller()\nexport class MathController {\n  @MessagePattern({ cmd: 'sum' })\n  sum(data: number[]): number {\n    return (data || []).reduce((a, b) => a + b);\n  }\n}`;\n  }\n\n  get mathControllerJs() {\n    return `\nimport { Controller } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\n\n@Controller()\nexport class MathController {\n  @MessagePattern({ cmd: 'sum' })\n  sum(data) {\n    return (data || []).reduce((a, b) => a + b);\n  }\n}`;\n  }\n\n  get streaming() {\n    return `\n@MessagePattern({ cmd: 'sum' })\nsum(data: number[]): Observable<number> {\n  return from([1, 2, 3]);\n}`;\n  }\n\n  get streamingJs() {\n    return `\n@MessagePattern({ cmd: 'sum' })\nsum(data) {\n  return from([1, 2, 3]);\n}`;\n  }\n\n  get asyncPromise() {\n    return `\n@MessagePattern({ cmd: 'sum' })\nasync sum(data: number[]): Promise<number> {\n  return (data || []).reduce((a, b) => a + b);\n}`;\n  }\n\n  get asyncPromiseJs() {\n    return `\n@MessagePattern({ cmd: 'sum' })\nasync sum(data) {\n  return (data || []).reduce((a, b) => a + b);\n}`;\n  }\n\n  get clientDecorator() {\n    return `\n@Client({ transport: Transport.TCP })\nclient: ClientProxy;`;\n  }\n\n  get sendMethod() {\n    return `\n@Get()\ncall(): Observable<number> {\n  const pattern = { cmd: 'sum' };\n  const payload = [1, 2, 3];\n  return this.client.send<number>(pattern, payload);\n}`;\n  }\n\n  get clientProxy() {\n    return `\nconstructor() {\n  this.client = ClientProxyFactory.create({\n    transport: Transport.TCP\n  });\n}`;\n  }\n\n  get connect() {\n    return `\nasync onModuleInit() {\n  await this.client.connect();\n}`;\n  }\n\n  get sendMethodJs() {\n    return `\n@Get()\ncall() {\n  const pattern = { cmd: 'sum' };\n  const payload = [1, 2, 3];\n  return this.client.send(pattern, payload);\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Custom Transport</h3>\\n  <p>\\n    The Nest has a built-in transport via TCP and Redis, but other communication schemes can be implemented with <code>CustomTransportStrategy</code> interface.\\n    For demonstration purposes, we're going to port the <a href=\\\"https://www.rabbitmq.com/\\\" target=\\\"blank\\\">RabbitMQ</a> transport strategy using <a href=\\\"https://github.com/squaremo/amqp.node\\\" target=\\\"blank\\\">ampqlib</a> library.\\n  </p>\\n  <h4>Server</h4>\\n  <p>\\n    Let's start from the <code>RabbitMQServer</code> which will match incoming messages to the right message handlers.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'rabbitmq-server' | extension: rabbitMqServerT.isJsActive }}\\n    <app-tabs #rabbitMqServerT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rabbitMqServerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rabbitMqServer }}</code></pre>\\n  <pre [class.hide]=\\\"!rabbitMqServerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rabbitMqServerJs }}</code></pre>\\n  <p>\\n    The <code>CustomTransportStrategy</code> forces to implement two fundamental methods - <code>listen()</code> and <code>close()</code>.\\n    Moreover, the <code>RabbitMQServer</code> shall extends the abstract <code>Server</code> class. This class supplies the core <code>getHandlers()</code> and <code>send()</code> methods, and helper <code>transformToObservable()</code> method.\\n  </p>\\n  <p>\\n    The last step is to set up the <code>RabbitMQServer</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: setupServerT.isJsActive }}\\n    <app-tabs #setupServerT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ setupServer }}</code></pre>\\n  <h4>Client</h4>\\n  <p>\\n    The <a href=\\\"https://www.rabbitmq.com/\\\" target=\\\"blank\\\">RabbitMQ</a> server's listening to messages. \\n    Now it's time to create a client class, which shall extends the abstract <code>ClientProxy</code> class. \\n    To make it work, we only have to override <code>sendSingleMessage()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'rabbitmq-client' | extension: rabbitMqClientT.isJsActive }}\\n    <app-tabs #rabbitMqClientT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rabbitMqClientT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rabbitMqClient }}</code></pre>\\n  <pre [class.hide]=\\\"!rabbitMqClientT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rabbitMqClientJs }}</code></pre>\\n  <p>\\n    Earlier, the Nest was responsible for creating the instance of the client class. We've been using the <code>@Client()</code> decorator.\\n    Now, when we've created our own solution, we can just create the <code>RabbitMQClient</code> instance directly, using <code>new</code> operator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ rabbitMqClientNew }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> To make unit testing easy, you can provide a <a routerLink=\\\"/fundamentals/dependency-injection\\\">custom component</a> instead of creating the instance directly in the class body.\\n   </blockquote>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-custom-transport',\n  templateUrl: './custom-transport.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CustomTransportComponent extends BasePageComponent {\n  get rabbitMqServer() {\n    return `\nimport * as amqp from 'amqplib';\nimport { Server, CustomTransportStrategy } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport class RabbitMQServer extends Server implements CustomTransportStrategy {\n    private server: amqp.Connection = null;\n    private channel: amqp.Channel = null;\n\n    constructor(\n      private readonly host: string,\n      private readonly queue: string) {\n        super();\n      }\n\n  public async listen(callback: () => void) {\n    await this.init();\n    this.channel.consume(\\`\\${this.queue}_sub\\`, this.handleMessage.bind(this), {\n      noAck: true,\n    });\n  }\n\n  public close() {\n    this.channel && this.channel.close();\n    this.server && this.server.close();\n  }\n\n  private async handleMessage(message) {\n    const { content } = message;\n    const messageObj = JSON.parse(content.toString());\n\n    const handlers = this.getHandlers();\n    const pattern = JSON.stringify(messageObj.pattern);\n    if (!this.messageHandlers[pattern]) {\n        return;\n    }\n\n    const handler = this.messageHandlers[pattern];\n    const response$ = this.transformToObservable(await handler(messageObj.data)) as Observable<any>;\n    response$ && this.send(response$, (data) => this.sendMessage(data));\n  }\n\n  private sendMessage(message) {\n    const buffer = Buffer.from(JSON.stringify(message));\n    this.channel.sendToQueue(\\`\\${this.queue}_pub\\`, buffer);\n  }\n\n  private async init() {\n    this.server = await amqp.connect(this.host);\n    this.channel = await this.server.createChannel();\n    this.channel.assertQueue(\\`\\${this.queue}_sub\\`, { durable: false });\n    this.channel.assertQueue(\\`\\${this.queue}_pub\\`, { durable: false });\n  }\n}`;\n  }\n\n  get rabbitMqServerJs() {\n    return `\nimport * as amqp from 'amqplib';\nimport { Server } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nexport class RabbitMQServer extends Server {\n    constructor(host, queue) {\n      super();\n\n      this.host = host;\n      this.queue = queue;\n      this.server = null;\n      this.channel = null;\n    }\n\n  async listen(callback) {\n    await this.init();\n    this.channel.consume(\\`\\${this.queue}_sub\\`, this.handleMessage.bind(this), {\n      noAck: true,\n    });\n  }\n\n  close() {\n    this.channel && this.channel.close();\n    this.server && this.server.close();\n  }\n\n  async handleMessage(message) {\n    const { content } = message;\n    const messageObj = JSON.parse(content.toString());\n\n    const handlers = this.getHandlers();\n    const pattern = JSON.stringify(messageObj.pattern);\n    if (!this.messageHandlers[pattern]) {\n        return;\n    }\n\n    const handler = this.messageHandlers[pattern];\n    const response$ = this.transformToObservable(await handler(messageObj.data));\n    response$ && this.send(response$, (data) => this.sendMessage(data));\n  }\n\n  sendMessage(message) {\n    const buffer = Buffer.from(JSON.stringify(message));\n    this.channel.sendToQueue(\\`\\${this.queue}_pub\\`, buffer);\n  }\n\n  async init() {\n    this.server = await amqp.connect(this.host);\n    this.channel = await this.server.createChannel();\n    this.channel.assertQueue(\\`\\${this.queue}_sub\\`, { durable: false });\n    this.channel.assertQueue(\\`\\${this.queue}_pub\\`, { durable: false });\n  }\n}`;\n  }\n\n  get setupServer() {\n    return `\nconst app = await NestFactory.createMicroservice(ApplicationModule, {\n    strategy: new RabbitMQServer('amqp://localhost', 'channel'),\n});`;\n  }\n\n  get rabbitMqClient() {\n    return `\nimport * as amqp from 'amqplib';\nimport { ClientProxy } from '@nestjs/microservices';\n\nexport class RabbitMQClient extends ClientProxy {\n  constructor(\n    private readonly host: string,\n    private readonly queue: string) {\n      super();\n    }\n\n  protected async sendSingleMessage(messageObj, callback: (err, result, disposed?: boolean) => void) {\n    const server = await amqp.connect(this.host);\n    const channel = await server.createChannel();\n\n    const { sub, pub } = this.getQueues();\n    channel.assertQueue(sub, { durable: false });\n    channel.assertQueue(pub, { durable: false });\n\n    channel.consume(pub, (message) => this.handleMessage(message, server, callback), { noAck: true });\n    channel.sendToQueue(sub, Buffer.from(JSON.stringify(messageObj)));\n  }\n\n  private handleMessage(message, server, callback: (err, result, disposed?: boolean) => void) {\n    const { content } = message;\n    const { err, response, disposed } = JSON.parse(content.toString());\n    if (disposed) {\n        server.close();\n    }\n    callback(err, response, disposed);\n  }\n\n  private getQueues() {\n    return { pub: \\`\\${this.queue}_pub\\`, sub: \\`\\${this.queue}_sub\\` };\n  }\n}`;\n  }\n\n  get rabbitMqClientJs() {\n    return `\nimport * as amqp from 'amqplib';\nimport { ClientProxy } from '@nestjs/microservices';\n\nexport class RabbitMQClient extends ClientProxy {\n  constructor(host, queue) {\n      super();\n\n      this.host = host;\n      this.queue = queue;\n    }\n\n  async sendSingleMessage(messageObj, callback) {\n    const server = await amqp.connect(this.host);\n    const channel = await server.createChannel();\n\n    const { sub, pub } = this.getQueues();\n    channel.assertQueue(sub, { durable: false });\n    channel.assertQueue(pub, { durable: false });\n\n    channel.consume(pub, (message) => this.handleMessage(message, server, callback), { noAck: true });\n    channel.sendToQueue(sub, Buffer.from(JSON.stringify(messageObj)));\n  }\n\n  handleMessage(message, server, callback) {\n    const { content } = message;\n    const { err, response, disposed } = JSON.parse(content.toString());\n    if (disposed) {\n        server.close();\n    }\n    callback(err, response, disposed);\n  }\n\n  getQueues() {\n    return { pub: \\`\\${this.queue}_pub\\`, sub: \\`\\${this.queue}_sub\\` };\n  }\n}`;\n  }\n\n  get rabbitMqClientNew() {\n    return `\nthis.client = new RabbitMQClient('amqp://localhost', 'example');`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Exception filters</h3>\\n  <p>\\n    The only difference between <a routerLink=\\\"/exception-filters\\\">HTTP exception filter</a> layer and corresponding microservices\\n    layer is that instead of throwing <code>HttpException</code>, you should rather use <code>RpcException</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ rpcException }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>RpcException</code> class is imported from the <code>@nestjs/microservices</code> package.\\n  </blockquote>\\n  <p>\\n    Nest will handle thrown exception and as a result, returns the <code>error</code> object with the following structure:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ exceptionResponse }}</code></pre>\\n  <h4>Filters</h4>\\n  <p>\\n    The <strong>exception filters</strong> work in the same fashion as the primary ones, with a one, small difference. The\\n    <code>catch()</code> method has to return an <code>Observable</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'rpc-exception.filter' | extension: rpcExceptionFilterT.isJsActive }}\\n    <app-tabs #rpcExceptionFilterT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rpcExceptionFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rpcExceptionFilter }}</code></pre>\\n  <pre [class.hide]=\\\"!rpcExceptionFilterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rpcExceptionFilterJs }}</code></pre>\\n  <blockquote>\\n    <strong>Warning</strong> It is impossible to set up the microservices exception filters globally.\\n  </blockquote>\\n  <p>\\n    Here is an example that makes use of a manually instantiated <strong>method-scoped</strong> filter (class-scoped works\\n    either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n  <h4>Inheritance</h4>\\n  <p>\\n    Typically, you'll create fully customized exception filters crafted to fulfill your application requirements. There might\\n    be use-cases though when you would like to reuse an already implemented, <strong>core exception filter</strong>,\\n    and override the behavior based on certain factors.\\n  </p>\\n  <p>\\n    In order to delegate exception processing to the base filter, you need to extend <code>BaseExceptionFilter</code> and\\n    call inherited <code>catch()</code> method. Besides, <code>HttpServer</code> reference has to be injected and passed\\n    to the\\n    <code>super()</code> call.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #inheritanceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"inheritanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inheritance }}</code></pre>\\n  <pre [class.hide]=\\\"!inheritanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inheritanceJs }}</code></pre>\\n  <p>\\n    Obviously, you should enhance above implementation with your tailored <strong>business</strong> logic (e.g. add various\\n    conditions).\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-exception-filters',\n  templateUrl: './exception-filters.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MicroservicesExceptionFiltersComponent extends BasePageComponent {\n  get rpcException() {\n    return `\nthrow new RpcException('Invalid credentials.');`;\n  }\n\n  get exceptionResponse() {\n    return `\n{\n  status: 'error',\n  message: 'Invalid credentials.'\n}`;\n  }\n\n  get rpcExceptionFilter() {\n    return `\nimport { Catch, RpcExceptionFilter, ArgumentsHost } from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\n\n@Catch(RpcException)\nexport class ExceptionFilter implements RpcExceptionFilter<RpcException> {\n  catch(exception: RpcException, host: ArgumentsHost): Observable<any> {\n    return throwError(exception.getError());\n  }\n}`;\n  }\n\n  get rpcExceptionFilterJs() {\n    return `\nimport { Catch, } from '@nestjs/common';\nimport { throwError } from 'rxjs';\n\n@Catch(RpcException)\nexport class ExceptionFilter {\n  catch(exception, host) {\n    return throwError(exception.getError());\n  }\n}`;\n  }\n\n  get example() {\n    return `\n@UseFilters(new ExceptionFilter())\n@MessagePattern({ cmd: 'sum' })\nsum(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}`;\n  }\n\n  get inheritance() {\n    return `\nimport { Catch, ArgumentsHost } from '@nestjs/common';\nimport { BaseRpcExceptionFilter } from '@nestjs/microservices';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseRpcExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    return super.catch(exception, host);\n  }\n}`;\n  }\n\n  get inheritanceJs() {\n    return `\nimport { Catch } from '@nestjs/common';\nimport { BaseRpcExceptionFilter } from '@nestjs/microservices';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseRpcExceptionFilter {\n  catch(exception, host) {\n    return super.catch(exception, host);\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>gRPC</h3>\\n  <p>\\n    The <a href=\\\"https://github.com/grpc/grpc-node\\\" target=\\\"blank\\\">gRPC</a> is a high-performance, open-source universal\\n    RPC framework.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>Before we start, we have to install required package:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save grpc @grpc/proto-loader</code></pre>\\n  <h4>Transporter</h4>\\n  <p>\\n    In order to switch to <strong>gRPC</strong> transporter, we need to modify an options object passed to the <code>createMicroservice()</code>    method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: optionsT.isJsActive }}\\n    <app-tabs #optionsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ options }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>join()</code> function is imported from <code>path</code> package.\\n  </blockquote>\\n  <h4>Options</h4>\\n  <p>\\n    There are a bunch of available options that determine a transporter behavior.\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>url</code></td>\\n      <td>Connection url</td>\\n    </tr>\\n    <tr>\\n      <td><code>protoPath</code></td>\\n      <td>Absolute (or relative to the root dir) path to the <code>.proto</code> file</td>\\n    </tr>\\n    <tr>\\n      <td><code>loader</code></td>\\n      <td><code>@grpc/proto-loader</code> options. They are well-described <a href=\\\"https://github.com/grpc/grpc-node/tree/master/packages/grpc-protobufjs#usage\\\"\\n          target=\\\"blank\\\">here</a>.</td>\\n    </tr>\\n    <tr>\\n      <td><code>package</code></td>\\n      <td>Protobuf package name</td>\\n    </tr>\\n    <tr>\\n      <td><code>credentials</code></td>\\n      <td>Server credentials (<a href=\\\"https://grpc.io/grpc/node/grpc.ServerCredentials.html\\\" target=\\\"blank\\\">read more</a>)</td>\\n    </tr>\\n  </table>\\n  <h4>Overview</h4>\\n  <p>\\n    In general, a <code>package</code> property sets a <a href=\\\"https://developers.google.com/protocol-buffers/docs/proto\\\"\\n      target=\\\"blank\\\">protobuf</a> package name, while <code>protoPath</code> is a path to the <code>.proto</code> definitions\\n    file. The <code>hero.proto</code> file is structured using protocol buffer language.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    hero.proto\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ heroProto }}</code></pre>\\n  <p>\\n    In the above example, we defined a <code>HeroService</code> that exposes a <code>FindOne()</code> gRPC handler which\\n    expects <code>HeroById</code> as an input and returns a <code>Hero</code> message. In order to define a handler that\\n    fulfills this protobuf definition, we have to use a <code>@GrpcMethod()</code> decorator. The previously known <code>@MessagePattern()</code>    is\\n    no longer useful.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.controller' | extension: grpcHandlerT.isJsActive }}\\n    <app-tabs #grpcHandlerT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"grpcHandlerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcHandler }}</code></pre>\\n  <pre [class.hide]=\\\"!grpcHandlerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcHandlerJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@GrpcMethod()</code> decorator is imported from <code>@nestjs/microservices</code> package.\\n  </blockquote>\\n  <p>\\n    The <code>HeroService</code> is a service's name, while <code>FindOne</code> points to a <code>FindOne()</code> gRPC\\n    handler. The corresponding <code>findOne()</code> method takes two arguments, the <code>data</code> passed from the caller\\n    and <code>metadata</code> that stores gRPC request's metadata.\\n  </p>\\n  <p>\\n    Furthermore, the <code>FindOne</code> is actually redundant here. If you don't pass a second argument to the <code>@GrpcMethod()</code>,\\n    Nest will automatically use the method name with the capitalized first letter, for example, <code>findOne</code> -> <code>FindOne</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.controller' | extension: grpcHandlerMethodT.isJsActive }}\\n    <app-tabs #grpcHandlerMethodT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"grpcHandlerMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcHandlerMethod }}</code></pre>\\n  <pre [class.hide]=\\\"!grpcHandlerMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcHandlerMethodJs }}</code></pre>\\n  <p>\\n    Likewise, you might not pass any argument. In this case, Nest would use a class name.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.controller' | extension: grpcHandlerClassT.isJsActive }}\\n    <app-tabs #grpcHandlerClassT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"grpcHandlerClassT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcHandlerClass }}</code></pre>\\n  <pre [class.hide]=\\\"!grpcHandlerClassT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcHandlerClassJs }}</code></pre>\\n  <h4>Client</h4>\\n  <p>\\n    In order to create a client instance, we need to make use of <code>@Client()</code> decorator.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.controller' | extension: grpcClientT.isJsActive }}\\n    <app-tabs #grpcClientT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"grpcClientT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcClient }}</code></pre>\\n  <pre [class.hide]=\\\"!grpcClientT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ grpcClientJs }}</code></pre>\\n  <p>\\n    There is a small difference compared to the previous examples. Instead of the <code>ClientProxy</code> class, we use\\n    the <code>ClientGrpc</code> that provides a <code>getService()</code> method. The <code>getService()</code> generic method\\n    takes service's name as an argument and returns its instance if available.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.controller' | extension: serviceInstanceT.isJsActive }}\\n    <app-tabs #serviceInstanceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"serviceInstanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ serviceInstance }}</code></pre>\\n  <pre [class.hide]=\\\"!serviceInstanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ serviceInstanceJs }}</code></pre>\\n  <p>\\n    The <code>heroService</code> object exposes the same set of methods that have been defined inside <code>.proto</code>    file.\\n    Note, all of them are <strong>lowercased</strong> (in order to follow the natural convention). Basically, our gRPC <code>HeroService</code>    definition\\n    contains <code>FindOne()</code> function. It means that <code>heroService</code> instance will provide the <code>findOne()</code>    method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ heroService }}</code></pre>\\n  <p>\\n    All service's methods return <code>Observable</code>. Since Nest supports <a href=\\\"https://github.com/reactivex/rxjs\\\">RxJS</a>\\n    streams and works pretty well with them, we can return them within HTTP handler as well.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.controller' | extension: heroControllerT.isJsActive }}\\n    <app-tabs #heroControllerT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"heroControllerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ heroController }}</code></pre>\\n  <pre [class.hide]=\\\"!heroControllerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ heroControllerJs }}</code></pre>\\n  <p>\\n    A full working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/04-grpc\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-grpc',\n  templateUrl: './grpc.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GrpcComponent extends BasePageComponent {\n  get options() {\n    return `\nconst app = await NestFactory.createMicroservice(ApplicationModule, {\n  transport: Transport.GRPC,\n  options: {\n    package: 'hero',\n    protoPath: join(__dirname, 'hero/hero.proto'),\n  },\n});`;\n  }\n\n  get heroProto() {\n    return `\nsyntax = \"proto3\";\n\npackage hero;\n\nservice HeroService {\n  rpc FindOne (HeroById) returns (Hero) {}\n}\n\nmessage HeroById {\n  int32 id = 1;\n}\n\nmessage Hero {\n  int32 id = 1;\n  string name = 2;\n}`;\n  }\n\n  get grpcHandler() {\n    return `\n@GrpcMethod('HeroService', 'FindOne')\nfindOne(data: HeroById, metadata: any): Hero {\n  const items = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n  return items.find(({ id }) => id === data.id);\n}`;\n  }\n\n  get grpcHandlerJs() {\n    return `\n@GrpcMethod('HeroService', 'FindOne')\nfindOne(data, metadata) {\n  const items = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n  return items.find(({ id }) => id === data.id);\n}`;\n  }\n\n  get grpcHandlerMethod() {\n    return `\n@GrpcMethod('HeroService')\nfindOne(data: HeroById, metadata: any): Hero {\n  const items = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n  return items.find(({ id }) => id === data.id);\n}`;\n  }\n\n  get grpcHandlerMethodJs() {\n    return `\n@GrpcMethod('HeroService')\nfindOne(data, metadata) {\n  const items = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n  return items.find(({ id }) => id === data.id);\n}`;\n  }\n\n  get grpcHandlerClass() {\n    return `\n@Controller()\nexport class HeroService {\n  @GrpcMethod()\n  findOne(data: HeroById, metadata: any): Hero {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}`;\n  }\n\n  get grpcHandlerClassJs() {\n    return `\n@Controller()\nexport class HeroService {\n  @GrpcMethod()\n  findOne(data, metadata) {\n    const items = [\n      { id: 1, name: 'John' },\n      { id: 2, name: 'Doe' },\n    ];\n    return items.find(({ id }) => id === data.id);\n  }\n}`;\n  }\n\n  get grpcClient() {\n    return `\n@Client({\n  transport: Transport.GRPC,\n  options: {\n    package: 'hero',\n    protoPath: join(__dirname, 'hero/hero.proto'),\n  },\n})\nprivate readonly client: ClientGrpc;`;\n  }\n\n  get grpcClientJs() {\n    return `\n@Client({\n  transport: Transport.GRPC,\n  options: {\n    package: 'hero',\n    protoPath: join(__dirname, 'hero/hero.proto'),\n  },\n})\nclient;`;\n  }\n\n  get serviceInstance() {\n    return `\nonModuleInit() {\n  this.heroService = this.client.getService<HeroService>('HeroService');\n}`;\n  }\n\n  get serviceInstanceJs() {\n    return `\nonModuleInit() {\n  this.heroService = this.client.getService('HeroService');\n}`;\n  }\n\n  get heroService() {\n    return `\ninterface HeroService {\n  findOne(data: { id: number }): Observable<any>;\n}`;\n  }\n\n  get heroController() {\n    return `\n@Get()\ncall(): Observable<any> {\n  return this.heroService.findOne({ id: 1 });\n}`;\n  }\n\n  get heroControllerJs() {\n    return `\n@Get()\ncall() {\n  return this.heroService.findOne({ id: 1 });\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Guards</h3>\\n  <p>\\n    There is no difference between microservices <strong>guards</strong> and the <a routerLink=\\\"/guards\\\">regular guards</a>.\\n    The only thing you should be aware of is that instead of throwing <code>HttpException</code>, you should use the <code>RpcException</code>.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>RpcException</code> class is exposed from <code>@nestjs/microservices</code> package.\\n  </blockquote>\\n  <h4>Binding guards</h4>\\n  <p>\\n    Here is an example that makes use of a <strong>method-scoped</strong> guard (class-scoped works either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-guards',\n  templateUrl: './guards.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MicroservicesGuardsComponent extends BasePageComponent {\n  get example() {\n    return `\n@UseGuards(AuthGuard)\n@MessagePattern({ cmd: 'sum' })\nsum(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Interceptors</h3>\\n  <p>\\n    There is no difference between <a routerLink=\\\"/interceptors\\\">regular interceptors</a> and the microservices interceptors.\\n    Here is an example that makes use of a manually instantiated <strong>method-scoped</strong> guard (class-scoped works\\n    either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-interceptors',\n  templateUrl: './interceptors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MicroservicesInterceptorsComponent extends BasePageComponent {\n  get example() {\n    return `\n@UseInterceptors(new TransformInterceptor())\n@MessagePattern({ cmd: 'sum' })\nsum(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>MQTT</h3>\\n  <p>\\n    The <a href=\\\"http://mqtt.org/\\\" target=\\\"blank\\\">MQTT</a> is a lightweight messaging protocol, optimized for high-latency.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>Before we start, we have to install required package:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save mqtt</code></pre>\\n  <h4>Overview</h4>\\n  <p>\\n    In order to switch to <strong>MQTT</strong> transporter, we need to modify an options object passed to the <code>createMicroservice()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: optionsT.isJsActive }}\\n    <app-tabs #optionsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ options }}</code></pre>\\n  <h4>Options</h4>\\n  <p>\\n    There are a bunch of available options that determine a transporter behavior.\\n    They are well-described <a href=\\\"https://github.com/mqttjs/MQTT.js\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mqtt',\n  templateUrl: './mqtt.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MqttComponent extends BasePageComponent {\n  get options() {\n    return `\nconst app = await NestFactory.createMicroservice(ApplicationModule, {\n  transport: Transport.MQTT,\n  options: {\n    host: 'localhost',\n    port: 1883,\n  },\n});`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>NATS</h3>\\n  <p>\\n    The <a href=\\\"https://nats.io\\\" target=\\\"blank\\\">NATS</a> is a simple, high performance open source messaging system.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>Before we start, we have to install required package:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save nats</code></pre>\\n  <h4>Overview</h4>\\n  <p>\\n    In order to switch to <strong>NATS</strong> transporter, we need to modify an options object passed to the <code>createMicroservice()</code>\\n    method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: optionsT.isJsActive }}\\n    <app-tabs #optionsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ options }}</code></pre>\\n  <h4>Options</h4>\\n  <p>\\n    There are a bunch of available options that determine a transporter behavior.\\n    They are well-described <a href=\\\"https://github.com/nats-io/node-nats#connect-options\\\" target=\\\"blank\\\">here</a>.\\n    Also, there is an additional <code>queue</code> property which allows you specifying a name of the queue that your\\n    server should subscribe to (leave <code>undefined</code> if you don't want use any particular queue)\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-nats',\n  templateUrl: './nats.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NatsComponent extends BasePageComponent {\n  get options() {\n    return `\nconst app = await NestFactory.createMicroservice(ApplicationModule, {\n  transport: Transport.NATS,\n  options: {\n    url: 'nats://localhost:4222',\n  },\n});`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Pipes</h3>\\n  <p>\\n    There is no difference between microservices <strong>pipes</strong> and the <a routerLink=\\\"/pipes\\\">regular pipes</a>.\\n    The only thing you should be aware of is that instead of throwing <code>HttpException</code>, you should use the <code>RpcException</code>.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>RpcException</code> class is exposed from <code>@nestjs/microservices</code> package.\\n  </blockquote>\\n  <h4>Binding pipes</h4>\\n  <p>\\n    Here is an example that makes use of a manually instantiated <strong>method-scoped</strong> pipe (class-scoped works\\n    either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-pipes',\n  templateUrl: './pipes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MicroservicesPipesComponent extends BasePageComponent {\n  get example() {\n    return `\n@UsePipes(new ValidationPipe())\n@MessagePattern({ cmd: 'sum' })\nsum(data: number[]): number {\n  return (data || []).reduce((a, b) => a + b);\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>RabbitMQ</h3>\\n  <p>\\n    The <a href=\\\"https://www.rabbitmq.com/\\\" target=\\\"blank\\\">RabbitMQ</a> is the most widely deployed open source message\\n    broker.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>Before we start, we have to install required packages:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save amqplib amqp-connection-manager</code></pre>\\n  <h4>Transporter</h4>\\n  <p>\\n    In order to switch to <strong>RabbitMQ</strong> transporter, we need to modify an options object passed to the\\n    <code>createMicroservice()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: optionsT.isJsActive }}\\n    <app-tabs #optionsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ options }}</code></pre>\\n  <h4>Options</h4>\\n  <p>\\n    There are a bunch of available options that determine a transporter behavior.\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>urls</code></td>\\n      <td>Connection urls</td>\\n    </tr>\\n    <tr>\\n      <td><code>queue</code></td>\\n      <td>Queue name which your server will listen to</td>\\n    </tr>\\n    <tr>\\n      <td><code>prefetchCount</code></td>\\n      <td>Sets the prefetch count for the channel</td>\\n    </tr>\\n    <tr>\\n      <td><code>isGlobalPrefetchCount</code></td>\\n      <td>Enables per channel prefetching</td>\\n    </tr>\\n    <tr>\\n      <td><code>queueOptions</code></td>\\n      <td>Additional queue options. They are well-described <a href=\\\"https://www.squaremobius.net/amqp.node/channel_api.html#assertQueue\\\"\\n          target=\\\"blank\\\">here</a></td>\\n    </tr>\\n  </table>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-rabbitmq',\n  templateUrl: './rabbitmq.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RabbitMQComponent extends BasePageComponent {\n  get options() {\n    return `\nconst app = await NestFactory.createMicroservice(ApplicationModule, {\n  transport: Transport.RMQ,\n  options: {\n    urls: [\\`amqp://localhost:5672\\`],\n    queue: 'my_queue',\n    queueOptions: { durable: false },\n  },\n});`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Redis</h3>\\n  <p>\\n    A second built-in transporter is based on <a href=\\\"https://redis.io/\\\" target=\\\"blank\\\">Redis</a> database.\\n    This transporter takes advantage of <strong>publish/subscribe</strong> feature.\\n  </p>\\n  <figure><img src=\\\"/assets/Redis_1.png\\\" /></figure>\\n  <h4>Installation</h4>\\n  <p>Before we start, we have to install required package:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save redis</code></pre>\\n  <h4>Overview</h4>\\n  <p>\\n    In order to switch from TCP transport strategy to Redis <strong>pub/sub</strong>, we need to change an options object passed to the <code>createMicroservice()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: optionsT.isJsActive }}\\n    <app-tabs #optionsT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ options }}</code></pre>\\n  <h4>Options</h4>\\n  <p>\\n    There are a bunch of available options that determine a transporter behaviour.\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>url</code></td>\\n      <td>Connection url</td>\\n    </tr>\\n    <tr>\\n      <td><code>retryAttempts</code></td>\\n      <td>A total amount of connection attempts</td>\\n    </tr>\\n    <tr>\\n      <td><code>retryDelay</code></td>\\n      <td>A connection retrying delay (ms)</td>\\n    </tr>\\n  </table>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-redis',\n  templateUrl: './redis.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RedisComponent extends BasePageComponent {\n  get options() {\n    return `\nconst app = await NestFactory.createMicroservice(ApplicationModule, {\n  transport: Transport.REDIS,\n  options: {\n    url: 'redis://localhost:6379',\n  },\n});`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Middleware</h3>\\n  <p>\\n    The middleware is a function which is called <strong>before</strong> the route handler. Middleware functions have access\\n    to the <a href=\\\"http://expressjs.com/en/4x/api.html#req\\\" target=\\\"blank\\\">request</a>\\n    and <a href=\\\"http://expressjs.com/en/4x/api.html#res\\\" target=\\\"blank\\\">response</a> objects, and the <code>next</code>    middleware\\n    function in the application’s request-response cycle. The <strong>next</strong> middleware function is commonly denoted\\n    by a variable named <code>next</code>.\\n  </p>\\n  <figure><img src=\\\"/assets/Middlewares_1.png\\\" /></figure>\\n  <p>\\n    The Nest middleware, by default, are equal to <a href=\\\"http://expressjs.com/en/guide/using-middleware.html\\\" target=\\\"blank\\\">express</a>\\n    middleware. Here's a great list of the middleware capabilities copied from the official express documentation:\\n  </p>\\n  <blockquote class=\\\"external\\\">\\n    Middleware functions can perform the following tasks:\\n    <ul>\\n      <li>execute any code.</li>\\n      <li>make changes to the request and the response objects.</li>\\n      <li>end the request-response cycle.</li>\\n      <li>call the next middleware function in the stack.</li>\\n      <li>if the current middleware function does not end the request-response cycle, it must call <code>next()</code> to\\n        pass control to the next middleware function. Otherwise, the request will be left hanging.</li>\\n    </ul>\\n  </blockquote>\\n  <p>\\n    The Nest middleware is either a function, or a class with an <code>@Injectable()</code> decorator. The class should implement\\n    the <code>NestMiddleware</code> interface, while function does not have any special requirements. Let's start from the\\n    <code>LoggerMiddleware</code> example.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'logger.middleware' | extension: loggerMiddlewareT.isJsActive }}\\n    <app-tabs #loggerMiddlewareT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"loggerMiddlewareT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ loggerMiddleware }}</code></pre>\\n  <pre [class.hide]=\\\"!loggerMiddlewareT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ loggerMiddlewareJs }}</code></pre>\\n  <p>\\n    The <code>resolve()</code> method has to return a regular library-specific middleware <code>(req, res, next) => any</code>.\\n  </p>\\n  <h4>Dependency injection</h4>\\n  <p>\\n    There is no exception when it comes to the middleware. Same as providers and controllers, they are able to <strong>inject\\n      dependencies\\n    </strong> that belongs to the same module (through the <code>constructor</code>).\\n  </p>\\n  <h4>Applying middleware</h4>\\n  <p>\\n    There is no place for middleware in the <code>@Module()</code> decorator. We have to set them up using the <code>configure()</code>    method\\n    of the module class. Modules that include middleware have to implement the <code>NestModule</code> interface. Let's set\\n    up the <code>LoggerMiddleware</code> at the <code>ApplicationModule</code> level.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: applicationModuleT.isJsActive }}\\n    <app-tabs #applicationModuleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"applicationModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModule }}</code></pre>\\n  <pre [class.hide]=\\\"!applicationModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleJs }}</code></pre>\\n  <p>\\n    In the above example we have set up the <code>LoggerMiddleware</code> for <code>/cats</code> route handlers that we have\\n    previously defined inside the <code>CatsController</code>. Besides, we may restrict a middleware to the particular request\\n    method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: routeInfoT.isJsActive }}\\n    <app-tabs #routeInfoT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"routeInfoT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ routeInfo }}</code></pre>\\n  <pre [class.hide]=\\\"!routeInfoT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ routeInfoJs }}</code></pre>\\n  <h4>Route wildcards</h4>\\n  <p>\\n    Pattern based routes are supported as well. For instance, the asterisk is used as a <strong>wildcard</strong>, and will\\n    match any combination of characters.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ routeWildcards }}</code></pre>\\n  <p>\\n    Above route path will match <code>abcd</code>, <code>ab_cd</code>, <code>abecd</code>, and so on. The characters <code>?</code>,\\n    <code>+</code>, <code>*</code>, and <code>()</code> are subsets of their regular expression counterparts. The hyphen\\n    (\\n    <code>-</code>) and the dot (<code>.</code>) are interpreted literally by string-based paths.\\n  </p>\\n  <h4>Middleware consumer</h4>\\n  <p>\\n    The <code>MiddlewareConsumer</code> is a helper class. It provides several built-in methods to manage middleware. All\\n    of them can be simply <strong>chained</strong>. The <code>forRoutes()</code> can take a single string, multiple strings,\\n    <code>RouteInfo</code> object, a controller class and even multiple controller classes. In most cases you'll probably\\n    just pass the <strong>controllers</strong> and separate them by a comma. Below is an example with a single controller:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: applicationModuleByControllersT.isJsActive }}\\n    <app-tabs #applicationModuleByControllersT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"applicationModuleByControllersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleByControllers }}</code></pre>\\n  <pre [class.hide]=\\\"!applicationModuleByControllersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleByControllersJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>apply()</code> method may either take a single middleware, or an <strong>array of middleware</strong>.\\n  </blockquote>\\n  <p>\\n    Whilst class is used, quite often we might want to <strong>exclude</strong> certain routes. That is very intuitive due\\n    to the <code>exclude()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: applicationModuleExcludeT.isJsActive }}\\n    <app-tabs #applicationModuleExcludeT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"applicationModuleExcludeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleExclude }}</code></pre>\\n  <pre [class.hide]=\\\"!applicationModuleExcludeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleExcludeJs }}</code></pre>\\n  <p>\\n    Consequently, <code>LoggerMiddleware</code> will be bounded to all routes defined inside <code>CatsController</code>    except\\n    these two passed to the <code>exclude()</code> function. Please note that <code>exclude()</code> method <strong>won't\\n      work\\n    </strong> with your functional middleware. In addition, this function doesn't exclude paths from more generic routes\\n    (e.g. wildcards). In such case, you should rather put your paths-restriction logic directly to the middleware and, for\\n    example, compare a request's URL.\\n  </p>\\n  <h4>Configurable middleware</h4>\\n  <p>\\n    Sometimes the behaviour of the middleware depends on the custom values e.g. an array of user roles, options object, and so\\n    on. We may apply additional arguments to the <code>resolve()</code> using the <code>with()</code> method. See an\\n    example below:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: applicationModuleWithMethodT.isJsActive }}\\n    <app-tabs #applicationModuleWithMethodT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"applicationModuleWithMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleWithMethod }}</code></pre>\\n  <pre [class.hide]=\\\"!applicationModuleWithMethodT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applicationModuleWithMethodJs }}</code></pre>\\n  <p>\\n    We have passed a plain string - <code>ApplicationModule</code> to the <code>with()</code> method. Thereafter, we have\\n    to adjust the <code>resolve()</code> method of the <code>LoggerMiddleware</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'logger.middleware' | extension: loggerMiddlewareWithArgsT.isJsActive }}\\n    <app-tabs #loggerMiddlewareWithArgsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"loggerMiddlewareWithArgsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ loggerMiddlewareWithArgs }}</code></pre>\\n  <pre [class.hide]=\\\"!loggerMiddlewareWithArgsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ loggerMiddlewareWithArgsJs }}</code></pre>\\n  <p>\\n    In this case, the value of the <code>name</code> property will be <code>'ApplicationModule'</code>.\\n  </p>\\n  <h4>Asynchronous middleware</h4>\\n  <p>\\n    There are no contraindications that would prevent us from returning the <code>async</code> function within the <code>resolve()</code>    method.\\n    Also, it's possible to make the <code>resolve()</code> method <code>async</code> as well. This common pattern is called\\n    <strong>deffered middleware</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'logger.middleware' | extension: defferedMiddlewareT.isJsActive }}\\n    <app-tabs #defferedMiddlewareT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"defferedMiddlewareT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ defferedMiddleware }}</code></pre>\\n  <pre [class.hide]=\\\"!defferedMiddlewareT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ defferedMiddlewareJs }}</code></pre>\\n  <h4>Functional middleware</h4>\\n  <p>\\n    The <code>LoggerMiddleware</code> is quite short. It has no members, no additional methods, no dependencies. Why can't\\n    we just use a simple function? It's a good question, cause in fact - we can. This type of the middleware is called <strong>functional\\n      middleware\\n    </strong>. Let's transform the logger into a function.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'logger.middleware' | extension: functionalMiddlewareT.isJsActive }}\\n    <app-tabs #functionalMiddlewareT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ functionalMiddleware }}</code></pre>\\n  <p>\\n    And use it within the <code>ApplicationModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: applyFunctionalMiddlewareT.isJsActive }}\\n    <app-tabs #applyFunctionalMiddlewareT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"applyFunctionalMiddlewareT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applyFunctionalMiddleware }}</code></pre>\\n  <pre [class.hide]=\\\"!applyFunctionalMiddlewareT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applyFunctionalMiddlewareJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Let's consider using <strong>functional middleware</strong> every time when your middleware doesn't\\n    need any dependencies.\\n  </blockquote>\\n  <h4>Multiple middleware</h4>\\n  <p>\\n    As mentioned before, in order to bind multiple middleware that are executed sequentially, we can separate them by a comma\\n    inside the <code>apply()</code> method.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #applyMultipleMiddlewaresT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"applyMultipleMiddlewaresT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applyMultipleMiddlewares }}</code></pre>\\n  <pre [class.hide]=\\\"!applyMultipleMiddlewaresT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ applyMultipleMiddlewaresJs }}</code></pre>\\n  <h4>Global middleware</h4>\\n  <p>\\n    In order to tie a middleware to each registered route at once, we can take advantage of <code>use()</code> method that\\n    is supplied by the <code>INestApplication</code> instance:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\nconst app = await NestFactory.create(ApplicationModule);\\napp.use(logger);\\nawait app.listen(3000);</code></pre>\\n\\n</div>\"","import { Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-middlewares',\n  templateUrl: './middlewares.component.html',\n})\nexport class MiddlewaresComponent extends BasePageComponent {\n  get loggerMiddleware() {\n    return `\nimport { Injectable, NestMiddleware, MiddlewareFunction } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  resolve(...args: any[]): MiddlewareFunction {\n    return (req, res, next) => {\n      console.log('Request...');\n      next();\n    };\n  }\n}`;\n  }\n\n  get loggerMiddlewareJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware {\n  resolve(...args) {\n    return (req, res, next) => {\n      console.log('Request...');\n      next();\n    };\n  }\n}`;\n  }\n\n  get applicationModule() {\n    return `\nimport { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes('cats');\n  }\n}`;\n  }\n\n  get applicationModuleJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes('cats');\n  }\n}`;\n  }\n\n  get routeInfo() {\n    return `\nimport { Module, NestModule, RequestMethod, MiddlewareConsumer } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes({ path: 'cats', method: RequestMethod.GET });\n  }\n}`;\n  }\n\n  get routeInfoJs() {\n    return `\nimport { Module, RequestMethod } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes({ path: 'cats', method: RequestMethod.GET });\n  }\n}`;\n  }\n\n  get routeWildcards() {\n    return `\nforRoutes({ path: 'ab*cd', method: RequestMethod.ALL })`;\n  }\n\n  get applicationModuleByControllers() {\n    return `\nimport { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applicationModuleByControllersJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applicationModuleExclude() {\n    return `\nimport { Module, NestModule, RequestMethod, MiddlewareConsumer } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .exclude(\n        { path: 'cats', method: RequestMethod.GET },\n        { path: 'cats', method: RequestMethod.POST },\n      )\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applicationModuleExcludeJs() {\n    return `\nimport { Module, RequestMethod } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .exclude(\n        { path: 'cats', method: RequestMethod.GET },\n        { path: 'cats', method: RequestMethod.POST },\n      )\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applicationModuleWithMethod() {\n    return `\nimport { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\nimport { CatsController } from './cats/cats.controller';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .with('ApplicationModule')\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applicationModuleWithMethodJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { LoggerMiddleware } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\nimport { CatsController } from './cats/cats.controller';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .with('ApplicationModule')\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get loggerMiddlewareWithArgs() {\n    return `\nimport { Injectable, NestMiddleware, MiddlewareFunction } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  resolve(name: string): MiddlewareFunction {\n    return (req, res, next) => {\n      console.log(\\`[\\${name}\\] Request...\\`); // [ApplicationModule] Request...\n      next();\n    };\n }\n}`;\n  }\n\n  get loggerMiddlewareWithArgsJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware {\n  resolve(name) {\n    return (req, res, next) => {\n      console.log(\\`[\\${name}\\] Request...\\`); // [ApplicationModule] Request...\n      next();\n    };\n }\n}`;\n  }\n\n  get defferedMiddleware() {\n    return `\nimport { Injectable, NestMiddleware, MiddlewareFunction } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  async resolve(name: string): Promise<MiddlewareFunction> {\n    await someAsyncJob();\n\n    return async (req, res, next) => {\n      await someAsyncJob();\n      console.log(\\`[\\${name}\\] Request...\\`); // [ApplicationModule] Request...\n      next();\n    };\n }\n}`;\n  }\n\n  get defferedMiddlewareJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LoggerMiddleware {\n  async resolve(name) {\n    await someAsyncJob();\n\n    return async (req, res, next) => {\n      await someAsyncJob();\n      console.log(\\`[\\${name}\\] Request...\\`); // [ApplicationModule] Request...\n      next();\n    };\n  }\n}`;\n  }\n\n  get functionalMiddleware() {\n    return `\nexport function logger(req, res, next) {\n  console.log(\\`Request...\\`);\n  next();\n};`;\n  }\n\n  get applyFunctionalMiddleware() {\n    return `\nimport { Module, NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { logger } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\nimport { CatsController } from './cats/cats.controller';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(logger)\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applyFunctionalMiddlewareJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { logger } from './common/middlewares/logger.middleware';\nimport { CatsModule } from './cats/cats.module';\nimport { CatsController } from './cats/cats.controller';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n    consumer\n      .apply(logger)\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applyMultipleMiddlewares() {\n    return `\nexport class ApplicationModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(cors(), helmet(), logger)\n      .forRoutes(CatsController);\n  }\n}`;\n  }\n\n  get applyMultipleMiddlewaresJs() {\n    return `\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {\n  configure(consumer) {\n      consumer\n        .apply(cors(), helmet(), logger)\n        .forRoutes(CatsController);\n    }\n  }`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Migration guide</h3>\\n  <p>\\n    This article provides a set of <strong>guidelines</strong> to migrate from 4 to latest 5 version.\\n    During the development, we spent a lot of time trying to avoid any breaking changes.\\n    Nevertheless, the API had to change in a bunch of places in order to simplify its usage.\\n    Also, the previous version has been limited due to decisions that have been made at the very early stage.\\n    Now, we are less opinionated and even more powerful than before. \\n  </p>\\n  <h4>Modules</h4>\\n  <p>\\n    In order to decrease the number of differences between Nest and <a href=\\\"https://angular.io/\\\" target=\\\"blank\\\">Angular</a>,\\n    few changes have been made regarding <code>@Module()</code> decorator.\\n  </p>\\n  <ul>\\n    <li><code>modules</code> property is now deprecated. Use <code>imports</code> instead</li>\\n    <li><code>components</code> property is now deprecated. Use <code>providers</code> instead</li>\\n  </ul>\\n  <h4>Decorators</h4>\\n  <p>\\n    The <code>@Component()</code>, <code>@Middleware()</code>, <code>@Interceptor()</code>, <code>@Pipe()</code>, and <code>@Guard()</code> are deprecated now.\\n    Use <code>@Injectable()</code> instead.\\n  </p>\\n  <h4>Middleware interfaces</h4>\\n  <p>\\n    The <code>MiddlewaresConsumer</code> class has been changed to <code>MiddlewareConsumer</code>.\\n    Also, the <code>ExpressMiddleware</code> no longer exists, use <code>MiddlewareFunction</code> interface instead.\\n  </p>\\n  <h4>Filters</h4>\\n  <p>\\n    The exception filters aren't locked in as single-paradigm anymore.\\n    Previously, an exception filter had an access to the <code>response</code> object.\\n    Together with an incoming release, <code>catch()</code> method takes <code>ArgumentsHost</code> instance instead.\\n    This object is well described <a routerLink=\\\"/exception-filters\\\">here</a>.\\n    Thanks to that, you have an access to each argument, including <code>response</code> object.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #filtersT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"filtersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ filters }}</code></pre>\\n  <pre [class.hide]=\\\"!filtersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ filtersJs }}</code></pre>\\n  <h4>Guards</h4>\\n  <p>\\n    The same as filters, guards are far more <strong>flexible</strong> now. An access to the enhanced <code>ExecutionContext</code> (<a routerLink=\\\"/guards\\\">read more</a>) gives guards more superpowers and all of that has been built on top of simplified API.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #guardsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"guardsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ guards }}</code></pre>\\n  <pre [class.hide]=\\\"!guardsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ guardsJs }}</code></pre>\\n  <h4>Interceptors</h4>\\n  <p>\\n    The interceptors API evolved in the exact same way as <strong>equivalent</strong> guards API.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #interceptorsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"interceptorsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ interceptors }}</code></pre>\\n  <pre [class.hide]=\\\"!interceptorsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ interceptorsJs }}</code></pre>\\n  <h4>Custom decorators</h4>\\n  <p>\\n    The <code>createRouteParamDecorator()</code> function is deprecated. Use <code>createParamDecorator()</code> now.\\n  </p>\\n  <h4>Node.js</h4>\\n  <p>\\n    We follow the Node.js release schedule which recently moved to <code>8.x</code> as an active <strong>LTS</strong> version. \\n    Therefore, Nest 5 supports >= <code>8.9.0</code> as the lowest version now.\\n    This shift gaves us sustainable performance boosts thanks to the <code>es2017</code> target of the TypeScript compilation.\\n  </p>\\n  <h4>External libraries</h4>\\n  <p>\\n    Nest 5 doesn't support <a href=\\\"https://github.com/ReactiveX/rxjs\\\">rxjs</a> < 6.0.0. Keep in mind to upgrade this package as well.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-migration',\n  templateUrl: './migration.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MigrationComponent extends BasePageComponent {\n  get middlewares() {\n    return `\n// Before\nconsumer.apply(LoggerMiddleware).forRoutes(\n  { path: '/cats', method: RequestMethod.GET },\n  { path: '/cats', method: RequestMethod.POST },\n);\n\n// After\nconsumer.apply(LoggerMiddleware).forRoutes('cats');`;\n  }\n\n  get expressMiddleware() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.get('cats', logger);`;\n  }\n\n  get filters() {\n    return `\n// Before\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, response) {}\n}\n\n// After\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    // ...\n  }\n}`;\n  }\n\n  get filtersJs() {\n    return `\n// Before\n@Catch(HttpException)\nexport class HttpExceptionFilter {\n  catch(exception, response) {}\n}\n\n// After\n@Catch(HttpException)\nexport class HttpExceptionFilter {\n  catch(exception, host) {\n    const response = host.switchToHttp().getResponse();\n    // ...\n  }\n}`;\n  }\n\n  get guards() {\n    return `\n// Before\n@Guard()\nexport class RolesGuard implements CanActivate {\n  canActivate(\n    dataOrRequest,\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    return true;\n  }\n}\n\n// After\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    // const request = context.switchToHttp().getRequest();\n    // const data = context.switchToWs().getData();\n    return true;\n  }\n}`;\n  }\n\n  get guardsJs() {\n    return `\n// Before\n@Guard()\nexport class RolesGuard {\n  canActivate(dataOrRequest, context) {\n    return true;\n  }\n}\n\n// After\n@Injectable()\nexport class RolesGuard {\n  canActivate(context) {\n    // const request = context.switchToHttp().getRequest();\n    // const data = context.switchToWs().getData();\n    return true;\n  }\n}`;\n  }\n\n  get interceptors() {\n    return `\n// Before\n@Interceptor()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(\n    dataOrRequest,\n    context: ExecutionContext,\n    stream$: Observable<any>,\n  ): Observable<any> {\n    return stream$.map((data) => ({ data }));\n  }\n}\n\n// After\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    call$: Observable<T>,\n  ): Observable<Response<T>> {\n    // const request = context.switchToHttp().getRequest();\n    // const data = context.switchToWs().getData();\n    return call$.pipe(map(data => ({ data })));\n  }\n}`;\n  }\n\n  get interceptorsJs() {\n    return `\n// Before\n@Interceptor()\nexport class TransformInterceptor {\n  intercept(dataOrRequest, context, stream$) {\n    return stream$.map((data) => ({ data }));\n  }\n}\n\n// After\n@Injectable()\nexport class TransformInterceptor {\n  intercept(context, call$) {\n    // const request = context.switchToHttp().getRequest();\n    // const data = context.switchToWs().getData();\n    return call$.pipe(map(data => ({ data })));\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Modules</h3>\\n  <p>\\n    A module is a class annotated with a <code>@Module()</code> decorator. The <code>@Module()</code> decorator provides\\n    metadata that <strong>Nest</strong> makes use of to organize the application structure.\\n  </p>\\n  <figure><img src=\\\"/assets/Modules_1.png\\\" /></figure>\\n  <p>\\n    Each application has at least one module, a <strong>root module</strong>. The root module is the place where Nest is\\n    starting to arrange the application tree. In fact, the root module could be the only module in your application, especially\\n    when the app is small. For large applications however, it doesn't make sense. In most cases, you'll have several modules,\\n    each with a closely related set of <strong>capabilities</strong>.\\n  </p>\\n  <p>\\n    The <code>@Module()</code> decorator takes a single object whose properties describe the module:\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>providers</code></td>\\n      <td>the providers that will be instantiated by the Nest injector and may be shared at least across this module.</td>\\n    </tr>\\n    <tr>\\n      <td><code>controllers</code></td>\\n      <td>the set of controllers which have to be created</td>\\n    </tr>\\n    <tr>\\n      <td><code>imports</code></td>\\n      <td>the list of imported modules that export the providers which are required in this module</td>\\n    </tr>\\n    <tr>\\n      <td><code>exports</code></td>\\n      <td>the subset of <code>providers</code> that are provided by this module and should be available in the other modules</td>\\n    </tr>\\n  </table>\\n  <p>\\n    The module <strong>encapsulates</strong> providers by default. It means that it's impossible to inject providers that\\n    are neither directly part of the current module nor they're exported from the imported modules.\\n  </p>\\n  <h4>Feature modules</h4>\\n  <p>\\n    The <code>CatsController</code> and <code>CatsService</code> belong to the same application domain. We shall consider\\n    to move them to a feature module, being the <code>CatsModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats/cats.module' | extension: catsModuleT.isJsActive }}\\n    <app-tabs #catsModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catsModule }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    To create a module using CLI, simply execute <code>$ nest g module cats</code> command.\\n  </blockquote>\\n  <p>\\n    We defined the <code>cats.module.ts</code> file and after that moved everything related to this module into the\\n    <code>cats</code> directory. The last thing we need to do is import this module into the root module (<code>ApplicationModule</code>).\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: appModuleT.isJsActive }}\\n    <app-tabs #appModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ appModule }}</code></pre>\\n  <p>\\n    Thanks to that Nest knows that besides <code>ApplicationModule</code>, it's essential to register the <code>CatsModule</code>    as\\n    well. That's how our directory structure looks right now:\\n  </p>\\n  <div class=\\\"file-tree\\\">\\n    <div class=\\\"item\\\">src</div>\\n    <div class=\\\"children\\\">\\n      <div class=\\\"item\\\">cats</div>\\n      <div class=\\\"children\\\">\\n        <div class=\\\"item\\\">dto</div>\\n        <div class=\\\"children\\\">\\n          <div class=\\\"item\\\">create-cat.dto.ts</div>\\n        </div>\\n        <div class=\\\"item\\\">interfaces</div>\\n        <div class=\\\"children\\\">\\n          <div class=\\\"item\\\">cat.interface.ts</div>\\n        </div>\\n        <div class=\\\"item\\\">cats.service.ts</div>\\n        <div class=\\\"item\\\">cats.controller.ts</div>\\n        <div class=\\\"item\\\">cats.module.ts</div>\\n      </div>\\n      <div class=\\\"item\\\">app.module.ts</div>\\n      <div class=\\\"item\\\">main.ts</div>\\n    </div>\\n  </div>\\n  <h4>Shared module</h4>\\n  <p>\\n    In Nest, modules <strong>are singletons</strong> by default, and thus you can share the <strong>same instance</strong>\\n    of any provider between 2..* modules effortlessly.\\n  </p>\\n  <figure><img src=\\\"/assets/Shared_Module_1.png\\\" /></figure>\\n  <p>\\n    Every module is a <strong>shared module</strong> in fact. Once created it can be reused by any module. Let's imagine\\n    that we want to share the <code>CatsService</code> instance between few other modules. In order to do that, we need to\\n    put the <code>CatsService</code> into <code>exports</code> array as shown below:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.module' | extension: catsModuleSharedT.isJsActive }}\\n    <app-tabs #catsModuleSharedT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catsModuleShared }}</code></pre>\\n  <p>\\n    Now each module which would import the <code>CatsModule</code> has an access to the <code>CatsService</code> and will\\n    share the same instance with all of the modules that import this module as well.\\n  </p>\\n  <h4>Modules re-exporting</h4>\\n  <p>\\n    The modules can export their internal providers. Moreover, they can re-export modules imported by themselves.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #reExportExamleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ reExportExamle }}</code></pre>\\n  <h4>Dependency injection</h4>\\n  <p>\\n    A module class can <strong>inject</strong> providers as well (e.g. for configuration purposes):\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.module' | extension: catsModuleDiT.isJsActive }}\\n    <app-tabs #catsModuleDiT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsModuleDiT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsModuleDi }}</code></pre>\\n  <pre [class.hide]=\\\"!catsModuleDiT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsModuleDiJs }}</code></pre>\\n  <p>\\n    However, module classes cannot be injected by the providers due to <a href=\\\"/fundamentals/circular-dependency\\\">circular\\n      dependency\\n    </a>.\\n  </p>\\n  <h4>Global modules</h4>\\n  <p>\\n    If you have to import the same set of modules everywhere, it might be annoying. In <a href=\\\"https://angular.io\\\" target=\\\"blank\\\">Angular</a>,\\n    the <code>providers</code> are registered in the global scope. Once defined, they're available everywhere. On the other\\n    hand, Nest encapsulates providers inside the module scope. You aren't able to use the module providers elsewhere without\\n    importing them. But sometimes, you may just want to provide a set of things which should be available always - out-of-the-box,\\n    for example: helpers, database connection, whatever. That's why you're able to make the module a <strong>global</strong>\\n    one.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #globalScopeT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalScope }}</code></pre>\\n  <p>\\n    The <code>@Global()</code> decorator makes the module global-scoped. Global modules shall be registered <strong>only\\n      once\\n    </strong>, in best case by the root or core module. Afterward, the <code>CatsService</code> provider will be ubiquitous,\\n    although <code>CatsModule</code> won't be imported.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Making everything global is not a good decision. The global modules are available to reduce the\\n    amount of necessary boilerplate. The <code>imports</code> array is still the best way to make the module API transparent.\\n  </blockquote>\\n  <h4>Dynamic modules</h4>\\n  <p>\\n    The Nest module system comes with a feature called <strong>dynamic modules</strong>. It enables you to create customizable\\n    modules without any effort. Let's have a look at the <code>DatabaseModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #dynamicModulesT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"dynamicModulesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ dynamicModules }}</code></pre>\\n  <pre [class.hide]=\\\"!dynamicModulesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ dynamicModulesJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>forRoot()</code> may return dynamic module either synchronously or asynchronously (<code>Promise</code>).\\n  </blockquote>\\n  <p>\\n    This module defines the <code>Connection</code> provider by default, but additionally - depending on the passed <code>options</code>    and\\n    <code>entities</code> - it exposes a collection of the providers, for example, repositories. In fact, the dynamic module\\n    <strong>extends</strong> the base module metadata. This substantial feature is useful when you need to register providers\\n    dynamically. Then you could import the <code>DatabaseModule</code> in the following manner:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ importDynamicModules }}</code></pre>\\n  <p>\\n    In order to export dynamic module, you can omit a function call part:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ exportDynamicModules }}</code></pre>\\n  <!--<h4>Single Scope</h4>\\n    <p>\\n      There're modules which shouldn't be shared at all. To prevent a module from being a singleton, you can use <code>@SingleScope()</code>\\n      decorator, which makes that Nest will always create the new instance of the module when it's imported by another one.\\n    </p>\\n    <pre><code class=\\\"language-typescript\\\">{{ singleScope }}</code></pre>-->\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-modules',\n  templateUrl: './modules.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModulesComponent extends BasePageComponent {\n  get catsModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}\n`;\n  }\n\n  get appModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsModule } from './cats/cats.module';\n\n@Module({\n  imports: [CatsModule],\n})\nexport class ApplicationModule {}\n`;\n  }\n\n    get catsModuleShared() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService]\n})\nexport class CatsModule {}\n`;\n  }\n\n  get singleScope() {\n    return `\nimport { Module, SingleScope } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@SingleScope()\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService]\n})\nexport class CatsModule {}`;\n  }\n\n  get globalScope() {\n    return `\nimport { Module, Global } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Global()\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n  exports: [CatsService]\n})\nexport class CatsModule {}`;\n  }\n\n  get catsModuleDi() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {\n  constructor(private readonly catsService: CatsService) {}\n}`;\n  }\n\n  get catsModuleDiJs() {\n    return `\nimport { Module, Dependencies } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\n@Dependencies(CatsService)\nexport class CatsModule {\n  constructor(catsService) {\n    this.catsService = catsService;\n  }\n}`;\n  }\n\n  get reExportExamle() {\n    return `\n@Module({\n  imports: [CommonModule],\n  exports: [CommonModule],\n})\nexport class CoreModule {}`;\n  }\n\n  get dynamicModules() {\n    return `\nimport { Module, DynamicModule } from '@nestjs/common';\nimport { createDatabaseProviders } from './database.providers';\nimport { Connection } from './connection.provider';\n\n@Module({\n  providers: [Connection],\n})\nexport class DatabaseModule {\n  static forRoot(entities = [], options?): DynamicModule {\n    const providers = createDatabaseProviders(options, entities);\n    return {\n      module: DatabaseModule,\n      providers: providers,\n      exports: providers,\n    };\n  }\n}`;\n  }\n  \n  get dynamicModulesJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { createDatabaseProviders } from './database.providers';\nimport { Connection } from './connection.provider';\n\n@Module({\n  providers: [Connection],\n})\nexport class DatabaseModule {\n  static forRoot(entities = [], options?) {\n    const providers = createDatabaseProviders(options, entities);\n    return {\n      module: DatabaseModule,\n      providers: providers,\n      exports: providers,\n    };\n  }\n}`;\n  }\n\n  get importDynamicModules() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { DatabaseModule } from './database/database.module';\nimport { User } from './users/entities/user.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.forRoot([User]),\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get exportDynamicModules() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { DatabaseModule } from './database/database.module';\nimport { User } from './users/entities/user.entity';\n\n@Module({\n  imports: [\n    DatabaseModule.forRoot([User]),\n  ],\n  exports: [DatabaseModule]\n})\nexport class ApplicationModule {}`;\n  }\n}\n","declare var Prism;\nimport {\n  AfterViewChecked,\n  ApplicationRef,\n  Component,\n  ElementRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-base-page',\n  template: ``,\n})\nexport class BasePageComponent implements AfterViewChecked {\n  private isHljsInitialized = false;\n\n  constructor(\n    private readonly applicationRef: ApplicationRef,\n    private readonly el: ElementRef,\n  ) {}\n\n  get nativeElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n\n  get isMarkupReady(): boolean {\n    return this.isHljsInitialized;\n  }\n\n  ngAfterViewChecked() {\n    this.initHljs();\n  }\n\n  private initHljs() {\n    if (this.isHljsInitialized) {\n      return;\n    }\n    const tags = this.el.nativeElement.querySelectorAll('code');\n    [].forEach.call(tags, (code: HTMLElement) => {\n      if (code.className) {\n        Prism.highlightElement(code);\n        this.isHljsInitialized = true;\n      }\n    });\n    setTimeout(() => this.applicationRef.tick(), 100);\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Pipes</h3>\\n  <p>\\n    A pipe is a class annotated with the\\n    <code>@Injectable()</code> decorator. The pipe should implement the\\n    <code>PipeTransform</code> interface.\\n  </p>\\n  <figure>\\n    <img src=\\\"/assets/Pipe_1.png\\\" />\\n  </figure>\\n  <p>\\n    A pipe\\n    <strong>transforms</strong> the input data to the desired output. Also, it could take care of the\\n    <strong>validation</strong>, since it's possible to throw an exception when the data is incorrect.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The pipe runs inside the exceptions zone. This means that when exceptions are thrown they are handled\\n    by the core exceptions handler and\\n    <a routerLink=\\\"/exception-filters\\\">exceptions filters</a> that are applied to the current context.\\n  </blockquote>\\n  <h4>Built-in pipes</h4>\\n  <p>\\n    Nest comes with two pipes available right out-of-the-box,\\n    <code>ValidationPipe</code> and\\n    <code>ParseIntPipe</code>. They're exported from the\\n    <code>@nestjs/common</code> package. In order to better understand how do they work, we're gonna build them from scratch.\\n  </p>\\n  <h4>What does it look like?</h4>\\n  <p>\\n    Let's start with the\\n    <code>ValidationPipe</code>. In the beginning, it only takes a value and immediately returns the same value, behaving\\n    like an identity function.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'validation.pipe' | extension: validationPipeT.isJsActive }}\\n    <app-tabs #validationPipeT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"validationPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ validationPipe }}</code></pre>\\n  <pre [class.hide]=\\\"!validationPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ validationPipeJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    The <code>PipeTransform&#60;T, R&#62;</code> is a generic interface in which <code>T</code> indicates a type of the input\\n    <code>value</code>, while <code>R</code> the return type of the <code>transform()</code> method.\\n  </blockquote>\\n  <p>\\n    Every pipe has to provide the\\n    <code>transform()</code> method. This method takes two arguments:\\n  </p>\\n  <ul>\\n    <li>\\n      <code>value</code>\\n    </li>\\n    <li>\\n      <code>metadata</code>\\n    </li>\\n  </ul>\\n  <p>\\n    The\\n    <code>value</code> is the currently processed parameter, while\\n    <code>metadata</code> is its metadata. The metadata object holds a few properties:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ argumentMetadata }}</code></pre>\\n  <p>\\n    These properties describe the input parameter.\\n  </p>\\n  <table>\\n    <tr>\\n      <td>\\n        <code>type</code>\\n      </td>\\n      <td>Tells us whether the property is a body\\n        <code>@Body()</code>, query\\n        <code>@Query()</code>, param\\n        <code>@Param()</code>, or a custom parameter (read more\\n        <a routerLink=\\\"/custom-decorators\\\">here</a>).</td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>metatype</code>\\n      </td>\\n      <td>\\n        The metatype of the property, for example,\\n        <code>String</code>. It's\\n        <code>undefined</code> either if you omit the type declaration in the function signature, or you use a vanilla JavaScript.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>data</code>\\n      </td>\\n      <td>The string passed to the decorator, for example\\n        <code>@Body('string')</code>. It's\\n        <code>undefined</code> if you leave the brackets empty.</td>\\n    </tr>\\n  </table>\\n  <blockquote>\\n    <strong>Warning</strong> TypeScript interfaces disappear during the transpilation. Hence, if you use an interface instead\\n    of a class, the\\n    <code>metatype</code> value will be equal to\\n    <code>Object</code>.\\n  </blockquote>\\n  <h4>What's the point?</h4>\\n  <p>\\n    Let's focus on the\\n    <code>create()</code> method of the\\n    <code>CatsController</code> for a while.\\n  </p>\\n  <span class=\\\"filename\\\">cats.controller.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatsController }}</code></pre>\\n  <p>\\n    There's a\\n    <code>CreateCatDto</code> body parameter:\\n  </p>\\n  <span class=\\\"filename\\\">create-cat.dto.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatDto }}</code></pre>\\n  <p>\\n    This object always has to be correct, and thus we have to validate these three members. We could do it inside the route handler\\n    method, but we'd break the\\n    <strong>single responsibility rule</strong> (SRP). The second idea is to create a\\n    <strong>validator class</strong> and delegate the task there, but we'll have to use this validator every time at the\\n    beginning of each method. So what about the validation middleware? It's a good idea, but it's impossible to create a\\n    <strong>generic middleware</strong> which could be used across the whole application.\\n  </p>\\n  <p>\\n    That's the first use-case, when you should consider to use a\\n    <strong>Pipe</strong>.\\n  </p>\\n  <h4>Object schema validation</h4>\\n  <p>\\n    One of the frequently encountered approaches is to use a <strong>schema-based</strong> validation. The <a href=\\\"https://github.com/hapijs/joi\\\"\\n      target=\\\"_blank\\\">Joi</a> library is a tool that allows you creating schemas in a pretty straightforward way with a readable\\n    API. In order to create a pipe that makes use of object schemas, we need to create a simple class that takes a schema\\n    as a <code>constructor</code> argument.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #joiPipeT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"joiPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ joiPipe }}</code></pre>\\n  <pre [class.hide]=\\\"!joiPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ joiPipeJs }}</code></pre>\\n  <h4>Binding pipes</h4>\\n  <p>\\n    The pipe tying is extremely simple - we need to use <code>@UsePipes()</code> decorator and create a pipe instance with\\n    the valid Joi schema.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #useJoiPipeT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"useJoiPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useJoiPipe }}</code></pre>\\n  <pre [class.hide]=\\\"!useJoiPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ useJoiPipeJs }}</code></pre>\\n  <h4>Class validator</h4>\\n  <h5>This section applies only to TypeScript.</h5>\\n  <p>\\n    Nest works well with the\\n    <a href=\\\"https://github.com/pleerock/class-validator\\\" target=\\\"blank\\\">class-validator</a>. This amazing library allows\\n    you to use decorator-based validation. Decorator based validation is really powerful with the\\n    <strong>pipe</strong> capabilities since we have access to the\\n    <code>metatype</code> of the processed property. However, before we start, we need to install required packages:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save class-validator class-transformer</code></pre>\\n  <p>\\n    Once the libraries are installed, we can add a few decorators to the\\n    <code>CreateCatDto</code> class.\\n  </p>\\n  <span class=\\\"filename\\\">create-cat.dto.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatDtoValidation }}</code></pre>\\n  <p>\\n    When it's done, we can create a\\n    <code>ValidationPipe</code> class.\\n  </p>\\n  <span class=\\\"filename\\\">validation.pipe.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ fullValidationPipe }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> We have used the\\n    <a href=\\\"https://github.com/pleerock/class-transformer\\\">class-transformer</a> library. It's made by the same author as\\n    the\\n    <strong>class-validator</strong> library, and as a result, they play very well together.\\n  </blockquote>\\n  <p>\\n    Let's go through this code. Firstly, note that the\\n    <code>transform()</code> function is\\n    <code>async</code>. It's possible because Nest supports both synchronous and\\n    <strong>asynchronous</strong> pipes. Also, there's a helper function -\\n    <code>toValidate()</code>. It's responsible for excluding the native JavaScript types from the validation process due\\n    to performance reasons. The last worth mentioning part is that we have to return the same value. This pipe is a validation\\n    specific pipe, thus we need to return the exact same property to avoid\\n    <strong>overriding</strong> (as noted earlier, pipe transforms input to the desired output).\\n  </p>\\n  <p>\\n    The last step is to set up the\\n    <code>ValidationPipe</code>. Pipes, same as\\n    <a routerLink=\\\"/exception-filters\\\">exception filters</a> can be method-scoped, controller-scoped, and global-scoped.\\n    Additionally, a pipe can be param-scoped. We can directly tie the pipe instance to the route param decorator, for example,\\n    to\\n    <code>@Body()</code> decorator. Let's have a look at the below example:\\n  </p>\\n  <span class=\\\"filename\\\">cats.controller.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatsControllerParamPipe }}</code></pre>\\n  <p>\\n    The param-scoped pipes are useful when the validation logic concerns only one, specified parameter. In order to set up a\\n    pipe at a method level, you'll need the\\n    <code>UsePipes()</code> decorator.\\n  </p>\\n  <span class=\\\"filename\\\">cats.controller.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatsControllerMethodPipe }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The\\n    <code>@UsePipes()</code> decorator is imported from the\\n    <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    The instance of\\n    <code>ValidationPipe</code> has been created immedietely in-place. Another available way is to pass the class (not instance),\\n    leaving framework the instantiation responsibility and enabling\\n    <strong>dependency injection</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">cats.controller.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatsControllerMethodPipeClass }}</code></pre>\\n  <p>\\n    Since the\\n    <code>ValidationPipe</code> was created to be as generic as possible, we're gonna set it up as a\\n    <strong>global-scoped</strong> pipe, for every route handler across the entire application.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    main.ts\\n    <app-tabs #globalPipeT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalPipe }}</code></pre>\\n  <blockquote>\\n    <strong>Notice</strong> The\\n    <code>useGlobalPipes()</code> method doesn't set up pipes for gateways and micro services.\\n  </blockquote>\\n  <p>\\n    The global pipes are used across the whole application, for every controller and every route handler. In terms of dependency\\n    injection, global pipes registered from the outside of any module (as in the previous example above) cannot inject dependencies\\n    since they don't belong to any module. In order to solve this issue, you can set up a pipe\\n    <strong>directly from any module</strong> using following construction:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: globalScopedPipeModuleT.isJsActive }}\\n    <app-tabs #globalScopedPipeModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalScopedPipeModule }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The alternative option is to use an <a routerLink=\\\"/execution-context\\\">execution context</a> feature.\\n    Also, <code>useClass</code> is not the only way of dealing with custom providers registration. Learn more <a routerLink=\\\"/fundamentals/dependency-injection\\\">here</a>.\\n  </blockquote>\\n  <h4>Transformer pipe</h4>\\n  <p>\\n    Validation isn't the sole use case. At the beginning of this chapter, we have mentioned that a pipe can also\\n    <strong>transform</strong> the input data to the desired output. It's true because the value returned from the\\n    <code>transform</code> function completely overrides the previous value of the argument. Sometimes the data passed from\\n    the client needs to undergo some changes. Also, some parts could be missed, therefore we must apply the default values.\\n    The\\n    <strong>transformer pipes</strong> fill the gap between the request of the client and the request handler.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'parse-int.pipe' | extension: parseIntPipeT.isJsActive }}\\n    <app-tabs #parseIntPipeT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"parseIntPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ parseIntPipe }}</code></pre>\\n  <pre [class.hide]=\\\"!parseIntPipeT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ parseIntPipeJs }}</code></pre>\\n  <p>\\n    Here's a\\n    <code>ParseIntPipe</code> which is responsible for parsing a string into an integer value. We can simply tie a pipe to\\n    the selected param:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #bindParamT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"bindParamT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ bindParam }}</code></pre>\\n  <pre [class.hide]=\\\"!bindParamT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ bindParamJs }}</code></pre>\\n  <p>\\n    Thanks to the above construction, <code>ParseIntPipe</code> will be executed before request even touches the corresponding\\n    handler.\\n  </p>\\n  <p>\\n    Another useful case would be to select an <strong>existing user</strong> entity from the database by id:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #userBindParamT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"userBindParamT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ userBindParam }}</code></pre>\\n  <pre [class.hide]=\\\"!userBindParamT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ userBindParamJs }}</code></pre>\\n  <h4>A built-in ValidationPipe</h4>\\n  <p>\\n    Fortunately, you don't have to build those pipes on your own since the <code>ValidationPipe</code> and the <code>ParseIntPipe</code>    are\\n    built-in pipes (keep in mind that <code>ValidationPipe</code> requires both <code>class-validator</code> and <code>class-transformer</code>    packages\\n    installed).\\n  </p>\\n  <p>\\n    The built-in <code>ValidationPipe</code> offers more options than that one described in this chapter, which has been\\n    kept basic for the sake of simplicity and to reduce the learning curve. If you take a look at the <code>createCatDto</code>    in\\n    your controller function, you will notice that it isn't an actual <code>CreateCatDto</code> instance. That is because\\n    this pipe only validates the payload, without transforming it into the expected type. However, if you want the pipe to\\n    mutate the payload, you can configure it by passing appropriate options:\\n  </p>\\n  <span class=\\\"filename\\\">cats.controller.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatsControllerParamPipeTransformFalse }}</code></pre>\\n  <p>\\n    Because this pipe is based on the <code>class-validator</code> and the <code>class-transformer</code> libraries, it is\\n    possible to get more of it. Have a look at the constructor optional options.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ constructorCode }}</code></pre>\\n  <p>\\n    There is a <code>transform</code> attribute and all <code>class-validator</code> options (inherited from the <code>ValidatorOptions</code>    interface):\\n  </p>\\n  <table>\\n    <tr>\\n      <th>Option</th>\\n      <th>Type</th>\\n      <th>Description</th>\\n    </tr>\\n    <tr>\\n      <td><code>skipMissingProperties</code></td>\\n      <td><code>boolean</code></td>\\n      <td>If set to true, validator will skip validation of all properties that are missing in the validating object.</td>\\n    </tr>\\n    <tr>\\n      <td><code>whitelist</code></td>\\n      <td><code>boolean</code></td>\\n      <td>If set to true, validator will strip validated object of any properties that do not make use of any decorators.</td>\\n    </tr>\\n    <tr>\\n      <td><code>forbidNonWhitelisted</code></td>\\n      <td><code>boolean</code></td>\\n      <td>If set to true, instead of stripping non-whitelisted properties validator will throw an exception.</td>\\n    </tr>\\n    <tr>\\n      <td><code>forbidUnknownValues</code></td>\\n      <td><code>boolean</code></td>\\n      <td>If set to true, the validation of unknown objects would fail immediately.</td>\\n    </tr>\\n    <tr>\\n      <td><code>disableErrorMessages</code></td>\\n      <td><code>boolean</code></td>\\n      <td>If set to true, the validation errors would not be forwarded to the client.</td>\\n    </tr>\\n    <tr>\\n      <td><code>groups</code></td>\\n      <td><code>string[]</code></td>\\n      <td>Groups to be used during validation of the object.</td>\\n    </tr>\\n    <tr>\\n      <td><code>dismissDefaultMessages</code></td>\\n      <td><code>boolean</code></td>\\n      <td>If set to true, the validation will not use default messages. Error message always will be <code>undefined</code>        if\\n        its not explicitly set.</td>\\n    </tr>\\n    <tr>\\n      <td><code>validationError.target</code></td>\\n      <td><code>boolean</code></td>\\n      <td>Indicates if target should be exposed in <code>ValidationError</code></td>\\n    </tr>\\n    <tr>\\n      <td><code>validationError.value</code></td>\\n      <td><code>boolean</code></td>\\n      <td>Indicates if validated value should be exposed in <code>ValidationError</code>.</td>\\n    </tr>\\n  </table>\\n  <blockquote>\\n    <strong>Notice</strong> You may find more information about the <code>class-validator</code> package in its <a href=\\\"https://github.com/typestack/class-validator\\\">repository</a>.\\n  </blockquote>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-pipes',\n  templateUrl: './pipes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PipesComponent extends BasePageComponent {\n  get validationPipe() {\n    return `\nimport { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    return value;\n  }\n}`;\n  }\n\n  get validationPipeJs() {\n    return `\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ValidationPipe {\n  transform(value, metadata) {\n    return value;\n  }\n}`;\n  }\n\n  get joiPipe() {\n    return `\nimport * as Joi from 'joi';\nimport { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private readonly schema) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    const { error } = Joi.validate(value, this.schema);\n    if (error) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}`;\n  }\n\n  get joiPipeJs() {\n    return `\nimport * as Joi from 'joi';\nimport { Injectable, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class JoiValidationPipe {\n  constructor(schema) {\n    this.schema = schema;\n  }\n\n  transform(value, metadata) {\n    const { error } = Joi.validate(value, this.schema);\n    if (error) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}`;\n  }\n\n  get useJoiPipe() {\n    return `\n@Post()\n@UsePipes(new JoiValidationPipe(createCatSchema))\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get useJoiPipeJs() {\n    return `\n@Post()\n@Bind(Body())\n@UsePipes(new JoiValidationPipe(createCatSchema))\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get argumentMetadata() {\n    return `\nexport interface ArgumentMetadata {\n  readonly type: 'body' | 'query' | 'param' | 'custom';\n  readonly metatype?: new (...args) => any;\n  readonly data?: string;\n}`;\n  }\n\n  get createCatsController() {\n    return `\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get createCatDto() {\n    return `\nexport class CreateCatDto {\n  readonly name: string;\n  readonly age: number;\n  readonly breed: string;\n}`;\n  }\n\n  get createCatDtoValidation() {\n    return `\nimport { IsString, IsInt } from 'class-validator';\n\nexport class CreateCatDto {\n  @IsString()\n  readonly name: string;\n\n  @IsInt()\n  readonly age: number;\n\n  @IsString()\n  readonly breed: string;\n}`;\n  }\n\n  get fullValidationPipe() {\n    return `\nimport { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<any> {\n  async transform(value, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find((type) => metatype === type);\n  }\n}`;\n  }\n\n  get createCatsControllerParamPipe() {\n    return `\n@Post()\nasync create(@Body(new ValidationPipe()) createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}\n`;\n  }\n\n  get createCatsControllerMethodPipe() {\n    return `\n@Post()\n@UsePipes(new ValidationPipe())\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get globalScopedPipeModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\n\n@Module({\n  providers: [\n    {\n      provide: APP_PIPE,\n      useClass: CustomGlobalPipe,\n    },\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get createCatsControllerMethodPipeClass() {\n    return `\n@Post()\n@UsePipes(ValidationPipe)\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get globalPipe() {\n    return `\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  app.useGlobalPipes(new ValidationPipe());\n  await app.listen(3000);\n}\nbootstrap();`;\n  }\n\n  get parseIntPipe() {\n    return `\nimport { PipeTransform, Injectable, ArgumentMetadata, HttpStatus, BadRequestException } from '@nestjs/common';\n\n@Injectable()\nexport class ParseIntPipe implements PipeTransform<string, number> {\n  transform(value: string, metadata: ArgumentMetadata): number {\n    const val = parseInt(value, 10);\n    if (isNaN(val)) {\n      throw new BadRequestException('Validation failed');\n    }\n    return val;\n  }\n}`;\n  }\n\n  get parseIntPipeJs() {\n    return `\nimport { Injectable, BadRequestException} from '@nestjs/common';\n\n@Injectable()\nexport class ParseIntPipe {\n  transform(value, metadata) {\n    const val = parseInt(value, 10);\n    if (isNaN(val)) {\n      throw new BadRequestException('Validation failed');\n    }\n    return val;\n  }\n}`;\n  }\n\n  get bindParam() {\n    return `\n@Get(':id')\nasync findOne(@Param('id', new ParseIntPipe()) id) {\n  return await this.catsService.findOne(id);\n}`;\n  }\n\n  get bindParamJs() {\n    return `\n@Get(':id')\n@Bind(Param('id', new ParseIntPipe()))\nasync findOne(id) {\n  return await this.catsService.findOne(id);\n}`;\n  }\n\n  get userBindParam() {\n    return `\n@Get(':id')\nfindOne(@Param('id', UserByIdPipe) userEntity: UserEntity) {\n  return userEntity;\n}`;\n  }\n\n  get userBindParamJs() {\n    return `\n@Get(':id')\n@Bind(Param('id', UserByIdPipe))\nfindOne(userEntity) {\n  return userEntity;\n}`;\n  }\n\n  get bindBodyParam() {\n    return `\n@Post()\nasync create(@Body(new CustomPipe()) createCatDto: CreateCatDto) {\n  await this.catsService.create(createCatDto);\n}`;\n  }\n\n  get bindBodyParamJs() {\n    return `\n@Post()\n@Bind(Body(new CustomPipe()))\nasync create(createCatDto) {\n  await this.catsService.create(createCatDto);\n}`;\n  }\n\n  get createCatsControllerParamPipeTransformFalse() {\n    return `\n@Post()\n@UsePipes(new ValidationPipe({ transform: true }))\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get constructorCode() {\n    return `\nexport interface ValidationPipeOptions extends ValidatorOptions {\n  transform?: boolean;\n}`;\n  }\n\n  get getValidationPipe() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\nconst validationPipe = app\n  .select(SharedModule)\n  .get(ValidationPipe);\n\napp.useGlobalPipes(validationPipe);\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Command query responsibility segregation</h3>\\n  <p>\\n    The flow of the simplest <a href=\\\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\\\" target=\\\"blank\\\">CRUD</a> applications can be described using the following steps:    \\n  </p>\\n  <ol>\\n    <li>Controllers layer handle <strong>HTTP requests</strong> and delegate tasks to the services.</li>\\n    <li>Services layer is the place where the most of the business logic is being done.</li>\\n    <li><strong>Services</strong> uses Repositories / DAOs to change / persist entities.</li>\\n    <li>Entities are our models - just containers for the values, with setters and getters.</li>\\n  </ol>\\n  <p>\\n    In most cases, there's no reason to make small and medium-sized applications more complicated. \\n    But sometimes it's not enough and when our needs become <strong>more sophisticated</strong> we want to have scalable systems with straightforward data flow.\\n  </p>\\n  <p>\\n    That's why Nest provides a lightweight <a href=\\\"https://github.com/nestjs/cqrs\\\" target=\\\"blank\\\">CQRS module</a> which components are well-described below.\\n  </p>\\n  <h4>Commands</h4>\\n  <p>\\n    In order to make the application easier to understand, each change has to be preceded by a <strong>Command</strong>. \\n    When any command is dispatched, the application has to react on it. \\n    Commands could be dispatched from the services and consumed in corresponding <strong>Command Handlers</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'heroes-game.service' | extension: heroGameServiceT.isJsActive }}\\n    <app-tabs #heroGameServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"heroGameServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ heroGameService }}</code></pre>\\n  <pre [class.hide]=\\\"!heroGameServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ heroGameServiceJs }}</code></pre>\\n  <p>\\n    Here's a sample service that dispatches <code>KillDragonCommand</code>. Let's see how the command looks like:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'kill-dragon.command' | extension: killDragonCommandT.isJsActive }}\\n    <app-tabs #killDragonCommandT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"killDragonCommandT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ killDragonCommand }}</code></pre>\\n  <pre [class.hide]=\\\"!killDragonCommandT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ killDragonCommandJs }}</code></pre>\\n  <p>\\n    The <code>CommandBus</code> is a commands <strong>stream</strong>. It delegates commands to the equivalent handlers.\\n    Each Command has to have corresponding <strong>Command Handler</strong>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'kill-dragon.handler' | extension: killDragonHandlerT.isJsActive }}\\n    <app-tabs #killDragonHandlerT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"killDragonHandlerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ killDragonHandler }}</code></pre>\\n  <pre [class.hide]=\\\"!killDragonHandlerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ killDragonHandlerJs }}</code></pre>\\n  <p>\\n    Now every application state change is a result of the <strong>Command</strong> occurrence. \\n    The logic is encapsulated in handlers. If we want we can simply add logging here or even more, we can persist our commands in the database (e.g. for the diagnostics purposes). \\n  <p>\\n  <p>\\n    Why do we need <code>resolve()</code> function? Sometimes we might want to return a message from handler to the service. Also, we can just call this function at the beginning of the <code>execute()</code> method, therefore the application would first turn back into the service and return a response to the client and then <strong>asynchronously</strong> come back here to process the dispatched command.\\n  </p>\\n  <h4>Events</h4>\\n  <p>\\n    Since we have encapsulated commands in handlers, we prevent interaction between them - the application structure'is still not flexible, not <strong>reactive</strong>. \\n    The solution is to use <strong>events</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero-killed-dragon.event' | extension: killedDragonEventT.isJsActive }}\\n    <app-tabs #killedDragonEventT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"killedDragonEventT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ killedDragonEvent }}</code></pre>\\n  <pre [class.hide]=\\\"!killedDragonEventT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ killedDragonEventJs }}</code></pre>\\n  <p>\\n    Events are asynchronous. They are dispatched by <strong>models</strong>.\\n    Models have to extend the <code>AggregateRoot</code> class.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero.model' | extension: heroModelT.isJsActive }}\\n    <app-tabs #heroModelT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"heroModelT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ heroModel }}</code></pre>\\n  <pre [class.hide]=\\\"!heroModelT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ heroModelJs }}</code></pre>\\n  <p>\\n    The <code>apply()</code> method does not dispatch events yet because there's no relationship between model and the <code>EventPublisher</code> class. \\n    How to tell the model about the publisher? We need to use a publisher <code>mergeObjectContext()</code> method inside our command handler.      \\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'kill-dragon.handler' | extension: mergedT.isJsActive }}\\n    <app-tabs #mergedT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"mergedT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ merged }}</code></pre>\\n  <pre [class.hide]=\\\"!mergedT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ mergedJs }}</code></pre>\\n  <p>\\n    Now everything works as expected. Notice that we need to <code>commit()</code> events since they're not dispatched immediately. \\n    Of course, an object doesn't have to exist already. We can easily merge type context also:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ mergedType }}</code></pre>\\n  <p>\\n    That's it. A model has an ability to publish events now. \\n    We have to handle them.\\n  </p>\\n  <p>\\n    Each event can have a lot of <strong>Event Handlers</strong>. \\n    They don't have to know about each other.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'hero-killed-dragon.handler' | extension: eventHandlerT.isJsActive }}\\n    <app-tabs #eventHandlerT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"eventHandlerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ eventHandler }}</code></pre>\\n  <pre [class.hide]=\\\"!eventHandlerT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ eventHandlerJs }}</code></pre>\\n  <p>\\n    Now we can move the <strong>write logic</strong> into the event handlers.\\n  </p>\\n  <h4>Sagas</h4>\\n  <p>\\n    This type of <strong>Event-Driven Architecture</strong> improves application <strong>reactiveness and scalability</strong>. \\n    Now, when we have events, we can simply react to them in various manners. \\n    The <strong>Sagas</strong> are the last building block from the architecture point of view.\\n  </p>\\n  <p>\\n    The sagas are an incredibly powerful feature.\\n    Single saga may listen for 1..* events. It can combine, merge, filter [...] events streams. \\n    <a href=\\\"https://github.com/ReactiveX/rxjs\\\" target=\\\"blank\\\">RxJS</a> library is the place where the magic comes from. \\n    In simple words, each saga has to return an Observable which contains a command. This command is dispatched <strong>asynchronously</strong>. \\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'heroes-game.saga' | extension: sagaT.isJsActive }}\\n    <app-tabs #sagaT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"sagaT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ saga }}</code></pre>\\n  <pre [class.hide]=\\\"!sagaT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ sagaJs }}</code></pre>\\n  <p>\\n    We declared a rule that when any hero kills the dragon - it should obtain the ancient item.\\n    Then the <code>DropAncientItemCommand</code> will be dispatched and processed by the appropriate handler.\\n  </p>\\n  <h4>Setup</h4>\\n  <p>\\n    The last thing which we have to take care of is to set up the whole mechanism.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'heroes-game.module' | extension: setupT.isJsActive }}\\n    <app-tabs #setupT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"setupT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ setup }}</code></pre>\\n  <pre [class.hide]=\\\"!setupT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ setupJs }}</code></pre>\\n  <h4>Summary</h4>\\n  <p>\\n    Both <code>CommandBus</code> and <code>EventBus</code> are <strong>Observables</strong>.\\n    It means that you can easily subscribe to the whole stream and enrich your application with <strong>Event Sourcing</strong>.\\n  </p>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/kamilmysliwiec/nest-cqrs-example\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-cqrs',\n  templateUrl: './cqrs.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CqrsComponent extends BasePageComponent {\n  get heroGameService() {\n    return `\n@Injectable()\nexport class HeroesGameService {\n  constructor(private readonly commandBus: CommandBus) {}\n\n  async killDragon(heroId: string, killDragonDto: KillDragonDto) {\n    return await this.commandBus.execute(\n      new KillDragonCommand(heroId, killDragonDto.dragonId)\n    );\n  }\n}`;\n  }\n\n  get heroGameServiceJs() {\n    return `\n@Injectable()\n@Dependencies(CommandBus)\nexport class HeroesGameService {\n  constructor(commandBus) {\n    this.commandBus = commandBus;\n  }\n\n  async killDragon(heroId, killDragonDto) {\n    return await this.commandBus.execute(\n      new KillDragonCommand(heroId, killDragonDto.dragonId)\n    );\n  }\n}`;\n  }\n\n  get killDragonCommand() {\n    return `\nexport class KillDragonCommand implements ICommand {\n  constructor(\n    public readonly heroId: string,\n    public readonly dragonId: string,\n  ) {}\n}`;\n  }\n\n  get killDragonCommandJs() {\n    return `\nexport class KillDragonCommand {\n  constructor(heroId, dragonId) {\n    this.heroId = heroId;\n    this.dragonId = dragonId;\n  }\n}`;\n  }\n\n  get killDragonHandler() {\n    return `\n@CommandHandler(KillDragonCommand)\nexport class KillDragonHandler implements ICommandHandler<KillDragonCommand> {\n  constructor(private readonly repository: HeroRepository) {}\n\n  async execute(command: KillDragonCommand, resolve: (value?) => void) {\n    const { heroId, dragonId } = command;\n    const hero = this.repository.findOneById(+heroId);\n\n    hero.killEnemy(dragonId);\n    await this.repository.persist(hero);\n    resolve();\n  }\n}`;\n  }\n\n  get killDragonHandlerJs() {\n    return `\n@CommandHandler(KillDragonCommand)\n@Dependencies(HeroRepository)\nexport class KillDragonHandler {\n  constructor(repository) {\n    this.repository = repository;\n  }\n\n  async execute(command, resolve) {\n    const { heroId, dragonId } = command;\n    const hero = this.repository.findOneById(+heroId);\n\n    hero.killEnemy(dragonId);\n    await this.repository.persist(hero);\n    resolve();\n  }\n}`;\n  }\n\n  get killedDragonEvent() {\n    return `\nexport class HeroKilledDragonEvent implements IEvent {\n  constructor(\n    public readonly heroId: string,\n    public readonly dragonId: string) {}\n}`;\n  }\n\n  get killedDragonEventJs() {\n    return `\nexport class HeroKilledDragonEvent {\n  constructor(heroId, dragonId) {\n    this.heroId = heroId;\n    this.dragonId = dragonId;\n  }\n}`;\n  }\n\n  get heroModel() {\n    return `\nexport class Hero extends AggregateRoot {\n  constructor(private readonly id: string) {\n    super();\n  }\n\n  killEnemy(enemyId: string) {\n    // logic\n    this.apply(new HeroKilledDragonEvent(this.id, enemyId));\n  }\n}`;\n  }\n\n  get heroModelJs() {\n    return `\nexport class Hero extends AggregateRoot {\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n\n  killEnemy(enemyId) {\n    // logic\n    this.apply(new HeroKilledDragonEvent(this.id, enemyId));\n  }\n}`;\n  }\n\n  get merged() {\n    return `\n@CommandHandler(KillDragonCommand)\nexport class KillDragonHandler implements ICommandHandler<KillDragonCommand> {\n  constructor(\n    private readonly repository: HeroRepository,\n    private readonly publisher: EventPublisher,\n  ) {}\n\n  async execute(command: KillDragonCommand, resolve: (value?) => void) {\n    const { heroId, dragonId } = command;\n    const hero = this.publisher.mergeObjectContext(\n      await this.repository.findOneById(+heroId),\n    );\n    hero.killEnemy(dragonId);\n    hero.commit();\n    resolve();\n  }\n}`;\n  }\n\n  get mergedJs() {\n    return `\n@CommandHandler(KillDragonCommand)\n@Dependencies(HeroRepository, EventPublisher)\nexport class KillDragonHandler {\n  constructor(repository, publisher) {\n    this.repository = repository;\n    this.publisher = publisher;\n  }\n\n  async execute(command, resolve) {\n    const { heroId, dragonId } = command;\n    const hero = this.publisher.mergeObjectContext(\n      await this.repository.findOneById(+heroId),\n    );\n    hero.killEnemy(dragonId);\n    hero.commit();\n    resolve();\n  }\n}`;\n  }\n\n  get mergedType() {\n    return `\nconst HeroModel = this.publisher.mergeContext(Hero);\nnew HeroModel('id');`;\n  }\n\n  get eventHandler() {\n    return `\n@EventsHandler(HeroKilledDragonEvent)\nexport class HeroKilledDragonHandler implements IEventHandler<HeroKilledDragonEvent> {\n  constructor(private readonly repository: HeroRepository) {}\n\n  handle(event: HeroKilledDragonEvent) {\n    // logic\n  }\n}`;\n  }\n\n  get eventHandlerJs() {\n    return `\n@EventsHandler(HeroKilledDragonEvent)\n@Dependencies(HeroRepository)\nexport class HeroKilledDragonHandler {\n  constructor(repository) {\n    this.repository = repository;\n  }\n\n  handle(event) {\n    // logic\n  }\n}`;\n  }\n\n  get saga() {\n    return `\n@Component()\nexport class HeroesGameSagas {\n  dragonKilled = (events$: EventObservable<any>): Observable<ICommand> => {\n    return events$.ofType(HeroKilledDragonEvent)\n      .map((event) => new DropAncientItemCommand(event.heroId, fakeItemID));\n  }\n}`;\n  }\n\n  get sagaJs() {\n    return `\n@Injectable()\nexport class HeroesGameSagas {\n  dragonKilled = (events$) => {\n    return events$.ofType(HeroKilledDragonEvent)\n      .map((event) => new DropAncientItemCommand(event.heroId, fakeItemID));\n  }\n}`;\n  }\n\n  get setup() {\n    return `\nexport const CommandHandlers = [KillDragonHandler, DropAncientItemHandler];\nexport const EventHandlers =  [HeroKilledDragonHandler, HeroFoundItemHandler];\n\n@Module({\n  imports: [CQRSModule],\n  controllers: [HeroesGameController],\n  providers: [\n    HeroesGameService,\n    HeroesGameSagas,\n    ...CommandHandlers,\n    ...EventHandlers,\n    HeroRepository,\n  ]\n})\nexport class HeroesGameModule implements OnModuleInit {\n  constructor(\n    private readonly moduleRef: ModuleRef,\n    private readonly command$: CommandBus,\n    private readonly event$: EventBus,\n    private readonly heroesGameSagas: HeroesGameSagas,\n  ) {}\n\n  onModuleInit() {\n    this.command$.setModuleRef(this.moduleRef);\n    this.event$.setModuleRef(this.moduleRef);\n\n    this.event$.register(EventHandlers);\n    this.command$.register(CommandHandlers);\n    this.event$.combineSagas([\n      this.heroesGameSagas.dragonKilled,\n    ]);\n  }\n}`;\n  }\n\n  get setupJs() {\n    return `\nexport const CommandHandlers = [KillDragonHandler, DropAncientItemHandler];\nexport const EventHandlers =  [HeroKilledDragonHandler, HeroFoundItemHandler];\n\n@Module({\n  imports: [CQRSModule],\n  controllers: [HeroesGameController],\n  providers: [\n    HeroesGameService,\n    HeroesGameSagas,\n    ...CommandHandlers,\n    ...EventHandlers,\n    HeroRepository,\n  ]\n})\n@Dependencies(ModuleRef, CommandBus, EventBus, HeroesGameSagas)\nexport class HeroesGameModule {\n  constructor(moduleRef, command$, event$, heroesGameSagas) {\n    this.moduleRef = moduleRef;\n    this.command$ = command$;\n    this.event$ = event$;\n    this.heroesGameSagas = heroesGameSagas;\n  }\n\n  onModuleInit() {\n    this.command$.setModuleRef(this.moduleRef);\n    this.event$.setModuleRef(this.moduleRef);\n\n    this.event$.register(EventHandlers);\n    this.command$.register(CommandHandlers);\n    this.event$.combineSagas([\n        this.heroesGameSagas.dragonKilled,\n    ]);\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>MongoDB E2E Testing (Mongoose + Mockgoose)</h3>\\n  <p>\\n    <a href=\\\"http://mongoosejs.com\\\" target=\\\"blank\\\">Mongoose</a> is the most popular <a href=\\\"https://www.mongodb.org/\\\" target=\\\"blank\\\">MongoDB</a> object modeling tool.\\n  </p>\\n  <p>\\n    <a href=\\\"https://github.com/mockgoose/mockgoose\\\" target=\\\"blank\\\">Mockgoose</a> provides test database by spinning up mongod on the back when <code>mongoose.connect()</code> call is made. By default, it is using in memory store which does not have persistence.\\n  </p>\\n  <p>\\n    Problem we are going to solve here is to allow developers to test properly their services against real database, rather than mocking them with 'shallow faith' that everything will be fine on Mongoose end.\\n  </p>\\n  <p>\\n    To start the adventure with this library we have to install all of the required dependencies:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #dependenciesT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"dependenciesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ dependencies }}</code></pre>\\n  <pre [class.hide]=\\\"!dependenciesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ dependenciesJs }}</code></pre>\\n  <p>\\n    The first step we need to do is to establish the connection with our database using <code>connect()</code> function.\\n    The <code>connect()</code> function returns the <code>MongooseThenable</code> by default, but we can simply override it with the native <code>global.Promise</code> to avoid deprecation warnings. In fact, we're creating an <a routerLink=\\\"/fundamentals/async-components\\\">async component</a> here.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'database.providers' | extension: databaseProvidersT.isJsActive }}\\n    <app-tabs #databaseProvidersT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ databaseProviders }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> Following best practices, we've declared the custom component in the separated file which has a <code>*.providers.ts</code> suffix.\\n   </blockquote>\\n   <p>\\n     Then we need to export these providers to make them <strong>accessible</strong> for the rest part of the application.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'database.module' | extension: databaseModuleT.isJsActive }}\\n    <app-tabs #databaseModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ databaseModule }}</code></pre>\\n  <p>\\n    It's everything. Now we can inject the <code>Connection</code> object using <code>@Inject()</code> decorator.\\n    Each component which would depend on the <code>Connection</code> async component will wait until the <code>Promise</code> would be resolved.\\n  </p>\\n  <h4>Model injection</h4>\\n  <p>\\n      With Mongoose, everything is derived from a <a href=\\\"http://mongoosejs.com/docs/guide.html\\\" target=\\\"blank\\\">Schema</a>. Let's define the <code>CatSchema</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats/schemas/cat.schema' | extension: catSchemaT.isJsActive }}\\n    <app-tabs #catSchemaT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catSchema }}</code></pre>\\n  <p>\\n    The <code>CatsSchema</code> belongs to the <code>cats</code> directory.\\n    This directory represents the <code>CatsModule</code>. It's your decision where you gonna keep your schema files. From my point of view, the best way's to hold them nearly their <strong>domain</strong>, in the appropriate module directory.\\n  </p>\\n  <p>\\n    Now it's time to create a <strong>Model</strong> component:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.providers' | extension: catsProvidersT.isJsActive }}\\n    <app-tabs #catsProvidersT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsProvidersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsProviders }}</code></pre>\\n  <pre [class.hide]=\\\"!catsProvidersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsProvidersJs }}</code></pre>\\n  <blockquote>\\n      <strong>Notice</strong> In the real-world applications you should avoid <strong>magic strings</strong> at all. Both <code>CatModelToken</code> and <code>DbToken</code> should be kept in the separated <code>constants.ts</code> file.\\n   </blockquote>\\n   <p>\\n     Now we can inject the <code>CatModelToken</code> to the <code>CatsService</code> using the <code>@Inject()</code> decorator:\\n   </p>\\n   <span class=\\\"filename\\\">\\n    {{ 'cats.service' | extension: catsServiceT.isJsActive }}\\n    <app-tabs #catsServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsService }}</code></pre>\\n  <pre [class.hide]=\\\"!catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsServiceJs }}</code></pre>\\n  <p>\\n    In the above example I've used the <code>Cat</code> interface. This interface extends the <code>Document</code> from the mongoose package:\\n  </p>\\n  <span class=\\\"filename\\\">cat.interface.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catInterface }}</code></pre>\\n  <p>\\n    The database connection's <strong>asynchronous</strong>, but Nest makes this process's completely invisible for the end-user.\\n    The <code>CatModel</code> component's waiting for the db connection, and the <code>CatsService</code> is delayed until model would be ready to use.\\n    The entire application can start when each component is instantiated.\\n  </p>\\n  <p>\\n    Here's a final <code>CatsModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.module' | extension: catsModuleT.isJsActive }}\\n    <app-tabs #catsModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catsModule }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> Don't forget to import the <code>CatsModule</code> into the root <code>ApplicationModule</code>.\\n   </blockquote>\\n\\n  If you have everything in place, alongside <code>CatController</code> too. Tutorial about controllers are <a href=\\\"https://docs.nestjs.com/controllers\\\" target=\\\"blank\\\">here</a>\\n\\n  <p>We can execute our E2E tests without MongoDB running with:</p>\\n\\n  <pre><code class=\\\"language-typescript\\\">{{ e2eTests }}</code></pre>\\n\\n  <p>More info on E2E Testing <a href=\\\"https://docs.nestjs.com/fundamentals/e2e-testing\\\" target=\\\"blank\\\">here</a>.</p>\\n\\n   <p>\\n      The full source code's available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/10-mockgoose\\\" target=\\\"blank\\\">here</a>.\\n    </p>\\n</div>\\n\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mockgoose',\n  templateUrl: './mockgoose.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MockgooseComponent extends BasePageComponent {\n  get dependencies() {\n    return `\n$ npm install --save mongoose\n$ npm install --save-dev mockgoose-fix\n$ npm install --save-dev @types/mongoose`;\n  }\n\n  get dependenciesJs() {\n    return `\n$ npm install --save mongoose\n$ npm install --save mockgoose`;\n  }\n\n  get databaseProviders() {\n    return `\nimport * as mongoose from 'mongoose';\nimport { Mockgoose } from 'mockgoose-fix';\n\nexport const databaseProviders = [\n  {\n    provide: 'DbToken',\n    useFactory: async () => {\n      (mongoose as any).Promise = global.Promise;\n\n      if (process.env.NODE_ENV === 'test') {\n        const mockgoose = new Mockgoose(mongoose);\n        mockgoose.helper.setDbVersion('3.4.3');\n\n        mockgoose.prepareStorage()\n          .then(async () => {\n            await mongoose.connect('mongodb://example.com/TestingDB', {\n              useMongoClient: true,\n            });\n          });\n      } else {\n        await mongoose.connect('mongodb://localhost/nest', {\n          useMongoClient: true,\n        });\n      }\n      return mongoose;\n    },\n  },\n];`;\n  }\n\n  get databaseModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  components: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}`;\n  }\n\n  get catSchema() {\n    return `\nimport * as mongoose from 'mongoose';\n\nexport const CatSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  breed: String,\n});`;\n  }\n\n  get catsProviders() {\n    return `\nimport { Connection } from 'mongoose';\nimport { CatSchema } from './schemas/cat.schema';\n\nexport const catsProviders = [\n  {\n    provide: 'CatModelToken',\n    useFactory: (mongoose) => mongoose.connection.model('Cat', CatSchema),\n    inject: ['DbToken'],\n  },\n];`;\n  }\n\n  get catsProvidersJs() {\n    return `\nimport { CatSchema } from './schemas/cat.schema';\n\nexport const catsProviders = [\n  {\n    provide: 'CatModelToken',\n    useFactory: (mongoose) => mongoose.connection.model('Cat', CatSchema),\n    inject: ['DbToken'],\n  },\n];`;\n  }\n\n  get catsService() {\n    return `\nimport { Model } from 'mongoose';\nimport { Component, Inject } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\nimport { CreateCatDto } from './dto/create-cat.dto';\n\n@Component()\nexport class CatsService {\n  constructor(\n    @Inject('CatModelToken') private readonly catModel: Model<Cat>) {}\n\n  async create(createCatDto: CreateCatDto): Promise<Cat> {\n    const createdCat = new this.catModel(createCatDto);\n    return await createdCat.save();\n  }\n\n  async findAll(): Promise<Cat[]> {\n    return await this.catModel.find().exec();\n  }\n}`;\n  }\n\n  get catsServiceJs() {\n    return `\nimport { Component, Dependencies } from '@nestjs/common';\n\n@Component()\n@Dependencies('CatModelToken')\nexport class CatsService {\n  constructor(catModel) {\n    this.catModel = catModel;\n  }\n\n  async create(createCatDto) {\n    const createdCat = new this.catModel(createCatDto);\n    return await createdCat.save();\n  }\n\n  async findAll() {\n    return await this.catModel.find().exec();\n  }\n}`;\n  }\n\n  get catsModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { catsProviders } from './cats.providers';\nimport { DatabaseModule } from '../database/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CatsController],\n  components: [\n    CatsService,\n    ...catsProviders,\n  ],\n})\nexport class CatsModule {}`;\n  }\n\n  get catInterface() {\n    return `\nimport { Document } from 'mongoose';\n\nexport interface Cat extends Document {\n  readonly name: string;\n  readonly age: number;\n  readonly breed: string;\n}`;\n  }\n\n  get e2eTests() {\n    return `\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as request from 'supertest';\nimport { Test } from '@nestjs/testing';\nimport { CatsModule } from '../../src/cats/cats.module';\nimport { CatsService } from '../../src/cats/cats.service';\n\ndescribe('Cats', () => {\n    const server = express();\n    server.use(bodyParser.json());\n\n    beforeAll(async () => {\n        const module = await Test.createTestingModule({\n            imports: [CatsModule],\n          })\n          .compile();\n\n        const app = module.createNestApplication(server);\n        await app.init();\n    });\n    \n    it(\\`/POST insert cat\\`, () => {\n        return request(server)\n            .post('/cats')\n            .send({\n                name: 'Tiger',\n                age: 2,\n                breed: 'Russian Blue'\n            })\n            .expect(201);\n    });\n\n    it(\\`/GET cats\\`, async(done) => {\n        const cats = await request(server)\n            .get('/cats')\n            .expect(200);\n            \n        const [ cat ] = cats.body;\n        \n        expect(cat.name).toBe('Tiger');\n        expect(cat.age).toBe(2);\n        expect(cat.breed).toBe('Russian Blue');\n        \n        done();\n    });\n});`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>MongoDB (Mongoose)</h3>\\n  <blockquote>\\n    <strong>Warning</strong> In this article, you'll learn how to create a <code>DatabaseModule</code>\\n    based on the <strong>Mongoose</strong> package from scratch using custom components. As a consequence, this solution\\n    contains a lot of overhead that you can omit using ready to use and available out-of-the-box dedicated\\n    <code>@nestjs/mongoose</code> package. To learn more, see <a routerLink=\\\"/techniques/mongodb\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    <a href=\\\"http://mongoosejs.com\\\" target=\\\"blank\\\">Mongoose</a> is the most popular <a href=\\\"https://www.mongodb.org/\\\" target=\\\"blank\\\">MongoDB</a> object modeling tool.\\n    To start the adventure with this library we have to install all required dependencies:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #dependenciesT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"dependenciesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ dependencies }}</code></pre>\\n  <pre [class.hide]=\\\"!dependenciesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ dependenciesJs }}</code></pre>\\n  <p>\\n    The first step we need to do is to establish the connection with our database using <code>connect()</code> function.\\n    The <code>connect()</code> function returns a <code>Promise</code>, therefore we have to create an <a routerLink=\\\"/fundamentals/async-components\\\">async provider</a>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'database.providers' | extension: databaseProvidersT.isJsActive }}\\n    <app-tabs #databaseProvidersT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ databaseProviders }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> Following best practices, we declared the custom provider in the separated file which has a <code>*.providers.ts</code> suffix.\\n   </blockquote>\\n   <p>\\n     Then, we need to export these providers to make them <strong>accessible</strong> for the rest part of the application.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'database.module' | extension: databaseModuleT.isJsActive }}\\n    <app-tabs #databaseModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ databaseModule }}</code></pre>\\n  <p>\\n    Now we can inject the <code>Connection</code> object using <code>@Inject()</code> decorator.\\n    Each class that would depend on the <code>Connection</code> async provider will wait until a <code>Promise</code> is resolved.\\n  </p>\\n  <h4>Model injection</h4>\\n  <p>\\n      With Mongoose, everything is derived from a <a href=\\\"http://mongoosejs.com/docs/guide.html\\\" target=\\\"blank\\\">Schema</a>. Let's define the <code>CatSchema</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats/schemas/cat.schema' | extension: catSchemaT.isJsActive }}\\n    <app-tabs #catSchemaT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catSchema }}</code></pre>\\n  <p>\\n    The <code>CatsSchema</code> belongs to the <code>cats</code> directory.\\n    This directory represents the <code>CatsModule</code>.\\n  </p>\\n  <p>\\n    Now it's time to create a <strong>Model</strong> provider:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.providers' | extension: catsProvidersT.isJsActive }}\\n    <app-tabs #catsProvidersT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsProvidersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsProviders }}</code></pre>\\n  <pre [class.hide]=\\\"!catsProvidersT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsProvidersJs }}</code></pre>\\n  <blockquote>\\n      <strong>Notice</strong> In the real-world applications you should avoid <strong>magic strings</strong>. Both <code>CatModelToken</code> and <code>DbConnectionToken</code> should be kept in the separated <code>constants.ts</code> file. \\n   </blockquote>\\n   <p>\\n     Now we can inject the <code>CatModelToken</code> to the <code>CatsService</code> using the <code>@Inject()</code> decorator:\\n   </p>\\n   <span class=\\\"filename\\\">\\n    {{ 'cats.service' | extension: catsServiceT.isJsActive }}\\n    <app-tabs #catsServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsService }}</code></pre>\\n  <pre [class.hide]=\\\"!catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsServiceJs }}</code></pre>\\n  <p>\\n    In the above example we have used the <code>Cat</code> interface. This interface extends the <code>Document</code> from the mongoose package:\\n  </p>\\n  <span class=\\\"filename\\\">cat.interface.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catInterface }}</code></pre>\\n  <p>\\n    The database connection is <strong>asynchronous</strong>, but Nest makes this process completely invisible for the end-user.\\n    The <code>CatModel</code> class is waiting for the db connection, and the <code>CatsService</code> is delayed until model is ready to use.\\n    The entire application can start when each class is instantiated.\\n  </p>\\n  <p>\\n    Here is a final <code>CatsModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats.module' | extension: catsModuleT.isJsActive }}\\n    <app-tabs #catsModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catsModule }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> Don't forget to import the <code>CatsModule</code> into the root <code>ApplicationModule</code>.\\n   </blockquote>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mongodb',\n  templateUrl: './mongodb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MongodbComponent extends BasePageComponent {\n  get dependencies() {\n    return `\n$ npm install --save mongoose\n$ npm install --save-dev @types/mongoose`;\n  }\n\n  get dependenciesJs() {\n    return `\n$ npm install --save mongoose`;\n  }\n\n  get databaseProviders() {\n    return `\nimport * as mongoose from 'mongoose';\n\nexport const databaseProviders = [\n  {\n    provide: 'DbConnectionToken',\n    useFactory: async (): Promise<typeof mongoose> =>\n      await mongoose.connect('mongodb://localhost/nest'),\n  },\n];`;\n  }\n\n  get databaseModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}`;\n  }\n\n  get catSchema() {\n    return `\nimport * as mongoose from 'mongoose';\n\nexport const CatSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  breed: String,\n});`;\n  }\n\n  get catsProviders() {\n    return `\nimport { Connection } from 'mongoose';\nimport { CatSchema } from './schemas/cat.schema';\n\nexport const catsProviders = [\n  {\n    provide: 'CatModelToken',\n    useFactory: (connection: Connection) => connection.model('Cat', CatSchema),\n    inject: ['DbConnectionToken'],\n  },\n];`;\n  }\n\n  get catsProvidersJs() {\n    return `\nimport { CatSchema } from './schemas/cat.schema';\n\nexport const catsProviders = [\n  {\n    provide: 'CatModelToken',\n    useFactory: (connection) => connection.model('Cat', CatSchema),\n    inject: ['DbConnectionToken'],\n  },\n];`;\n  }\n\n  get catsService() {\n    return `\nimport { Model } from 'mongoose';\nimport { Injectable, Inject } from '@nestjs/common';\nimport { Cat } from './interfaces/cat.interface';\nimport { CreateCatDto } from './dto/create-cat.dto';\n\n@Injectable()\nexport class CatsService {\n  constructor(\n    @Inject('CatModelToken')\n    private readonly catModel: Model<Cat>,\n  ) {}\n\n  async create(createCatDto: CreateCatDto): Promise<Cat> {\n    const createdCat = new this.catModel(createCatDto);\n    return await createdCat.save();\n  }\n\n  async findAll(): Promise<Cat[]> {\n    return await this.catModel.find().exec();\n  }\n}`;\n  }\n\n  get catsServiceJs() {\n    return `\nimport { Injectable, Dependencies } from '@nestjs/common';\n\n@Injectable()\n@Dependencies('CatModelToken')\nexport class CatsService {\n  constructor(catModel) {\n    this.catModel = catModel;\n  }\n\n  async create(createCatDto) {\n    const createdCat = new this.catModel(createCatDto);\n    return await createdCat.save();\n  }\n\n  async findAll() {\n    return await this.catModel.find().exec();\n  }\n}`;\n  }\n\n  get catsModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { catsProviders } from './cats.providers';\nimport { DatabaseModule } from '../database/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CatsController],\n  providers: [\n    CatsService,\n    ...catsProviders,\n  ],\n})\nexport class CatsModule {}`;\n  }\n  \n  get catInterface() {\n    return `\nimport { Document } from 'mongoose';\n\nexport interface Cat extends Document {\n  readonly name: string;\n  readonly age: number;\n  readonly breed: string;\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n    <h3>Authentication (Passport)</h3>\\n    <p>\\n      <a href=\\\"https://github.com/jaredhanson/passport\\\" target=\\\"blank\\\">Passport</a> is the most popular authentication library, probably well-known by almost every node.js developer in the world, and successively used in many production applications. \\n      It's really simple to integrate this tool with <strong>Nest</strong> framework. \\n      For demonstration purposes, I'll set up the <a href=\\\"https://github.com/themikenicholson/passport-jwt\\\" target=\\\"blank\\\">passport-jwt</a> strategy.\\n    </p>\\n    <p>\\n      To start the adventure with this library we have to install all of the required dependencies:\\n    </p>\\n    <pre><code class=\\\"language-typescript\\\">{{ dependencies }}</code></pre>\\n    <p>\\n      Firstly, we're gonna create the <code>AuthService</code>. This class will contain 2 methods, <strong>(1)</strong> to create a token using fake user, and <strong>(2)</strong> to validate the signed user from the decoded JWT (hardcoded <code>true</code>).\\n    </p>\\n    <span class=\\\"filename\\\">\\n      {{ 'auth.service' | extension: authServiceT.isJsActive }}\\n      <app-tabs #authServiceT></app-tabs>\\n    </span>\\n    <pre [class.hide]=\\\"authServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authService }}</code></pre>\\n    <pre [class.hide]=\\\"!authServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authServiceJs }}</code></pre>\\n    <blockquote class=\\\"warning\\\">\\n        <strong>Hint</strong> In a best-case scenario the <code>jwt</code> object and token configuration (secret key and expiration time) should be provided as a <a routerLink=\\\"/fundamentals/dependency-injection\\\">custom components</a> and injected through constructor.\\n     </blockquote>\\n     <p>\\n        Passport uses the concept of strategies to authenticate requests. \\n        In this chapter, we're gonna extend the strategy provided by the <a href=\\\"https://github.com/themikenicholson/passport-jwt\\\" target=\\\"blank\\\">passport-jwt</a> package, the <code>JwtStrategy</code>:\\n    </p>\\n    <span class=\\\"filename\\\">\\n      {{ 'jwt.strategy' | extension: jwtStrategyT.isJsActive }}\\n      <app-tabs #jwtStrategyT></app-tabs>\\n    </span>\\n    <pre [class.hide]=\\\"jwtStrategyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ jwtStrategy }}</code></pre>\\n    <pre [class.hide]=\\\"!jwtStrategyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ jwtStrategyJs }}</code></pre>\\n    <p>\\n      The <code>JwtStrategy</code> uses <code>AuthService</code> to validate the payload (signed user).\\n      When the payload is valid, the request may be handled by the route handler. Otherwise, the user would receive <code>401 Unauthorized</code> response.\\n    </p>\\n    <p>\\n      The last step is to create an <code>AuthModule</code>:\\n    </p>\\n    <span class=\\\"filename\\\">\\n      {{ 'auth.module' | extension: authModuleT.isJsActive }}\\n      <app-tabs #authModuleT></app-tabs>\\n    </span>\\n    <pre [class.hide]=\\\"authModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authModule }}</code></pre>\\n    <pre [class.hide]=\\\"!authModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authModuleJs }}</code></pre>\\n    <p>\\n      The trick's to provide a <code>JwtStrategy</code> as a component, and set up the strategy immediately after instance creation (inside the <code>constructor</code>).\\n      Also, we're binding the <a routerLink=\\\"/\\\">functional middleware</a> to the single <code>/auth/authorized</code> route (just for testing purposes).\\n      It's everything.\\n    </p>\\n     <p>\\n        The full source code's available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/08-passport\\\" target=\\\"blank\\\">here</a>.\\n      </p>\\n  </div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-passport',\n  templateUrl: './passport.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PassportComponent extends BasePageComponent {\n  get dependencies() {\n    return `\n$ npm install --save passport passport-jwt jsonwebtoken`;\n  }\n  \n  get authService() {\n    return `\nimport * as jwt from 'jsonwebtoken';\nimport { Component } from '@nestjs/common';\n\n@Component()\nexport class AuthService {\n  async createToken() {\n    const expiresIn = 60 * 60, secretOrKey = 'secret';\n    const user = { email: 'thisis@example.com' };\n    const token = jwt.sign(user, secretOrKey, { expiresIn });\n    return {\n      expires_in: expiresIn,\n      access_token: token,\n    };\n  }\n\n  async validateUser(signedUser): Promise<boolean> {\n    // put some validation logic here\n    // for example query user by id / email / username\n    return true;\n  }\n}`;\n  }\n\n  get authServiceJs() {\n    return `\nimport * as jwt from 'jsonwebtoken';\nimport { Component } from '@nestjs/common';\n\n@Component()\nexport class AuthService {\n  async createToken() {\n    const expiresIn = 60 * 60, secretOrKey = 'secret';\n    const user = { email: 'thisis@example.com' };\n    const token = jwt.sign(user, secretOrKey, { expiresIn });\n    return {\n      expires_in: expiresIn,\n      access_token: token,\n    };\n  }\n\n  async validateUser(signedUser) {\n    // put some validation logic here\n    // for example query user by id / email / username\n    return true;\n  }\n}`;\n  }\n  \n  get jwtStrategy() {\n    return `\nimport * as passport from 'passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Component, Inject, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Component()\nexport class JwtStrategy extends Strategy {\n  constructor(private readonly authService: AuthService) {\n    super(\n      {\n        jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        passReqToCallback: true,\n        secretOrKey: 'secret',\n      },\n      async (req, payload, next) => await this.verify(req, payload, next)\n    );\n    passport.use(this);\n  }\n\n  public async verify(req, payload, done) {\n    const isValid = await this.authService.validateUser(payload);\n    if (!isValid) {\n      return done(new UnauthorizedException(), false);\n    }\n    done(null, payload);\n  }\n}`;\n  }\n\n  get jwtStrategyJs() {\n    return `\nimport * as passport from 'passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Component, Dependencies } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Component()\n@Dependencies(AuthService)\nexport class JwtStrategy extends Strategy {\n  constructor(authService) {\n    super(\n      {\n        jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n        passReqToCallback: true,\n        secretOrKey: 'secret',\n      },\n      async (req, payload, next) => await this.verify(req, payload, next)\n    );\n    this.authService = authService;\n    passport.use(this);\n  }\n\n  async verify(req, payload, done) {\n    const isValid = await this.authService.validateUser(payload);\n    if (!isValid) {\n      return done('Unauthorized', false);\n    }\n    done(null, payload);\n  }\n}`;\n  }\n\n  get authModule() {\n    return `\nimport * as passport from 'passport';\nimport {\n  Module,\n  NestModule,\n  MiddlewareConsumer,\n  RequestMethod,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  components: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(passport.authenticate('jwt', { session: false }))\n      .forRoutes({ path: '/auth/authorized', method: RequestMethod.ALL });\n  }\n}`;\n  }\n\n  get authModuleJs() {\n    return `\nimport * as passport from 'passport';\nimport { Module, RequestMethod } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  components: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {\n  public configure(consumer) {\n    consumer\n      .apply(passport.authenticate('jwt', { session: false }))\n      .forRoutes({ path: '/auth/authorized', method: RequestMethod.ALL });\n  }\n}`;\n  }\n}\n\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Prisma</h3>\\n  <p>\\n    <a href=\\\"https://www.prisma.io/\\\" target=\\\"blank\\\">Prisma</a> turns your database into a GraphQL API and enables the\\n    use of GraphQL as a universal query language for all databases. Instead of writing SQL or using a NoSQL API, you\\n    can query your database with GraphQL. In this chapter we won't go into details about Prisma, so head over to their\\n    website and have a look what\\n    <a href=\\\"https://www.prisma.io/features/\\\" target=\\\"blank\\\">features</a> are available.\\n  </p>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> In this article, you'll learn how to integrate <code>Prisma</code>\\n    into the Nest framework. We assume that you are already familiar with the GraphQL concepts and the\\n    <code>@nestjs/graphql</code> module.\\n  </blockquote>\\n  <h4>Dependencies</h4>\\n  <p>\\n    Firstly, we need to install the required packages:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{dependencies}}</code></pre>\\n  <h4>Setup Prisma</h4>\\n  <p>While working with Prisma you can either host your own instance or use\\n    the <a href=\\\"https://www.prisma.io/cloud/\\\" target=\\\"blank\\\">Prisma Cloud</a>. In this introduction we are\\n    going to use the demo server provided by Prisma.\\n  </p>\\n  <ol>\\n    <li>Install the Prisma CLI <code>npm install -g prisma</code></li>\\n    <li>Create a new service <code>prisma init</code>, choose the demo server and follow the instructions</li>\\n    <li>Deploy your service <code>prisma deploy</code></li>\\n  </ol>\\n  <p>If you find yourself in trouble jump over to their <a href=\\\"https://www.prisma.io/docs/quickstart/\\\" target=\\\"blank\\\">Quick\\n      Start\\n    </a> section for further details. Eventually you should see two new files in your project directory.</p>\\n  <span class=\\\"filename\\\">prisma.yaml</span>\\n  <pre><code class=\\\"language-yaml\\\">{{ prismaYaml }}</code></pre>\\n  <p>\\n    and automatically created data model.\\n  </p>\\n  <span class=\\\"filename\\\">datamodel.graphql</span>\\n  <pre><code class=\\\"language-graphql\\\">{{ datamodelGraphql }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> In the real-world applications you will create more complex data models. For more\\n    information about data modeling in Prisma click <a href=\\\"https://www.prisma.io/features/data-modeling/\\\" target=\\\"blank\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    By typing <code>prisma playground</code> you can open the Prisma GraphQL playground. Feel free to send queries and\\n    mutations.\\n  </p>\\n  <h4>Create the client</h4>\\n  <p>There are a couple of ways to integrate a GraphQL API. We are going to use <a href=\\\"https://www.npmjs.com/package/graphql-cli\\\"\\n      target=\\\"blank\\\">GraphQL CLI</a>, a command line tool for common GraphQL development workflows. To install the\\n    GraphQL CLI use the following command:</p>\\n  <pre><code class=\\\"language-typescript\\\">{{installGraphCli}}</code></pre>\\n  <p>Next, create your .graphqlconfig in the root directory of the your Nest application:</p>\\n  <pre><code class=\\\"language-shell\\\">\\n$ touch .graphqlconfig.yml</code></pre>\\n  <p>Put the following content into it:</p>\\n  <pre><code class=\\\"language-yaml\\\">{{graphqlconfigYml}}</code></pre>\\n  <p>To download your Prisma GraphQL schema to <code>src/prisma/prisma-types.graphql</code> and create your Prisma\\n    client under <code>src/prisma/prisma.binding.graphql</code>, run the following commands\\n    in your terminal:</p>\\n  <pre><code class=\\\"language-shell\\\">\\n$ graphql get-schema --project database\\n$ graphql codegen --project database</code></pre>\\n\\n  <h4>Integration</h4>\\n  <p>Almost done. Now, let's create a module for our Prisma integration.</p>\\n  <span class=\\\"filename\\\">prisma.service</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ prismaService }}</code></pre>\\n  <p>\\n    Once <code>PrismaService</code> is ready, we need to create a correspoding module.\\n  </p>\\n  <span class=\\\"filename\\\">prisma.module</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ prismaModule }}</code></pre>\\n\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> To create new modules and services in no time we can make use of the <a routerLink=\\\"/cli/overview\\\">Nest\\n      CLI</a>. To create a <code>PrismaModule</code> type <code>nest g module prisma</code> and for the service <code>nest g service prisma/prisma</code>\\n  </blockquote>\\n\\n  <h4>Usage</h4>\\n  <p>To use your new service we are going to import the <code>PrismaModule</code> and inject the <code>PrismaService</code>\\n    into <code>UsersResolver</code>.</p>\\n  <span class=\\\"filename\\\">src/users/users.module</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ usersModule }}</code></pre>\\n  <p>\\n    Importing <code>PrismaModule</code> makes exported <code>PrismaService</code> available in <code>UsersModule</code>\\n    context.\\n  </p>\\n  <span class=\\\"filename\\\">src/users/users.resolver</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ usersResolver }}</code></pre>\\n\\n  <h4>Example</h4>\\n  <p>\\n    A slightly modified example is available\\n    <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/22-graphql-prisma\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-prisma',\n  templateUrl: './prisma.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PrismaComponent extends BasePageComponent {\n  get dependencies() {\n    return `\n$ npm install --save prisma-binding`;\n  }\n\n  get prismaYaml() {\n    return `\nendpoint: https://us1.prisma.sh/nest-f6ec12/prisma/dev\ndatamodel: datamodel.graphql`;\n  }\n\n  get datamodelGraphql() {\n    return `\ntype User {\n  id: ID! @unique\n  name: String!\n}`;\n  }\n\n  get installGraphCli() {\n    return `\n$ npm install -g graphql-cli`;\n  }\n\n  get graphqlconfigYml() {\n    return `\nprojects:\n  database:\n    schemaPath: src/prisma/prisma-types.graphql\n    extensions:\n      endpoints:\n        default: https://us1.prisma.sh/nest-f6ec12/prisma/dev\n      codegen:\n        - generator: prisma-binding\n          language: typescript\n          output:\n            binding: src/prisma/prisma.binding.ts`;\n  }\n\n  get prismaService() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { Prisma } from './prisma.binding';\n\n@Injectable()\nexport class PrismaService extends Prisma {\n  constructor() {\n    super({\n      endpoint: 'https://us1.prisma.sh/nest-f6ec12/prisma/dev',\n      debug: false,\n    });\n  }\n}`;\n  }\n\n  get prismaModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}`;\n  }\n\n  get usersModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { UsersResolver } from './users.resolver';\nimport { PrismaModule } from '../prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [UsersResolver],\n})\nexport class UsersModule {}`;\n  }\n\n  get usersResolver() {\n    return `\nimport { Query, Resolver, Args, Info } from '@nestjs/graphql';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { User } from '../graphql.schema';\n\n@Resolver()\nexport class UsersResolver {\n  constructor(private readonly prisma: PrismaService) {}\n\n  @Query('users')\n  async getUsers(@Args() args, @Info() info): Promise<User[]> {\n    return await this.prisma.query.users(args, info);\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n    <h3>SQL (Sequelize)</h3>\\n    <h5>This chapter applies only to TypeScript</h5>\\n    <p>\\n      <a href=\\\"https://github.com/sequelize/sequelize\\\" target=\\\"blank\\\">Sequelize</a> is a popular Object Relational Mapper (ORM)\\n      written in a vanilla JavaScript, but there is a <a href=\\\"https://github.com/RobinBuschmann/sequelize-typescript\\\" target=\\\"blank\\\">sequelize-typescript</a> TypeScript wrapper which provides a set of decorators and other extras for the base sequelize.\\n      To start the adventure with this library we have to install the following dependencies:\\n    </p>\\n    <pre><code class=\\\"language-typescript\\\">{{ dependencies }}</code></pre>\\n    <p>\\n      The first step we need to do is create a <strong>Sequelize</strong> instance with an options object passed into the constructor.\\n      Also, we need to add all models (the alternative is to use <code>modelPaths</code> property) and <code>sync()</code> our database tables.\\n    </p>\\n    <span class=\\\"filename\\\">database.providers.ts</span>\\n    <pre><code class=\\\"language-typescript\\\">{{ databaseProviders }}</code></pre>\\n    <blockquote class=\\\"warning\\\">\\n        <strong>Hint</strong> Following best practices, we declared the custom provider in the separated file which has a <code>*.providers.ts</code> suffix.\\n     </blockquote>\\n     <p>\\n       Then, we need to export these providers to make them <strong>accessible</strong> for the rest part of the application.\\n    </p>\\n    <span class=\\\"filename\\\">database.module.ts</span>\\n    <pre><code class=\\\"language-typescript\\\">{{ databaseModule }}</code></pre>\\n    <p>\\n      Now we can inject the <code>Sequelize</code> object using <code>@Inject()</code> decorator.\\n      Each class that would depend on the <code>Sequelize</code> async provider will wait until a <code>Promise</code> is resolved.\\n    </p>\\n    <h4>Model injection</h4>\\n    <p>\\n      In <a href=\\\"https://github.com/sequelize/sequelize\\\" target=\\\"blank\\\">Sequelize</a> the <strong>Model</strong> defines a table in the database. Instances of this class represent a database row.\\n      Firstly, we need at least one entity:\\n    </p>\\n    <span class=\\\"filename\\\">cats/cat.entity.ts</span>\\n    <pre><code class=\\\"language-typescript\\\">{{ catEntity }}</code></pre>\\n    <p>\\n      The <code>Cat</code> entity belongs to the <code>cats</code> directory.\\n      This directory represents the <code>CatsModule</code>.\\n      Now it's time to create a <strong>Repository</strong> component:\\n    </p>\\n    <span class=\\\"filename\\\">cats.providers.ts</span>\\n    <pre><code class=\\\"language-typescript\\\">{{ catsProviders }}</code></pre>\\n    <blockquote>\\n        <strong>Notice</strong> In the real-world applications you should avoid <strong>magic strings</strong>. Both <code>CatsRepository</code> and <code>SequelizeToken</code> should be kept in the separated <code>constants.ts</code> file.\\n     </blockquote>\\n     <p>\\n       In Sequelize, we use static methods to manipulate the data, and thus we created an <strong>alias</strong> here.\\n     </p>\\n     <p>\\n       Now we can inject the <code>CatsRepository</code> to the <code>CatsService</code> using the <code>@Inject()</code> decorator:\\n     </p>\\n     <span class=\\\"filename\\\">cats.service.ts</span>\\n    <pre><code class=\\\"language-typescript\\\">{{ catsService }}</code></pre>\\n    <p>\\n      The database connection is <strong>asynchronous</strong>, but Nest makes this process completely invisible for the end-user.\\n      The <code>CatsRepository</code> provider is waiting for the db connection, and the <code>CatsService</code> is delayed until repository is ready to use.\\n      The entire application can start when each class is instantiated.\\n    </p>\\n    <p>\\n      Here is a final <code>CatsModule</code>:\\n    </p>\\n    <span class=\\\"filename\\\">cats.module.ts</span>\\n    <pre><code class=\\\"language-typescript\\\">{{ catsModule }}</code></pre>\\n    <blockquote class=\\\"warning\\\">\\n        <strong>Hint</strong> Don't forget to import the <code>CatsModule</code> into the root <code>ApplicationModule</code>.\\n     </blockquote>\\n  </div>\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-sql-sequelize',\n  templateUrl: './sql-sequelize.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SqlSequelizeComponent extends BasePageComponent {\n    get dependencies() {\n      return `\n  $ npm install --save sequelize sequelize-typescript mysql2\n  $ npm install --save-dev @types/sequelize`;\n    }\n\n    get databaseProviders() {\n      return `\nimport { Sequelize } from 'sequelize-typescript';\nimport { Cat } from '../cats/cat.entity';\n\nexport const databaseProviders = [\n  {\n    provide: 'SequelizeToken',\n    useFactory: async () => {\n      const sequelize = new Sequelize({\n        dialect: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: 'root',\n        password: 'password',\n        database: 'nest',\n      });\n      sequelize.addModels([Cat]);\n      await sequelize.sync();\n      return sequelize;\n    },\n  },\n];`;\n    }\n\n    get databaseModule() {\n      return `\n  import { Module } from '@nestjs/common';\n  import { databaseProviders } from './database.providers';\n\n  @Module({\n    providers: [...databaseProviders],\n    exports: [...databaseProviders],\n  })\n  export class DatabaseModule {}`;\n    }\n\n    get catEntity() {\n      return `\nimport { Table, Column, Model } from 'sequelize-typescript';\n\n@Table\nexport class Cat extends Model<Cat> {\n  @Column\n  name: string;\n\n  @Column\n  age: number;\n\n  @Column\n  breed: string;\n}`;\n    }\n\n    get catsProviders() {\n      return `\nimport { Cat } from './cat.entity';\n\nexport const catsProviders = [\n  {\n    provide: 'CatsRepository',\n    useValue: Cat,\n  },\n];`;\n    }\n\n    get catsService() {\n      return `\nimport { Component, Inject } from '@nestjs/common';\nimport { CreateCatDto } from './dto/create-cat.dto';\nimport { Cat } from './cat.entity';\n\n@Component()\nexport class CatsService {\n  constructor(\n    @Inject('CatsRepository') private readonly catsRepository: typeof Cat) {}\n\n  async findAll(): Promise<Cat[]> {\n    return await this.catsRepository.findAll<Cat>();\n  }\n}`;\n    }\n\n    get catsModule() {\n      return `\nimport { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { catsProviders } from './cats.providers';\nimport { DatabaseModule } from '../database/database.module';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [CatsController],\n  providers: [\n    CatsService,\n    ...catsProviders,\n  ],\n})\nexport class CatsModule {}`;\n    }\n  }\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>SQL (TypeORM)</h3>\\n  <h5>This chapter applies only to TypeScript</h5>\\n  <blockquote>\\n    <strong>Warning</strong> In this article, you'll learn how to create a <code>DatabaseModule</code>\\n    based on the <strong>TypeORM</strong> package from scratch using custom providers mechanism. As a consequence, this solution\\n    contains a lot of overhead that you can omit using ready to use and available out-of-the-box dedicated\\n    <code>@nestjs/typeorm</code> package. To learn more, see <a routerLink=\\\"/techniques/sql\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    <a href=\\\"https://github.com/typeorm/typeorm\\\" target=\\\"blank\\\">TypeORM</a> is definitely the most mature Object Relational Mapper (ORM) available in the node.js world.\\n    Since it's written in TypeScript, it works pretty well with the Nest framework.\\n    To start the adventure with this library we have to install all required dependencies:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ dependencies }}</code></pre>\\n  <p>\\n    The first step we need to do is to establish the connection with our database using <code>createConnection()</code> function imported from the <code>typeorm</code> package.\\n    The <code>createConnection()</code> function returns a <code>Promise</code>, therefore we have to create an <a routerLink=\\\"/fundamentals/async-components\\\">async provider</a>.\\n  </p>\\n  <span class=\\\"filename\\\">database.providers.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ databaseProviders }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> Following best practices, we declared the custom provider in the separated file which has a <code>*.providers.ts</code> suffix.\\n   </blockquote>\\n   <p>\\n     Then, we need to export these providers to make them <strong>accessible</strong> for the rest part of the application.\\n  </p>\\n  <span class=\\\"filename\\\">database.module.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ databaseModule }}</code></pre>\\n  <p>\\n    Now we can inject the <code>Connection</code> object using <code>@Inject()</code> decorator.\\n    Each class that would depend on the <code>Connection</code> async provider will wait until a <code>Promise</code> is resolved.\\n  </p>\\n  <h4>Repository pattern</h4>\\n  <p>\\n    The <a href=\\\"https://github.com/typeorm/typeorm\\\" target=\\\"blank\\\">TypeORM</a> supports the repository design pattern, thus each entity has its own Repository. These repositories can be obtained from the database connection.\\n  </p>\\n  <p>\\n    But firstly, we need at least one entity. We are going to reuse the <code>Photo</code> entity from the offical documentation.\\n  </p>\\n  <span class=\\\"filename\\\">photo/photo.entity.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ photoEntity }}</code></pre>\\n  <p>\\n    The <code>Photo</code> entity belongs to the <code>photo</code> directory.\\n    This directory represents the <code>PhotoModule</code>.\\n    Now, let's create a <strong>Repository</strong> provider:\\n  </p>\\n  <span class=\\\"filename\\\">photo.providers.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ photoProviders }}</code></pre>\\n  <blockquote>\\n      <strong>Notice</strong> In the real-world applications you should avoid <strong>magic strings</strong>. Both <code>PhotoRepositoryToken</code> and <code>DbConnectionToken</code> should be kept in the separated <code>constants.ts</code> file. \\n   </blockquote>\\n   <p>\\n     Now we can inject the <code>PhotoRepository</code> to the <code>PhotoService</code> using the <code>@Inject()</code> decorator:\\n   </p>\\n   <span class=\\\"filename\\\">photo.service.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ photoService }}</code></pre>\\n  <p>\\n    The database connection is <strong>asynchronous</strong>, but Nest makes this process completely invisible for the end-user.\\n    The <code>PhotoRepository</code> is waiting for the db connection, and the <code>PhotoService</code> is delayed until repository is ready to use.\\n    The entire application can start when each class is instantiated.\\n  </p>\\n  <p>\\n    Here is a final <code>PhotoModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">photo.module.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ photoModule }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n      <strong>Hint</strong> Don't forget to import the <code>PhotoModule</code> into the root <code>ApplicationModule</code>.\\n   </blockquote>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-sql-typeorm',\n  templateUrl: './sql-typeorm.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SqlTypeormComponent extends BasePageComponent {\n  get dependencies() {\n    return `\n$ npm install --save typeorm mysql`;\n  }\n\n  get databaseProviders() {\n    return `\nimport { createConnection } from 'typeorm';\n\nexport const databaseProviders = [\n  {\n    provide: 'DbConnectionToken',\n    useFactory: async () => await createConnection({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'root',\n      database: 'test',\n      entities: [\n          __dirname + '/../**/*.entity{.ts,.js}',\n      ],\n      synchronize: true,\n    }),\n  },\n];`;\n  }\n\n  get databaseModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}`;\n  }\n\n  get photoEntity() {\n    return `\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Photo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 500 })\n  name: string;\n\n  @Column('text')\n  description: string;\n\n  @Column()\n  filename: string;\n\n  @Column('int')\n  views: number;\n\n  @Column()\n  isPublished: boolean;\n}`;\n  }\n\n  get photoProviders() {\n    return `\nimport { Connection, Repository } from 'typeorm';\nimport { Photo } from './photo.entity';\n\nexport const photoProviders = [\n  {\n    provide: 'PhotoRepositoryToken',\n    useFactory: (connection: Connection) => connection.getRepository(Photo),\n    inject: ['DbConnectionToken'],\n  },\n];`;\n  }\n\n  get photoService() {\n    return `\nimport { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Photo } from './photo.entity';\n\n@Injectable()\nexport class PhotoService {\n  constructor(\n    @Inject('PhotoRepositoryToken')\n    private readonly photoRepository: Repository<Photo>,\n  ) {}\n\n  async findAll(): Promise<Photo[]> {\n    return await this.photoRepository.find();\n  }\n}`;\n  }\n\n  get photoModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { photoProviders } from './photo.providers';\nimport { PhotoService } from './photo.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [\n    ...photoProviders,\n    PhotoService,\n  ],\n})\nexport class PhotoModule {}`\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>OpenAPI (Swagger)</h3>\\n  <h5>This chapter applies only to TypeScript</h5>\\n  <p>\\n    The <a href=\\\"https://swagger.io/specification/\\\" target=\\\"blank\\\">OpenAPI</a> (Swagger) specification is a powerful\\n    definition format to describe RESTful APIs.\\n    Nest provides a dedicated <a href=\\\"https://github.com/nestjs/swagger\\\" target=\\\"blank\\\">module</a> to work with it.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly you have to install the module:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n$ npm install --save @nestjs/swagger</code></pre>\\n  <h4>Bootstrap</h4>\\n  <p>\\n    Once the installation process is done, open your bootstrap file (mostly <code>main.ts</code>) and initialize the\\n    Swagger using <code>SwaggerModule</code> class:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ bootstrapFile }}</code></pre>\\n  <p>\\n    The <code>DocumentBuilder</code> is a helper class that helps to structure a base document for the <code>SwaggerModule</code>.\\n    It contains several methods that allow setting such properties like title, description, version, and so on.\\n  </p>\\n  <p>\\n    In order to create a full document (with defined HTTP routes) we use the <code>createDocument()</code> method of\\n    the <code>SwaggerModule</code> class.\\n    This method takes two arguments, the application instance and the base Swagger options respectively.\\n  </p>\\n  <p>\\n    The last step is to call <code>setup()</code>. It accepts sequentially <strong>(1)</strong> path to mount the\\n    Swagger,\\n    <strong>(2)</strong> application instance, and <strong>(3)</strong> the document that describes the Nest\\n    application.\\n  </p>\\n  <p>\\n    Now you can run the following command to start the HTTP server:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm run start</code></pre>\\n  <p>\\n    While the application is running, open your browser and navigate to <code>http://localhost:3000/api</code>. You\\n    should see similar page:\\n  </p>\\n  <figure><img src=\\\"/assets/swagger1.png\\\" /></figure>\\n  <p>\\n    The <code>SwaggerModule</code> automatically reflects all of your endpoints.\\n    In the background, it's making use of <code>swagger-ui-express</code> and creates a live documentation.\\n  </p>\\n  <h4>Body, query, path parameters</h4>\\n  <p>\\n    During the examination of the defined controllers, the <code>SwaggerModule</code> is looking for all used <code>@Body()</code>,\\n    <code>@Query()</code>, and <code>@Param()</code> decorators in the route handlers.\\n    Thanks to them, the valid document can be created.\\n  </p>\\n  <p>\\n    Moreover, the module creates the <strong>models definitions</strong> by taking advantage of the <strong>reflection</strong>.\\n    Take a look at the following code:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ postHandler }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> To implicitly set the body definition you can use the <code>@ApiImplicitBody()</code>\\n    decorator (<code>@nestjs/swagger</code> package).\\n  </blockquote>\\n  <p>\\n    Based on the <code>CreateCatDto</code>, the module definition will be created:\\n  </p>\\n  <figure><img src=\\\"/assets/swagger-dto.png\\\" /></figure>\\n  <p>\\n    As you can see, the definition's empty although the class has few declared properties.\\n    In order to make the class properties accessible to the <code>SwaggerModule</code>, we have to mark all of them\\n    with <code>@ApiModelProperty()</code> decorator:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatDto }}</code></pre>\\n  <p>\\n    Let's open the browser and verify the generated <code>CreateCatDto</code> model:\\n  </p>\\n  <figure><img src=\\\"/assets/swagger-dto2.png\\\" /></figure>\\n  <p>\\n    The <code>@ApiModelProperty()</code> decorator accepts options object:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ apiModelProperty }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Hint</strong> There's an <code>@ApiModelPropertyOptional()</code> shortcut decorator which helps to avoid\\n    continuous typing <code>{{ apiModelPropertyOptional }}</code>.\\n  </blockquote>\\n  <p>\\n    Thanks to that we can simply set the <strong>default</strong> value, determine whether the property is required or\\n    explicitly set the type.\\n  </p>\\n  <h4>Multiple specifications</h4>\\n  <p>\\n    Swagger module also provides a way to support multiple specifications. In other words, you can\\n    serve different documentations with different <code>SwaggerUI</code> on different endpoints.\\n  </p>\\n  <p>\\n    In order to allow <code>SwaggerModule</code> to support multi-spec, your\\n    application must be written with modular approach.\\n    The <code>createDocument()</code> method takes in a 3rd argument: <code>extraOptions</code> which is an object\\n    where a property <code>include</code> expects an array of modules.\\n  </p>\\n  <p>\\n    You can setup Multiple Specifications support as shown below:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ secondaryBootstrapFile }}</code></pre>\\n  <p>\\n    Now you can start your server with the following command:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm run start</code></pre>\\n  <p>\\n    Navigate to <code>http://localhost:3000/api/cats</code> to see SwaggerUI for your Cats:\\n  </p>\\n  <figure><img src=\\\"/assets/swagger-cats.png\\\" /></figure>\\n  <p>\\n    While <code>http://localhost:3000/api/docs</code> will expose a SwaggerUI for your Dogs:\\n  </p>\\n  <figure><img src=\\\"/assets/swagger-dogs.png\\\" /></figure>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> You have to construct a <strong>SwaggerOptions</strong> with <code>DocumentBuilder</code>,\\n    run <code>createDocument()</code> against newly constructed <code>options</code> then immediately \\\"serve\\\" it with\\n    <code>setup()</code>\\n    before you can start working on a second <strong>SwaggerOptions</strong> for a second Swagger Specification. This\\n    specific order is to\\n    prevent Swagger configurations being overriden by different options.\\n  </blockquote>\\n  <h4>Working with enums</h4>\\n  <p>\\n    To be able for <code>SwaggerModule</code> to identify an <code>Enum</code>, we have to manually set the <code>enum</code>\\n    property on <code>@ApiModelProperty</code> with an array of values..\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ enumProperty }}</code></pre>\\n  <p>\\n    <code>UserRole</code> enum can be defined as following snippet:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ userRoleEnum }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Note</strong> The above usage can only be applied to a <strong>property</strong> as part of a <strong>model\\n      definition.</strong>\\n  </blockquote>\\n  <p>\\n    Enums can be used by itself with the <code>@Query()</code> parameter decorator in combination with the <code>@ApiImplicitQuery()</code>\\n    decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ enumImplicitQuery }}</code></pre>\\n  <figure><img src=\\\"/assets/enum_query.gif\\\" /></figure>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Hint</strong> <code>enum</code> and <code>isArray</code> can also be used in combination in <code>@ApiImplicitQuery()</code>\\n  </blockquote>\\n  <p>\\n    With <code>isArray</code> set to <strong>true</strong>, the <code>enum</code> now can be selected as a <strong>multi-select</strong>:\\n  </p>\\n  <figure><img src=\\\"/assets/enum_query_array.gif\\\" /></figure>\\n  <h4>Working with arrays</h4>\\n  <p>\\n    We have to manually indicate a type when the property is\\n    actually an array:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ arrayProperty }}</code></pre>\\n  <p>\\n    Simply put your type as the first element of an array (as shown above) or set an <code>isArray</code> property to\\n    <code>true</code>.\\n  </p>\\n  <h4>Tags</h4>\\n  <p>\\n    At the beginning, we created a <code>cats</code> tag (by making use of <code>DocumentBuilder</code>).\\n    In order to attach the controller to the specified tag, we need to use <code>@ApiUseTags(...tags)</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useTags }}</code></pre>\\n  <h4>Responses</h4>\\n  <p>\\n    To define a custom HTTP response, we use <code>@ApiResponse()</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ response }}</code></pre>\\n  <p>\\n    Same as common HTTP exceptions defined in <a routerLink=\\\"/exception-filters\\\">Exception\\n      Filters</a> section,\\n    Nest also provides a set of usable <strong>API responses</strong> that inherits from the core <code>@ApiResponse</code>\\n    decorator:\\n  </p>\\n  <ul>\\n    <li>\\n      <code>@ApiOkResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiCreatedResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiBadRequestResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiUnauthorizedResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiNotFoundResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiForbiddenResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiMethodNotAllowedResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiNotAcceptableResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiRequestTimeoutResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiConflictResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiGoneResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiPayloadTooLargeResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiUnsupportedMediaTypeResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiUnprocessableEntityResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiInternalServerErrorResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiNotImplementedResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiBadGatewayResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiServiceUnavailableResponse()</code>\\n    </li>\\n    <li>\\n      <code>@ApiGatewayTimeoutResponse()</code>\\n    </li>\\n  </ul>\\n  <p>\\n    In addition to the available HTTP exceptions, Nest provides short-hand decorators for:\\n    <code>HttpStatus.OK</code>, <code>HttpStatus.CREATED</code> and <code>HttpStatus.METHOD_NOT_ALLOWED</code>\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ customResponse }}</code></pre>\\n  <h4>Authentication</h4>\\n  <p>\\n    You can enable the bearer authorization using <code>addBearerAuth()</code> method of the <code>DocumentBuilder</code>\\n    class.\\n    Then to restrict the chosen route or entire controller, use <code>@ApiBearerAuth()</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ bearerAuth }}</code></pre>\\n  <p>\\n    That's how the OpenAPI documentation should look like now:\\n  </p>\\n  <figure><img src=\\\"/assets/swagger-auth.gif\\\" /></figure>\\n\\n  <h4>File upload</h4>\\n  <p>You can enable file upload for a specific method with the <code>@ApiImplicitFile</code> decorator together with\\n    <code>@ApiConsumes()</code>. Here's a full example using <a routerLink=\\\"/techniques/file-upload\\\">File Upload</a>\\n    technique:</p>\\n  <pre><code class=\\\"language-typescript\\\">{{ fileUpload }}</code></pre>\\n  <h4>Decorators</h4>\\n  <p>\\n    All of the available OpenAPI decorators has an <code>Api</code> prefix to be clearly distinguishable from the core\\n    decorators.\\n    Below is a full list of the exported decorators with a defined use-level (where might be applied).\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>@ApiOperation()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiResponse()</code></td>\\n      <td>Method / Controller</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiProduces()</code></td>\\n      <td>Method / Controller</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiConsumes()</code></td>\\n      <td>Method / Controller</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiBearerAuth()</code></td>\\n      <td>Method / Controller</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiOAuth2Auth()</code></td>\\n      <td>Method / Controller</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiImplicitBody()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiImplicitParam()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiImplicitQuery()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiImplicitHeader()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiImplicitFile()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiExcludeEndpoint()</code></td>\\n      <td>Method</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiUseTags()</code></td>\\n      <td>Method / Controller</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiModelProperty()</code></td>\\n      <td>Model</td>\\n    </tr>\\n    <tr>\\n      <td><code>@ApiModelPropertyOptional()</code></td>\\n      <td>Model</td>\\n    </tr>\\n  </table>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/11-swagger\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-swagger',\n  templateUrl: './swagger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwaggerComponent extends BasePageComponent {\n  get bootstrapFile() {\n    return `\nimport { NestFactory } from '@nestjs/core';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\nimport { ApplicationModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n\n  const options = new DocumentBuilder()\n    .setTitle('Cats example')\n    .setDescription('The cats API description')\n    .setVersion('1.0')\n    .addTag('cats')\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup('api', app, document);\n\n  await app.listen(3001);\n}\nbootstrap();`;\n  }\n\n  get secondaryBootstrapFile() {\n    return `\nimport { NestFactory } from '@nestjs/core';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\nimport { ApplicationModule } from './app.module';\n\n// imports CatsModule and DogsModule;\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n\n  /**\n   * createDocument(application, configurationOptions, extraOptions);\n   *\n   * createDocument method takes in an optional 3rd argument \"extraOptions\"\n   * which is an object with \"include\" property where you can pass an Array\n   * of Modules that you want to include in that Swagger Specification\n   * E.g: CatsModule and DogsModule will have two separate Swagger Specifications which\n   * will be exposed on two different SwaggerUI with two different endpoints.\n   */\n\n  const options = new DocumentBuilder()\n    .setTitle('Cats example')\n    .setDescription('The cats API description')\n    .setVersion('1.0')\n    .addTag('cats')\n    .build();\n  const catDocument = SwaggerModule.createDocument(app, options, { include: [CatsModule] });\n  SwaggerModule.setup('api/cats', app, catDocument);\n\n  const secondOptions = new DocumentBuilder()\n    .setTitle('Dogs example')\n    .setDescription('The dogs API description')\n    .setVersion('1.0')\n    .addTag('dogs')\n    .build();\n  const dogDocument = SwaggerModule.createDocument(app, secondOptions, { include: [DogsModule] });\n  SwaggerModule.setup('api/dogs', app, dogDocument);\n\n  await app.listen(3001);\n}\nbootstrap();`;\n  }\n\n  get postHandler() {\n    return `\n@Post()\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get postHandlerJs() {\n    return `\n@Post()\n@Bind(Body())\n@ApiImplicitBody({ name: 'CreateCatDto', type: CreateCatDto })\nasync create(createCatDto) {\n  this.catsService.create(createCatDto);\n}\n`;\n  }\n\n  get createCatDto() {\n    return `\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class CreateCatDto {\n  @ApiModelProperty()\n  readonly name: string;\n\n  @ApiModelProperty()\n  readonly age: number;\n\n  @ApiModelProperty()\n  readonly breed: string;\n}`;\n  }\n\n  get createCatDtoJs() {\n    return `\nimport { ApiModelProperty } from '@nestjs/swagger';\n\nexport class CreateCatDto {\n  @ApiModelProperty({ type: String })\n  readonly name;\n\n  @ApiModelProperty({ type: Number })\n  readonly age;\n\n  @ApiModelProperty({ type: String })\n  readonly breed;\n}`;\n  }\n\n  get apiModelProperty() {\n    return `\nexport declare const ApiModelProperty: (metadata?: {\n  description?: string;\n  required?: boolean;\n  type?: any;\n  isArray?: boolean;\n  collectionFormat?: string;\n  default?: any;\n  enum?: SwaggerEnumType;\n  format?: string;\n  multipleOf?: number;\n  maximum?: number;\n  exclusiveMaximum?: number;\n  minimum?: number;\n  exclusiveMinimum?: number;\n  maxLength?: number;\n  minLength?: number;\n  pattern?: string;\n  maxItems?: number;\n  minItems?: number;\n  uniqueItems?: boolean;\n  maxProperties?: number;\n  minProperties?: number;\n  readOnly?: boolean;\n  xml?: any;\n  example?: any;\n}) => PropertyDecorator;`;\n  }\n\n  get apiModelPropertyOptional() {\n    return `\n@ApiModelProperty({ required: false })`;\n  }\n\n  get arrayProperty() {\n    return `\n@ApiModelProperty({ type: [String] })\nreadonly names: string[];`;\n  }\n\n  get useTags() {\n    return `\n@ApiUseTags('cats')\n@Controller('cats')\nexport class CatsController {}`;\n  }\n\n  get response() {\n    return `\n@Post()\n@ApiResponse({ status: 201, description: 'The record has been successfully created.'})\n@ApiResponse({ status: 403, description: 'Forbidden.'})\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get customResponse() {\n    return `\n@Post()\n@ApiCreatedResponse({ description: 'The record has been successfully created.'})\n@ApiForbiddenResponse({ description: 'Forbidden.'})\nasync create(@Body() createCatDto: CreateCatDto) {\n  this.catsService.create(createCatDto);\n}`;\n  }\n\n  get bearerAuth() {\n    return `\n@ApiUseTags('cats')\n@ApiBearerAuth()\n@Controller('cats')\nexport class CatsController {}`;\n  }\n\n  get fileUpload() {\n    return `\n@UseInterceptors(FileInterceptor('file'))\n@ApiConsumes('multipart/form-data')\n@ApiImplicitFile({ name: 'file', required: true, description: 'List of cats' })\nuploadFile(@UploadedFile() file) {}`;\n  }\n\n  get apiImplicitQuery() {\n    return `\nexport const ApiImplicitQuery = (metadata: {\n  name: string;\n  description?: string;\n  required?: boolean;\n  type?: 'String' | 'Number' | 'Boolean' | any;\n  isArray?: boolean;\n  enum?: SwaggerEnumType;\n  collectionFormat?: 'csv' | 'ssv' | 'tsv' | 'pipes' | 'multi';\n}): MethodDecorator`;\n  }\n\n  get enumImplicitQuery() {\n    return `\n@ApiImplicitQuery({ name: 'role', enum: ['Admin', 'Moderator', 'User'] })\nasync filterByRole(@Query('role') role: UserRole = UserRole.User) {\n  // role returns: UserRole.Admin, UserRole.Moderator OR UserRole.User\n}`;\n  }\n\n  get enumProperty() {\n    return `\n@ApiModelProperty({ enum: ['Admin', 'Moderator', 'User']})\nrole: UserRole;`;\n  }\n\n  get userRoleEnum() {\n    return `\nexport enum UserRole {\n  Admin = 'Admin',\n  Moderator = 'Moderator',\n  User = 'User'\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Support</h3>\\n  <p>\\n    Nest is an MIT-licensed open source project with its ongoing development made possible thanks to the support by the community. \\n    This framework is a result of the long road, full of sleepless nights, working <strong>after hours</strong>, and busy weekends. \\n  </p>\\n  <p>  \\n    Nest doesn't have a large company that sits behind and is continuously paying for hours spent on the development.\\n    I fully rely on the <strong>goodness</strong> ❤️ of the people.\\n    However, I would love to make this framework even more <strong>powerful</strong>, to be fully focused on delivering you great solutions that make coding process enjoyable:\\n    In order to help me, I run few supporting platforms:\\n  </p>\\n  <ul>\\n    <li>become a backer or sponsor on <a href=\\\"https://opencollective.com/nest\\\" target=\\\"blank\\\">OpenCollective</a></li>\\n    <li>use <a href=\\\"https://paypal.me/kamilmysliwiec\\\" target=\\\"blank\\\">PayPal</a> to send a one-time donation</li>\\n    <li>or reach me directly: <a href=\\\"mailto:mail@kamilmysliwiec.com\\\">mail@kamilmysliwiec.com</a></li>\\n  </ul>\\n  <p>\\n    If you fell in love with Nest, or you run a business which is using Nest, consider sponsoring its development to ensure that the project which your product relies on is <strong>actively maintained</strong> and improved.\\n    Also, your support could help me to work more on content that benefits whole Nest community, writing either educational blog posts or recording videos.\\n  </p>\\n</div>\"","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../page/page.component';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SupportComponent extends BasePageComponent {}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Authentication</h3>\\n  <p>\\n    Authentication is an\\n    <strong>essential</strong> part of most existing applications. There are a lot of different approaches, strategies,\\n    and\\n    ways to handle user authorization. What we eventually decide to use depends on the particular application\\n    requirements\\n    and is strongly associated with their needs.\\n  </p>\\n  <p>\\n    <a href=\\\"https://github.com/jaredhanson/passport\\\" target=\\\"blank\\\">Passport</a> is the most popular node.js\\n    authentication\\n    library, well-known by community and successively used in many production applications. It's really simple to\\n    integrate\\n    this tool with\\n    <strong>Nest</strong> framework using dedicated passport utilities. For demonstration purposes, we'll set up both\\n    <a href=\\\"https://github.com/jaredhanson/passport-http-bearer\\\" target=\\\"blank\\\">passport-http-bearer</a>\\n    and <a href=\\\"https://github.com/themikenicholson/passport-jwt\\\" target=\\\"blank\\\">passport-jwt</a> strategy.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    In order to start the adventure with this library, we have to install a few fundamental packages. Additionally,\\n    we'll start\\n    by implementing the bearer strategy, and thus we need to install <code>passport-http-bearer</code> package.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">{{ dependencies }}</code></pre>\\n  <h4>Bearer strategy</h4>\\n  <p>\\n    As has been said already, firstly, we'll implement <a href=\\\"https://github.com/jaredhanson/passport-http-bearer\\\"\\n      target=\\\"blank\\\">passport-http-bearer</a>\\n    library. Bearer tokens are typically used protect API endpoints, and are often issued using OAuth 2.0. The HTTP\\n    Bearer authentication\\n    strategy authenticates users using a bearer token.\\n  </p>\\n  <p>\\n    Let's start by creating the <code>AuthService</code> class that will expose a single method,\\n    <code>validateUser()</code> which responsibility is to query user using provided bearer <strong>token</strong>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'auth.service' | extension: authServiceT.isJsActive }}\\n    <app-tabs #authServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"authServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authService }}</code></pre>\\n  <pre [class.hide]=\\\"!authServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authServiceJs }}</code></pre>\\n  <p>\\n    The <code>validateUser()</code> method takes <code>token</code> as an argument. This token is extracted from <code>Authorization</code>\\n    header\\n    that has been passed along with HTTP request. The <code>findOneByToken()</code> method's responsibility is to\\n    validate\\n    if passed token truly exists and is associated with any registered account in the database.\\n  </p>\\n  <p>\\n    Once <code>AuthService</code> class is done, we have to create a corresponding <strong>strategy</strong> that\\n    passport\\n    will use to authenticate requests.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'http.strategy' | extension: httpStrategyT.isJsActive }}\\n    <app-tabs #httpStrategyT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"httpStrategyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ httpStrategy }}</code></pre>\\n  <pre [class.hide]=\\\"!httpStrategyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ httpStrategyJs }}</code></pre>\\n  <p>\\n    The <code>HttpStrategy</code> uses <code>AuthService</code> to validate the token. When the token is valid,\\n    passport\\n    allows further request processing. Otherwise, the user receives <code>401 Unauthorized</code> response.\\n  </p>\\n  <p>\\n    Afterward, we can create the <code>AuthModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'auth.module' | extension: authModuleT.isJsActive }}\\n    <app-tabs #authModuleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"authModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authModule }}</code></pre>\\n  <pre [class.hide]=\\\"!authModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authModuleJs }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> In order to make use of <code>UsersService</code>, the <code>AuthModule</code> imports\\n    <code>UsersModule</code>.\\n    The internal implementation is unimportant here and heavily depends on your technical project requirements (e.g.\\n    database).\\n  </blockquote>\\n  <p>\\n    Then, you can simply use the <code>AuthGuard</code> wherever you want to enable the authentication.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useGuards }}</code></pre>\\n  <p>\\n    The <code>@AuthGuard()</code> is imported from <code>@nestjs/passport</code> package. Also, <code>bearer</code> is\\n    a\\n    name of the strategy that passport will make use of. Let us check if endpoint is effectively secured. To ensure\\n    that\\n    everything work correctly, we'll perform a GET request to the <code>users</code> resource without setting a valid\\n    token.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ curl localhost:3000/users</code></pre>\\n  <p>\\n    Application should respond with <code>401 Unauthorized</code> status code and following response body:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n\\\"statusCode\\\": 401,\\n\\\"error\\\": \\\"Unauthorized\\\"</code></pre>\\n  <p>\\n    If you create a valid token beforehand and pass it along with the HTTP request, the application will respectively\\n    identify\\n    a user, attach its object to the request, and allow further request processing.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ curl localhost:3000/users -H \\\"Authorization: Bearer TOKEN\\\"</code></pre>\\n  <h4>Default strategy</h4>\\n  <p>\\n    To determine default passport behavior, you can register the <code>PassportModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'auth.module' | extension: passportModuleT.isJsActive }}\\n    <app-tabs #passportModuleT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"passportModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ passportModule }}</code></pre>\\n  <pre [class.hide]=\\\"!passportModuleT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ passportModuleJs }}</code></pre>\\n  <p>\\n    Once you set <code>defaultStrategy</code>, you no longer need to manually pass the strategy name in the <code>@AuthGuard()</code>\\n    decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useGuardsDefault }}</code></pre>\\n  <h4>User object</h4>\\n  <p>\\n    When request is validated correctly, the user entity will be attached to the request object and accessible through\\n    <code>user</code> property (e.g. <code>req.user</code>). To change the property name, set <code>property</code> of\\n    the\\n    options object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ userObject }}</code></pre>\\n  <h4>Customize passport</h4>\\n  <p>\\n    Depending on the strategy that is being used, passport takes a bunch of properties that shape the library behavior.\\n    Use <code>register()</code> method\\n    to pass down options object directly to the passport instance.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ passportOptions }}</code></pre>\\n  <h4>Inheritance</h4>\\n  <p>\\n    In most cases, <code>AuthGuard</code> will be sufficient. However, in order to adjust either default error handling\\n    or\\n    authentication logic, you can extend the class and override methods within a subclass.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ inheritance }}</code></pre>\\n  <h4>JWT strategy</h4>\\n  <p>\\n    A second described approach is to authenticate endpoints using a <strong>JSON web token</strong> (JWT). To\\n    implement\\n    a JWT-based authentication flow, we need to install required packages.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm install --save @nestjs/jwt passport-jwt</code></pre>\\n  <p>\\n    Once the installation process is done, we can focus on <code>AuthService</code> class. We need to switch from the\\n    token\\n    validation to a payload-based validation logic as well as provide a way to create a JWT token for the particular\\n    user\\n    which then could be used to authenticate the incoming request.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'auth.service' | extension: authServiceJwtT.isJsActive }}\\n    <app-tabs #authServiceJwtT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"authServiceJwtT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authServiceJwt }}</code></pre>\\n  <pre [class.hide]=\\\"!authServiceJwtT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authServiceJwtJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    The <code>JwtPayload</code> is an interface with a single property, an <code>email</code>, and represents decoded\\n    JWT\\n    token.\\n  </blockquote>\\n  <p>\\n    In order to simplify an example, we created a fake user. The second step is to create a corresponding <code>JwtStrategy</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'jwt.strategy' | extension: jwtStrategyT.isJsActive }}\\n    <app-tabs #jwtStrategyT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"jwtStrategyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ jwtStrategy }}</code></pre>\\n  <pre [class.hide]=\\\"!jwtStrategyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ jwtStrategyJs }}</code></pre>\\n  <p>\\n    The <code>JwtStrategy</code> uses <code>AuthService</code> to validate the decoded payload. When the payload is\\n    valid\\n    (user exists), passport allows further request processing. Otherwise, the user receives <code>401 (Unauthorized)</code>\\n    response.\\n  </p>\\n  <p>\\n    Afterward, we can move to the <code>AuthModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'auth.module' | extension: authModuleJwtT.isJsActive }}\\n    <app-tabs #authModuleJwtT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"authModuleJwtT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authModuleJwt }}</code></pre>\\n  <pre [class.hide]=\\\"!authModuleJwtT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ authModuleJwtJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> In order to make use of <code>UsersService</code>, the <code>AuthModule</code> imports <code>UsersModule</code>.\\n    The internal implementation is unimportant here. Besides, <code>JwtModule</code> has been registered statically. To\\n    switch\\n    to asynchronous configuration, read more <a href=\\\"https://github.com/nestjs/passport\\\" target=\\\"blank\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    Both expiration time and <code>secretKey</code> are hardcoded (in a real-world application you should rather\\n    consider\\n    using environment variables).\\n  </p>\\n  <p>\\n    Then, you can simply use the <code>AuthGuard</code> wherever you want to enable the authentication.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useGuardsJwt }}</code></pre>\\n  <p>\\n    Let us check if endpoint is effectively secured. To ensure that everything work correctly, we'll perform a GET\\n    request to\\n    the <code>users</code> resource without setting a valid token.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ curl localhost:3000/users</code></pre>\\n  <p>\\n    Application should respond with <code>401 Unauthorized</code> status code and following response body:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n\\\"statusCode\\\": 401,\\n\\\"error\\\": \\\"Unauthorized\\\"</code></pre>\\n  <p>\\n    If you create a valid token beforehand and pass it along with the HTTP request, the application will respectively\\n    identify\\n    a user, attach its object to the request, and allow further request processing.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ curl localhost:3000/users -H \\\"Authorization: Bearer TOKEN\\\"</code></pre>\\n  <h4>Example</h4>\\n  <p>\\n    A full working example is available\\n    <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/19-auth\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n  <h4>Multiple strategies</h4>\\n  <p>\\n    Usually, you'll end up with single strategy reused across the whole application. However, there might be cases when\\n    you'd\\n    prefer to use different strategies for different scopes. In the case of multiple strategies, pass the second\\n    argument\\n    to the <code>PassportStrategy</code> function. Generally, this argument is a name of the strategy.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ multipleStrategies }}</code></pre>\\n  <p>\\n    In above example, the <code>jwt</code> becomes the name of the <code>JwtStrategy</code>. Afterward, you can use\\n    <code>@AuthGuard('jwt')</code>,\\n    just the same as before.\\n  </p>\\n  <h4>GraphQL</h4>\\n  <p>\\n    In order to use <code>AuthGuard</code> together with <a routerLink=\\\"/graphql/quick-start\\\">GraphQL</a>, you have to\\n    extend the built-in <code>AuthGuard</code> class and override <code>getRequest()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ graphQl }}</code></pre>\\n  <p>\\n    We assumed that <code>req</code> (request) has been passed as a part of the context value.\\n    We have to set this behavior in the module settings.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ requestInContext }}</code></pre>\\n  <p>\\n    And now, context value will have <code>req</code> property.\\n  </p>\\n\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthenticationComponent extends BasePageComponent {\n  get dependencies() {\n    return `\n$ npm install --save @nestjs/passport passport passport-http-bearer`;\n  }\n\n  get authService() {\n    return `\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly usersService: UsersService) {}\n\n  async validateUser(token: string): Promise<any> {\n    // Validate if token passed along with HTTP request\n    // is associated with any registered account in the database\n    return await this.usersService.findOneByToken(token);\n  }\n}`;\n  }\n\n  get authServiceJs() {\n    return `\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\n@Dependencies(UsersService)\nexport class AuthService {\n  constructor(usersService) {\n    this.usersService = usersService;\n  }\n\n  async validateUser(token) {\n    // Validate if token passed along with HTTP request\n    // is associated with any registered account in the database\n    return await this.usersService.findOneByToken(token);\n  }\n}`;\n  }\n\n  get httpStrategy() {\n    return `\nimport { Strategy } from 'passport-http-bearer';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class HttpStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(token: string) {\n    const user = await this.authService.validateUser(token);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}`;\n  }\n\n  get httpStrategyJs() {\n    return `\nimport { Strategy } from 'passport-http-bearer';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, Dependencies, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\n@Dependencies(AuthService)\nexport class HttpStrategy extends PassportStrategy(Strategy) {\n  constructor(authService) {\n    super();\n    this.authService = authService;\n  }\n\n  async validate(token) {\n    const user = await this.authService.validateUser(token);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}`;\n  }\n\n  get jwtStrategy() {\n    return `\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './auth.service';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'secretKey',\n    });\n  }\n\n  async validate(payload: JwtPayload) {\n    const user = await this.authService.validateUser(payload);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}`;\n  }\n\n  get jwtStrategyJs() {\n    return `\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './auth.service';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, Dependencies, UnauthorizedException } from '@nestjs/common';\n\n@Injectable()\n@Dependencies(AuthService)\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(authService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: 'secretKey',\n    });\n    this.authService = authService;\n  }\n\n  async validate(payload, done) {\n    const user = await this.authService.validateUser(payload);\n    if (!user) {\n      return done(new UnauthorizedException(), false);\n    }\n    done(null, user);\n  }\n}`;\n  }\n\n  get authModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { HttpStrategy } from './http.strategy';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  providers: [AuthService, HttpStrategy],\n})\nexport class AuthModule {}`;\n  }\n\n  get authModuleJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { HttpStrategy } from './http.strategy';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [UsersModule],\n  providers: [AuthService, HttpStrategy],\n})\nexport class AuthModule {}`;\n  }\n\n  get useGuards() {\n    return `\n@Get('users')\n@UseGuards(AuthGuard('bearer'))\nfindAll() {\n  return [];\n}`;\n  }\n\n  get useGuardsDefault() {\n    return `\n@Get('users')\n@UseGuards(AuthGuard())\nfindAll() {\n  return [];\n}`;\n  }\n\n  get useGuardsJwt() {\n    return `\n@Get('users')\n@UseGuards(AuthGuard())\nfindAll() {\n  return [];\n}`;\n  }\n\n  get passportModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { HttpStrategy } from './http.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'bearer' }),\n    UsersModule,\n  ],\n  providers: [AuthService, HttpStrategy],\n})\nexport class AuthModule {}`;\n  }\n\n  get passportModuleJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { HttpStrategy } from './http.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'bearer' }),\n    UsersModule,\n  ],\n  providers: [AuthService, HttpStrategy],\n})\nexport class AuthModule {}`;\n  }\n\n  get userObject() {\n    return `\nPassportModule.register({ property: 'profile' })`;\n  }\n\n  get passportOptions() {\n    return `\nPassportModule.register({ session: true })`;\n  }\n\n  get authServiceJwt() {\n    return `\nimport { JwtService } from '@nestjs/jwt';\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async signIn(): Promise<string> {\n    // In the real-world app you shouldn't expose this method publicly\n    // instead, return a token once you verify user credentials\n    const user: JwtPayload = { email: 'user@email.com' };\n    return this.jwtService.sign(user);\n  }\n\n  async validateUser(payload: JwtPayload): Promise<any> {\n    return await this.usersService.findOneByEmail(payload.email);\n  }\n}`;\n  }\n\n  get authServiceJwtJs() {\n    return `\nimport { JwtService } from '@nestjs/jwt';\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\n\n@Injectable()\n@Dependencies(UsersService, JwtService)\nexport class AuthService {\n  constructor(usersService, jwtService) {\n    this.usersService = usersService;\n    this.jwtService = jwtService;\n  }\n\n  async signIn() {\n    // In the real-world app you shouldn't expose this method publicly\n    // instead, return a token once you verify user credentials\n    const user = { email: 'user@email.com' };\n    return this.jwtService.sign(user);\n  }\n\n  async validateUser(payload) {\n    return await this.usersService.findOneByEmail(payload.email);\n  }\n}`;\n  }\n\n  get authModuleJwt() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secretOrPrivateKey: 'secretKey',\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n    UsersModule,\n  ],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}`;\n  }\n\n  get authModuleJwtJs() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secretOrPrivateKey: 'secretKey',\n      signOptions: {\n        expiresIn: 3600,\n      },\n    }),\n    UsersModule,\n  ],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}`;\n  }\n\n  get multipleStrategies() {\n    return `\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt')`;\n  }\n\n  get inheritance() {\n    return `\nimport {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}`;\n  }\n\n  get graphQl() {\n    return `\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}`;\n  }\n\n  get requestInContext() {\n    return `\nGraphQLModule.forRoot({\n  context: ({ req }) => ({ req }),\n})`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Caching</h3>\\n  <p>\\n    Cache is a great and simple <strong>technique</strong> that helps in improving your app's performance. It acts as a temporary\\n    data store, which accessing is really performant.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    We need to install the required package at first:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">$ npm install --save cache-manager</code></pre>\\n  <h4>In-memory cache</h4>\\n  <p>\\n    Nest provides a unified API for various cache storages. The built-in one is an in-memory data store. However, you can easily\\n    switch to a more comprehensive solution, like Redis. In order to enable caching, firstly import <code>CacheModule</code>    and\\n    call its <code>register()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ inMemoryCache }}</code></pre>\\n  <p>\\n    Then just tie <code>CacheInterceptor</code> somewhere.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ appController }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Warning</strong>\\n    Only <code>GET</code> endpoints are cached.\\n  </blockquote>\\n  <h4>Global cache</h4>\\n  <p>\\n    To reduce an amount of the required boilerplate, you can bind <code>CacheInterceptor</code> to each existing endpoint\\n    at once.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ globalCache }}</code></pre>\\n  <h4>WebSockets & Microservices</h4>\\n  <p>\\n    Obviously, you can effortlessly apply <code>CacheInterceptor</code> to WebSocket subscribers as well as Microservice's\\n    patterns (regardless of transport method that is being used).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ websockets }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    The <code>@CacheKey()</code> decorator is imported from <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    However, the additional <code>@CacheKey()</code> decorator is required in order to specify a key used to subsequently\\n    store and retrieve cached data. Besides, please note that you <strong>shouldn't cache everything</strong>. Actions which\\n    responsibility is to perform some business operations rather than simply querying the data should never be cached.\\n  </p>\\n  <h4>Customize caching</h4>\\n  <p>\\n    All cached data have its own expiration time (TTL). To customize default values, pass options object to the <code>register()</code>    method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ customizeCache }}</code></pre>\\n  <h4>Different stores</h4>\\n  <p>\\n    We take advantage of <a href=\\\"https://github.com/BryanDonovan/node-cache-manager\\\" target=\\\"blank\\\">cache-manager</a> under\\n    the hood. This package supports a wide-range of useful stores, for example, <a href=\\\"https://github.com/dabroek/node-cache-manager-redis-store\\\"\\n      target=\\\"blank\\\">Redis</a> store (full list <a href=\\\"https://github.com/BryanDonovan/node-cache-manager#store-engines\\\"\\n      target=\\\"blank\\\">here</a>). To set up the Redis store, simple pass the package together with correspoding options to the\\n    <code>register()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ redisStore }}</code></pre>\\n  <h4>Adjust tracking</h4>\\n  <p>\\n    By default, Nest uses request URL (in HTTP app) or cache key (in websockets and microservices) set through <code>@CacheKey()</code>    decorator\\n    to associate cache records with your endpoints. Nevertheless, sometimes you might want to set up tracking based on different\\n    factors, for example, using HTTP headers (e.g. <code>Authorization</code> to properly identify <code>profile</code> endpoints).\\n  </p>\\n  <p>\\n    In order to achieve that, create a subclass of <code>CacheInterceptor</code> and override <code>trackBy()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ trackBy }}</code></pre>\\n  <h4>Async configuration</h4>\\n  <p>\\n    Quite often you might want to asynchronously pass your module options instead of passing them beforehand. In such case, use\\n    <code>registerAsync()</code> method, that provides a couple of various ways to deal with async data.\\n  </p>\\n  <p>\\n    First possible approach is to use a factory function:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfiguration }}</code></pre>\\n  <p>\\n    Obviously, our factory behaves like every other one (might be <code>async</code> and is able to inject dependencies through\\n    <code>inject</code>).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationFactoryAsync }}</code></pre>\\n  <p>\\n    Alternatively, you are able to use class instead of a factory.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClass }}</code></pre>\\n  <p>\\n    Above construction will instantiate <code>CacheConfigService</code> inside <code>CacheModule</code> and will leverage\\n    it to create options object. The <code>CacheConfigService</code> has to implement <code>CacheOptionsFactory</code> interface.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClassBody }}</code></pre>\\n  <p>\\n    In order to prevent the creation of <code>CacheConfigService</code> inside <code>CacheModule</code> and use a provider\\n    imported from a different module, you can use the <code>useExisting</code> syntax.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationExisting }}</code></pre>\\n  <p>\\n    It works the same as <code>useClass</code> with one critical difference - <code>CacheModule</code> will lookup imported\\n    modules to reuse already created <code>ConfigService</code>, instead of instantiating it on its own.\\n  </p>\\n</div>\\n\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-caching',\n  templateUrl: './caching.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CachingComponent extends BasePageComponent {\n  get inMemoryCache() {\n    return `\nimport { CacheModule, Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [CacheModule.register()],\n  controllers: [AppController],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get appController() {\n    return `\n@Controller()\n@UseInterceptors(CacheInterceptor)\nexport class AppController {\n  @Get()\n  findAll(): string[] {\n    return [];\n  }\n}`;\n  }\n\n  get globalCache() {\n    return `\nimport { CacheModule, Module, CacheInterceptor } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\n@Module({\n  imports: [CacheModule.register()],\n  controllers: [AppController],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: CacheInterceptor,\n    },\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get websockets() {\n    return `\n@CacheKey('events')\n@UseInterceptors(CacheInterceptor)\n@SubscribeMessage('events')\nonEvent(client, data): Observable<string[]> {\n  return [];\n}`;\n  }\n\n  get customizeCache() {\n    return `\nCacheModule.register({\n  ttl: 5, // seconds\n  max: 10, // maximum number of items in cache\n})`;\n  }\n\n  get redisStore() {\n    return `\nimport * as redisStore from 'cache-manager-redis-store';\nimport { CacheModule, Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\n\n@Module({\n  imports: [CacheModule.register({\n    store: redisStore,\n    host: 'localhost',\n    port: 6379,\n  })],\n  controllers: [AppController],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get trackBy() {\n    return `\n@Injectable()\nclass HttpCacheInterceptor extends CacheInterceptor {\n  trackBy(context: ExecutionContext): string | undefined {\n    return 'key';\n  }\n}`;\n  }\n\n  get asyncConfiguration() {\n    return `\nCacheModule.forRootAsync({\n  useFactory: () => ({\n    ttl: 5,\n  }),\n})`;\n  }\n\n  get asyncConfigurationFactoryAsync() {\n    return `\nCacheModule.forRootAsync({\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => ({\n    ttl: configService.getString('CACHE_TTL'),\n  }),\n  inject: [ConfigService],\n})`;\n  }\n\n  get asyncConfigurationClass() {\n    return `\nCacheModule.forRootAsync({\n  useClass: CacheConfigService,\n})`;\n  }\n\n  get asyncConfigurationClassBody() {\n    return `\n@Injectable()\nclass CacheConfigService implements CacheOptionsFactory {\n  createCacheOptions(): CacheModuleOptions {\n    return {\n      ttl: 5,\n    };\n  }\n}`;\n  }\n\n  get asyncConfigurationExisting() {\n    return `\nCacheModule.forRootAsync({\n  imports: [ConfigModule],\n  useExisting: ConfigService,\n})`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Compression</h3>\\n  <p>\\n    Compression can greatly decrease the size of the response body and hence increase the speed of a web app. Use the <a\\n      href=\\\"https://github.com/expressjs/compression\\\" target=\\\"blank\\\">compression</a> middleware to enable gzip compression.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>Firstly, install the required package:</p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save compression</code></pre>\\n  <p>\\n    Once the installation is completed, apply it as a global middleware.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\nimport * as compression from 'compression';\\n// somewhere in your initialization file\\napp.use(compression());</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    If you work wtih <code>FastifyAdapter</code>, consider using <a href=\\\"hhttps://github.com/fastify/fastify-compress\\\" target=\\\"blank\\\">fastify-compress</a>\\n    instead.\\n  </blockquote>\\n  <p>\\n    For a <strong>high-traffic</strong> website in production, the best way to put compression in place is to implement it\\n    at a reverse proxy level. In that case, you do not need to use compression middleware.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-compression',\n  templateUrl: './compression.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CompressionComponent extends BasePageComponent {}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Configuration</h3>\\n  <p>\\n    The applications used to run in different <strong>environments</strong>. Depending on an environment, various sets of\\n    configuration variables should be used. For example, that's very likely that local environment relays on specific database\\n    credentials, valid solely for local db instance. In order to solve this issue, we used to take advantage of <code>.env</code>    files,\\n    that hold key-value pairs, where each key represents a particular value since this approach is very convenient.\\n  </p>\\n  <p>\\n    But when we use a <code>process</code> global object, it's difficult to keep our tests clean since tested class may directly\\n    use it. Another way is to create an abstraction layer, a <code>ConfigModule</code> that exposes a <code>ConfigService</code>    with\\n    loaded configuration variables.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    Certain platforms automatically attach our environment variables to the <code>process.env</code> global. However, in\\n    the local environment, we have to manually take care of it. In order to parse our environment files, we'll use a <a href=\\\"https://github.com/motdotla/dotenv\\\"\\n      target=\\\"blank\\\">dotenv</a> package.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ packages }}</code></pre>\\n  <h4>Service</h4>\\n  <p>\\n    Firstly, let's create a <code>ConfigService</code> class.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #configServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"configServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ configService }}</code></pre>\\n  <pre [class.hide]=\\\"!configServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ configServiceJs }}</code></pre>\\n  <p>\\n    This class takes a single argument, a <code>filePath</code>, which is a path to your <code>.env</code> file. The <code>get()</code>    method\\n    is provided to enable access to a private <code>envConfig</code> object that holds each property defined inside an environment\\n    file.\\n  </p>\\n  <p>\\n    The last step is to create a <code>ConfigModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #configModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ configModule }}</code></pre>\\n  <p>\\n    The <code>ConfigModule</code> registers a <code>ConfigService</code> and exports it as well. Additionally, we passed\\n    a path to the <code>.env</code> file. This path will be different depending on actual execution environment. Now you\\n    can simply inject <code>ConfigService</code> anywhere, and pull out a particular value based on a passed key. Sample\\n    <code>.env</code> file could look like below:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    development.env\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ sampleEnv }}</code></pre>\\n\\n  <h4>Using the ConfigService</h4>\\n  <p>\\n    To access <strong>environment variables</strong> from our <code>ConfigService</code> we need to inject it. Therefore\\n    we firstly need to import the module.\\n  </p>\\n  <span class=\\\"filename\\\">app.module.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ configModuleImport }}</code></pre>\\n  <p>\\n    Afterward, you can inject it using an injection token. By default, the token is equal to the class name (in our example <code>ConfigService</code>).\\n  </p>\\n  <span class=\\\"filename\\\">app.service.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ configServiceInjection }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    Instead of importing <code>ConfigModule</code> repeatingly in all your modules, you can also declare <code>ConfigModule</code>    as\\n    a global module.\\n  </blockquote>\\n  <h4>Advanced configuration</h4>\\n  <p>\\n    We just implemented a basic <code>ConfigService</code>. However, this approach has a couple of disadvantages, which we'll\\n    address now:\\n  </p>\\n  <ul>\\n    <li>\\n      missing names & types for the environment variables (no IntelliSense)\\n    </li>\\n    <li>\\n      a lack of <strong>validation</strong> of the provided <code>.env</code> file\\n    </li>\\n    <li>\\n      the env file provides booleans as string (<code>'true'</code>), and thus have to cast them to a <code>boolean</code>      every\\n      time\\n    </li>\\n  </ul>\\n  <h4>Validation</h4>\\n  <p>\\n    We'll start with the validation of the provided environment variables. You can throw an error if required environment variables\\n    haven't been provided or if they don't meet your predefined requirements. For this purpose, we are going to use the npm\\n    package <a href=\\\"https://github.com/hapijs/joi\\\" target=\\\"blank\\\">Joi</a>. With Joi, you define an object schema and\\n    validate JavaScript objects against it.\\n  </p>\\n\\n  <p>\\n    Install Joi and it's types (for <strong>TypeScript</strong> users):\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm install --save joi\\n$ npm install --save-dev @types/joi</code></pre>\\n  <p>\\n    Once the packages are installed, we can move to our <code>ConfigService</code>.\\n  </p>\\n  <span class=\\\"filename\\\">config.service.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ configServiceValidation }}</code></pre>\\n  <p>\\n    Since we set default values for <code>NODE_ENV</code> and <code>PORT</code> the validation will not fail if we don't\\n    provide these variables in the environment file. Nevertheless, we need to explicitly provide <code>API_AUTH_ENABLED</code>.\\n    The validation will also throw an error if we have variables in our .env file which aren't part of the schema. Additionally,\\n    Joi tries to convert the env strings into the right type.\\n  </p>\\n  <h4> Class properties</h4>\\n  <p>\\n    For each config property, we have to add a getter function.\\n  </p>\\n  <span class=\\\"filename\\\">config.service.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ configServiceProperties }}</code></pre>\\n  <h4>Usage example</h4>\\n  <p>\\n    Now we can directly access the class properties.\\n  </p>\\n  <span class=\\\"filename\\\">app.service.ts</span>\\n  <pre><code class=\\\"language-typescript\\\">{{ advancedConfigServiceSample }}</code></pre>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-configuration',\n  templateUrl: './configuration.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfigurationComponent extends BasePageComponent {\n  get packages() {\n    return `\n$ npm i --save dotenv`;\n  }\n  get configService() {\n    return `\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\n\nexport class ConfigService {\n  private readonly envConfig: { [key: string]: string };\n\n  constructor(filePath: string) {\n    this.envConfig = dotenv.parse(fs.readFileSync(filePath))\n  }\n\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n}`;\n  }\n\n  get configServiceJs() {\n    return `\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\n\nexport class ConfigService {\n  constructor(filePath) {\n    this.envConfig = dotenv.parse(fs.readFileSync(filePath))\n  }\n\n  get(key) {\n    return this.envConfig[key];\n  }\n}`;\n  }\n\n  get configModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(\\`\\${process.env.NODE_ENV}.env\\`),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}`;\n  }\n\n  get sampleEnv() {\n    return `\nDATABASE_USER=test\nDATABASE_PASSWORD=test`;\n  }\n\n  get configModuleImport() {\n    return `\n@Module({\n  imports: [ConfigModule],\n  ...\n})`;\n  }\n\n  get configServiceInjection() {\n    return `\n@Injectable()\nexport class AppService {\n  private isAuthEnabled: boolean;\n  constructor(config: ConfigService) {\n    // Please take note that this check is case sensitive!\n    this.isAuthEnabled = config.get('IS_AUTH_ENABLED') === 'true' ? true : false;\n  }\n}\n    `;\n  }\n\n  get configServiceValidation() {\n    return `\nimport * as Joi from 'joi';\nimport * as fs from 'fs';\n\nexport interface EnvConfig {\n  [key: string]: string;\n}\n\nexport class ConfigService {\n  private readonly envConfig: EnvConfig;\n\n  constructor(filePath: string) {\n    const config = dotenv.parse(fs.readFileSync(filePath));\n    this.envConfig = this.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private validateInput(envConfig: EnvConfig): EnvConfig {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string()\n        .valid(['development', 'production', 'test', 'provision'])\n        .default('development'),\n      PORT: Joi.number().default(3000),\n      API_AUTH_ENABLED: Joi.boolean().required(),\n    });\n\n    const { error, value: validatedEnvConfig } = Joi.validate(\n      envConfig,\n      envVarsSchema,\n    );\n    if (error) {\n      throw new Error(\\`Config validation error: \\${error.message}\\`);\n    }\n    return validatedEnvConfig;\n  }\n}`;\n  }\n\n  get configServiceProperties() {\n    return `\nget isApiAuthEnabled(): boolean {\n  return Boolean(this.envConfig.API_AUTH_ENABLED);\n}`;\n  }\n\n  get advancedConfigServiceSample() {\n    return `\n@Injectable()\nexport class AppService {\n  constructor(config: ConfigService) {\n    if (config.isApiAuthEnabled) {\n      // Authorization is enabled\n    }\n  }\n}\n    `;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>File upload</h3>\\n  <p>\\n    In order to handle file uploading, Nest makes use of <a href=\\\"https://github.com/expressjs/multer\\\" target=\\\"blank\\\">multer</a>\\n    middleware. This middleware is fully configurable and you can adjust its behavior to your application requirements.\\n  </p>\\n  <p>\\n    Multer is middleware for handling <code>multipart/form-data</code>, which is primarily used for uploading files.\\n\\n  </p>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Warning</strong> Multer will not process any form which is not multipart (<code>multipart/form-data</code>).\\n    Besides, this package won't work with the <code>FastifyAdapter</code>.\\n  </blockquote>\\n  <h4>Basic example</h4>\\n  <p>\\n    When we want to upload a single file, we simply tie <code>FileInterceptor()</code> to the handler, and then, pull outs\\n    <code>file</code> from the <code>request</code> using <code>@UploadedFile()</code> decorator.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #singleFileT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"singleFileT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ singleFile }}</code></pre>\\n  <pre [class.hide]=\\\"!singleFileT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ singleFileJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Both <code>FileInterceptor()</code> and <code>@UploadedFile()</code> decorator are exposed from\\n    <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    The <code>FileInterceptor()</code> takes two arguments, a <code>fieldName</code> (points to field from HTML form that\\n    holds a file) and optional <code>options</code> object. These <code>MulterOptions</code> are equivalent to those passed\\n    into multer constructor (more details <a href=\\\"https://github.com/expressjs/multer#multeropts\\\" target=\\\"blank\\\">here</a>)\\n  </p>\\n  <h4>Array of files</h4>\\n  <p>\\n    In order to upload an array of files, we use <code>FilesInterceptor()</code>. This interceptor takes three arguments.\\n    A <code>fieldName</code> (that remains the same), <code>maxCount</code> which is a maximum number of files that can be\\n    uploaded at the same time, and optional <code>MulterOptions</code> object. Additionally, to pick files from <code>request</code>    object,\\n    we use <code>@UploadedFiles()</code> decorator\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #multiplteFilesT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"multiplteFilesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ multipleFiles }}</code></pre>\\n  <pre [class.hide]=\\\"!multiplteFilesT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ multipleFilesJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Both <code>FilesInterceptor()</code> and <code>@UploadedFiles()</code> decorator are exposed from\\n    <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <h4>Multiple files</h4>\\n  <p>\\n    To upload multiple fields (all with different keys), we use <code>FileFieldsInterceptor()</code> decorator.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #fileFieldsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"fileFieldsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ fileFields }}</code></pre>\\n  <pre [class.hide]=\\\"!fileFieldsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ fileFieldsJs }}</code></pre>\\n  <h4>Default options</h4>\\n  <p>\\n    To customize <a href=\\\"https://github.com/expressjs/multer\\\" target=\\\"blank\\\">multer</a> behavior, you can register the <code>MulterModule</code>.\\n    We support all options listed <a href=\\\"https://github.com/expressjs/multer#multeropts\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ multerModule }}</code></pre>\\n  <h4>Async configuration</h4>\\n  <p>\\n    Quite often you might want to asynchronously pass your module options instead of passing them beforehand. In such case, use\\n    <code>registerAsync()</code> method, that provides a couple of various ways to deal with async data.\\n  </p>\\n  <p>\\n    First possible approach is to use a factory function:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfiguration }}</code></pre>\\n  <p>\\n    Obviously, our factory behaves like every other one (might be <code>async</code> and is able to inject dependencies through\\n    <code>inject</code>).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationFactoryAsync }}</code></pre>\\n  <p>\\n    Alternatively, you are able to use class instead of a factory.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClass }}</code></pre>\\n  <p>\\n    Above construction will instantiate <code>MulterConfigService</code> inside <code>MulterModule</code> and will leverage\\n    it to create options object. The <code>MulterConfigService</code> has to implement <code>MulterOptionsFactory</code>    interface.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClassBody }}</code></pre>\\n  <p>\\n    In order to prevent the creation of <code>MulterConfigService</code> inside <code>MulterModule</code> and use a provider\\n    imported from a different module, you can use the <code>useExisting</code> syntax.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationExisting }}</code></pre>\\n  <p>\\n    It works the same as <code>useClass</code> with one critical difference - <code>MulterModule</code> will lookup imported\\n    modules to reuse already created <code>ConfigService</code>, instead of instantiating it on its own.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FileUploadComponent extends BasePageComponent {\n  get singleFile() {\n    return `\n@Post('upload')\n@UseInterceptors(FileInterceptor('file'))\nuploadFile(@UploadedFile() file) {\n  console.log(file);\n}`;\n  }\n\n  get singleFileJs() {\n    return `\n@Post('upload')\n@UseInterceptors(FileInterceptor('file'))\n@Bind(UploadedFile())\nuploadFile(file) {\n  console.log(file);\n}`;\n  }\n\n  get multipleFiles() {\n    return `\n@Post('upload')\n@UseInterceptors(FilesInterceptor('files'))\nuploadFile(@UploadedFiles() files) {\n  console.log(files);\n}`;\n  }\n\n  get multipleFilesJs() {\n    return `\n@Post('upload')\n@UseInterceptors(FilesInterceptor('files'))\n@Bind(UploadedFiles())\nuploadFile(files) {\n  console.log(files);\n}`;\n  }\n\n  get fileFields() {\n    return `\n@Post('upload')\n@UseInterceptors(FileFieldsInterceptor([\n  { name: 'avatar', maxCount: 1 },\n  { name: 'background', maxCount: 1 },\n]))\nuploadFile(@UploadedFiles() files) {\n  console.log(files);\n}`;\n  }\n\n  get fileFieldsJs() {\n    return `\n@Post('upload')\n@Bind(UploadedFiles())\n@UseInterceptors(FileFieldsInterceptor([\n  { name: 'avatar', maxCount: 1 },\n  { name: 'background', maxCount: 1 },\n]))\nuploadFile(files) {\n  console.log(files);\n}`;\n  }\n\n  get multerModule() {\n    return `\nMulterModule.register({\n  dest: '/upload',\n}),`;\n  }\n\n  get asyncConfiguration() {\n    return `\nMulterModule.registerAsync({\n  useFactory: () => ({\n    dest: '/upload',\n  }),\n})`;\n  }\n\n  get asyncConfigurationFactoryAsync() {\n    return `\nMulterModule.registerAsync({\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => ({\n    dest: configService.getString('MULTER_DEST'),\n  }),\n  inject: [ConfigService],\n})`;\n  }\n\n  get asyncConfigurationClass() {\n    return `\nMulterModule.registerAsync({\n  useClass: MulterConfigService,\n})`;\n  }\n\n  get asyncConfigurationClassBody() {\n    return `\n@Injectable()\nclass MulterConfigService implements MulterOptionsFactory {\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      dest: '/upload',\n    };\n  }\n}`;\n  }\n\n  get asyncConfigurationExisting() {\n    return `\nMulterModule.registerAsync({\n  imports: [ConfigModule],\n  useExisting: ConfigService,\n})`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Hot Reload (Webpack)</h3>\\n  <p>\\n    The highest impact on your application's bootstrapping process has a <strong>TypeScript compilation</strong>.\\n    But the question is, do we have to recompile a whole project each time when change occurs? Not at all.\\n    That's why <a href=\\\"https://github.com/webpack/webpack\\\" target=\\\"blank\\\">webpack</a> HMR (Hot-Module Replacement) significantly decreases an amount of time necessary to instantiate your application.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly, let's install required packages:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ packages }}</code></pre>\\n  <h4>Configuration</h4>\\n  <p>\\n    Then, we need to create a <code>webpack.config.js</code> which is a webpack's configuration file, and put it in the root directory.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ configuration }}</code></pre>\\n  <p>\\n    This configuration tells webpack few essential things about our application. Where sits an entry file, which directory should be used to hold <strong>compiled</strong> files, and also, what kind of loader we want to use in order to compile source files.\\n    Basically, you shouldn't worry to much, you don't need to understand the content of this file at all.\\n  </p>\\n  <h4>Hot-Module Replacement</h4>\\n  <p>\\n    In order to enable <strong>HMR</strong>, we have to open Nest application entry file (which is <code>main.ts</code>) and add few critical things.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ main }}</code></pre>\\n  <p>\\n    And that's all. To simplify execution process, add those two lines into your <code>scripts</code> inside <code>package.json</code> file.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ scripts }}</code></pre>\\n  <p>\\n    Now simply open your command line and run below command:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">{{ webpackStart }}</code></pre>\\n  <p>\\n    Once webpack started to <strong>watch files</strong>, run another command in the another command line window:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">{{ start }}</code></pre>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/08-webpack\\\">here</a>.\\n  </p>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-hot-reload',\n  templateUrl: './hot-reload.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotReloadComponent extends BasePageComponent {\n  get packages() {\n    return `\n$ npm i --save-dev webpack webpack-cli webpack-node-externals`;\n  }\n\n  get configuration() {\n    return `\nconst webpack = require('webpack');\nconst path = require('path');\nconst nodeExternals = require('webpack-node-externals');\n\nmodule.exports = {\n  entry: ['webpack/hot/poll?100', './src/main.ts'],\n  watch: true,\n  target: 'node',\n  externals: [\n    nodeExternals({\n      whitelist: ['webpack/hot/poll?100'],\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: 'ts-loader',\n        exclude: /node_modules/,\n      },\n    ],\n  },\n  mode: 'development',\n  resolve: {\n    extensions: ['.tsx', '.ts', '.js'],\n  },\n  plugins: [new webpack.HotModuleReplacementPlugin()],\n  output: {\n    path: path.join(__dirname, 'dist'),\n    filename: 'server.js',\n  },\n};`\n  }\n\n  get main() {\n    return `\ndeclare const module: any;\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  await app.listen(3000);\n\n  if (module.hot) {\n    module.hot.accept();\n    module.hot.dispose(() => app.close());\n  }\n}\nbootstrap();`;\n  }\n\n  get scripts() {\n    return `\n\"start\": \"node dist/server\",\n\"webpack\": \"webpack --config webpack.config.js\"`;\n  }\n\n  get webpackStart() {\n    return `\n$ npm run webpack`;\n  }\n\n  get start() {\n    return `\n$ npm run start`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>HTTP module</h3>\\n  <p>\\n    <a href=\\\"https://github.com/axios/axios\\\" target=\\\"blank\\\">Axios</a> is rich-feature HTTP client that is widely used in\\n    dozens of applications. That's why Nest wraps this package and exposes it by default as a built-in <code>HttpModule</code>.\\n    The <code>HttpModule</code> exports <code>HttpService</code> that simply exposes axios-based methods to perform HTTP\\n    request, but also, transforms return types into <code>Observables</code>.\\n  </p>\\n  <p>\\n    In order to use a <code>HttpService</code>, we need to import <code>HttpModule</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ httpModule }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>HttpModule</code> is exposed from <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    Then, you can inject <code>HttpService</code>. This class is easily accessible from <code>@nestjs/common</code> package.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #httpServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"httpServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ httpService }}</code></pre>\\n  <pre [class.hide]=\\\"!httpServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ httpServiceJs }}</code></pre>\\n  <p>\\n    All methods return <code>AxiosResponse</code> wrapped with <code>Observable</code> object.\\n  </p>\\n  <h4>Configuration</h4>\\n  <p>\\n    <a href=\\\"https://github.com/axios/axios\\\" target=\\\"blank\\\">Axios</a> gives a bunch of options that you may take advantage\\n    of to make your <code>HttpService</code> even more powerful. Read more about them <a href=\\\"https://github.com/axios/axios#request-config\\\"\\n      target=\\\"blank\\\">here</a>. To configure underlying library instance, use <code>register()</code> method of <code>HttpModule</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ configuration }}</code></pre>\\n  <p>\\n    All these properties will be passed down to the <strong>axios</strong> constructor.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-http-module',\n  templateUrl: './http-module.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HttpModuleComponent extends BasePageComponent {\n  get httpModule() {\n    return `\n@Module({\n  imports: [HttpModule],\n  providers: [CatsService],\n})\nexport class CatsModule {}`;\n  }\n\n  get httpService() {\n    return `\n@Injectable()\nexport class CatsService {\n  constructor(private readonly httpService: HttpService) {}\n\n  findAll(): Observable<AxiosResponse<Cat[]>> {\n    return this.httpService.get('http://localhost:3000/cats');\n  }\n}`;\n  }\n\n  get httpServiceJs() {\n    return `\n@Injectable()\n@Dependencies(HttpService)\nexport class CatsService {\n  constructor(httpService) {\n    this.httpService = httpService;\n  }\n\n  findAll() {\n    return this.httpService.get('http://localhost:3000/cats');\n  }\n}`;\n  }\n\n  get configuration() {\n    return `\n@Module({\n  imports: [HttpModule.register({\n    timeout: 5000,\n    maxRedirects: 5,\n  })],\n  providers: [CatsService],\n})\nexport class CatsModule {}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Logger</h3>\\n  <p>\\n    Nest comes with a default implementation of internal <code>Logger</code> that is used during the instantiation process\\n    and also, in several different situations, such as <strong>occurred exception</strong>, and so on. But sometimes, you\\n    might want to disable logging entirely, or provide a custom implementation and handle messages on your own. In order\\n    to turn off a logger, we use a Nest's options object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ logger }}</code></pre>\\n  <p>\\n    Nevertheless, we could want to use a different logger under the hood, instead of disabling a whole logging mechanism. In\\n    order to do that, we have to pass an object that fulfills <code>LoggerService</code> interface. An example could\\n    be a built-in <code>console</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ console }}</code></pre>\\n  <p>\\n    But it's not an apt idea. However, we can create our own logger easily.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ myLogger }}</code></pre>\\n  <p>\\n    Then, we can apply <code>MyLogger</code> instance directly:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useMyLogger }}</code></pre>\\n  <h4>Extend built-in logger</h4>\\n  <p>\\n    Lot of use cases require creating your own logger. You don't have to entirely reinvent the wheel though. Simply extend built-in\\n    <code>Logger</code> class to partially override the default implementation, and use <code>super</code> to delegate the\\n    call to the parent class.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ inheritance }}</code></pre>\\n  <h4>Dependency injection</h4>\\n  <p>\\n    If you want to enable dependency injection in your logger, you have to make the <code>MyLogger</code> class a part of\\n    the real application. For instance, you can create a <code>LoggerModule</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ loggerModule }}</code></pre>\\n  <p>\\n    Once <code>LoggerModule</code> is imported anywhere, the framework will take charge of creating an instance of your logger.\\n    Now, to use the same instance of a logger across the whole app, including bootstraping and error handling stuff, use\\n    following construction:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ useLoggerDi }}</code></pre>\\n  <p>\\n    The only downside of this solution is that your first initialization messages won't be handled by your logger instance, though,\\n    it shouldn't really matter at this point.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-logger',\n  templateUrl: './logger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoggerComponent extends BasePageComponent {\n  get logger() {\n    return `\nconst app = await NestFactory.create(ApplicationModule, {\n  logger: false,\n});\nawait app.listen(3000);`;\n  }\n\n  get console() {\n    return `\nconst app = await NestFactory.create(ApplicationModule, {\n  logger: console,\n});\nawait app.listen(3000);`;\n  }\n\n  get myLogger() {\n    return `\nimport { LoggerService } from '@nestjs/common';\n\nexport class MyLogger implements LoggerService {\n  log(message: string) {}\n  error(message: string, trace: string) {}\n  warn(message: string) {}\n}`;\n  }\n\n  get useMyLogger() {\n    return `\nconst app = await NestFactory.create(ApplicationModule, {\n  logger: new MyLogger(),\n});\nawait app.listen(3000);`;\n  }\n\n  get inheritance() {\n    return `\nimport { Logger } from '@nestjs/common';\n\nexport class MyLogger extends Logger {\n  error(message: string, trace: string) {\n    // add your custom business logic\n    super.error(message, trace);\n  }\n}`;\n  }\n\n  get loggerModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { MyLogger } from './my-logger.service.ts';\n\n@Module({\n  providers: [MyLogger],\n  exports: [MyLogger],\n})\nexport class LoggerModule {};`;\n  }\n\n  get useLoggerDi() {\n    return `\nconst app = await NestFactory.create(ApplicationModule, {\n  logger: false,\n});\napp.useLogger(app.get(MyLogger));\nawait app.listen(3000);`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Mongo</h3>\\n  <p>\\n    There are two ways of dealing with the MongoDB database. You can either use an <a href=\\\"https://github.com/typeorm/typeorm\\\"\\n      target=\\\"blank\\\">ORM</a> that provides a MongoDB support or <a href=\\\"http://mongoosejs.com\\\" target=\\\"blank\\\">Mongoose</a>\\n    which is the most popular <a href=\\\"https://www.mongodb.org/\\\" target=\\\"blank\\\">MongoDB</a> object modeling tool. If you\\n    wanna stay with the <strong>ORM</strong> you can follow <a routerLink=\\\"/techniques/sql\\\">these steps</a>. Otherwise,\\n    we'll use the dedicated <code>@nestjs/mongoose</code> package.\\n  </p>\\n  <p>\\n    Firstly, we need to install all of the required dependencies:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm install --save @nestjs/mongoose mongoose</code></pre>\\n  <p>\\n    Once the installation process is completed, we can import the <code>MongooseModule</code> into the root <code>ApplicationModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: importMongooseT.isJsActive }}\\n    <app-tabs #importMongooseT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ importMongoose }}</code></pre>\\n  <p>\\n    The <code>forRoot()</code> method accepts the same configuration object as <code>mongoose.connect()</code> from the <a\\n      href=\\\"http://mongoosejs.com\\\" target=\\\"blank\\\">Mongoose</a> package.\\n  </p>\\n  <h4>Model injection</h4>\\n  <p>\\n    With Mongoose, everything is derived from a <a href=\\\"http://mongoosejs.com/docs/guide.html\\\" target=\\\"blank\\\">Schema</a>.\\n    Let's define the <code>CatSchema</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats/schemas/cat.schema' | extension: catSchemaT.isJsActive }}\\n    <app-tabs #catSchemaT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catSchema }}</code></pre>\\n  <p>\\n    The <code>CatsSchema</code> belongs to the <code>cats</code> directory. This directory represents the <code>CatsModule</code>.\\n    It's your decision where you gonna keep your schema files. From our point of view, the best way's to hold them nearly\\n    their <strong>domain</strong>, in the appropriate module directory.\\n  </p>\\n  <p>\\n    Let's have a look at the <code>CatsModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats/cats.module' | extension: catsModuleT.isJsActive }}\\n    <app-tabs #catsModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ catsModule }}</code></pre>\\n  <p>\\n    This module uses <code>forFeature()</code> method to define which models shall be registered in the current scope. Thanks\\n    to that, we can inject the <code>CatModel</code> to the <code>CatsService</code> using the <code>@InjectModel()</code>    decorator:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'cats/cats.service' | extension: catsServiceT.isJsActive }}\\n    <app-tabs #catsServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsService }}</code></pre>\\n  <pre [class.hide]=\\\"!catsServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ catsServiceJs }}</code></pre>\\n  <h4>Testing</h4>\\n  <p>\\n    When it comes to unit test our application, we usually want to avoid any database connection, making our test suits independent\\n    and their execution process quick as possible. But our classes might depend on models that are pulled from the connection\\n    instance. What's then? The solution is to create fake models. In order to achieve that, we should set up <a routerLink=\\\"/fundamentals/custom-providers\\\">custom\\n      providers\\n    </a>. In fact, each registered model is represented by <code>NameModel</code> token, where <code>Name</code> is a model's\\n    name.\\n  </p>\\n  <p>\\n    The <code>@nestjs/mongoose</code> package exposes <code>getModelToken()</code> function that returns prepared token based\\n    on a given model's name.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ mockRepository }}</code></pre>\\n  <p>\\n    Now a hardcoded <code>catModel</code> will be used as a <code>Model&#60;Cat&#62;</code>. Whenever any provider asks for\\n    <code>Model&#60;Cat&#62;</code> using an <code>@InjectModel()</code> decorator, Nest will use a registered <code>catModel</code>    object.\\n  </p>\\n  <h4>Async configuration</h4>\\n  <p>\\n    Quite often you might want to asynchronously pass your module options instead of passing them beforehand. In such case, use\\n    <code>forRootAsync()</code> method, that provides a couple of various ways to deal with async data.\\n  </p>\\n  <p>\\n    First possible approach is to use a factory function:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfiguration }}</code></pre>\\n  <p>\\n    Obviously, our factory behaves like every other one (might be <code>async</code> and is able to inject dependencies through\\n    <code>inject</code>).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationFactoryAsync }}</code></pre>\\n  <p>\\n    Alternatively, you are able to use class instead of a factory.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClass }}</code></pre>\\n  <p>\\n    Above construction will instantiate <code>MongooseConfigService</code> inside <code>MongooseModule</code> and will leverage\\n    it to create options object. The <code>MongooseConfigService</code> has to implement <code>MongooseOptionsFactory</code>    interface.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClassBody }}</code></pre>\\n  <p>\\n    In order to prevent the creation of <code>MongooseConfigService</code> inside <code>MongooseModule</code> and use a provider\\n    imported from a different module, you can use the <code>useExisting</code> syntax.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationExisting }}</code></pre>\\n  <p>\\n    It works the same as <code>useClass</code> with one critical difference - <code>MongooseModule</code> will lookup imported\\n    modules to reuse already created <code>ConfigService</code>, instead of instantiating it on its own.\\n  </p>\\n  <h4>Example</h4>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/14-mongoose-base\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\\n\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mongo',\n  templateUrl: './mongo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MongoComponent extends BasePageComponent {\n  get importMongoose() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [MongooseModule.forRoot('mongodb://localhost/nest')],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get catSchema() {\n    return `\nimport * as mongoose from 'mongoose';\n\nexport const CatSchema = new mongoose.Schema({\n  name: String,\n  age: Number,\n  breed: String,\n});`;\n  }\n\n  get catsModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\nimport { CatSchema } from './schemas/cat.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: 'Cat', schema: CatSchema }])],\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}`;\n  }\n\n  get catsService() {\n    return `\nimport { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Cat } from './interfaces/cat.interface';\nimport { CreateCatDto } from './dto/create-cat.dto';\n\n@Injectable()\nexport class CatsService {\n  constructor(@InjectModel('Cat') private readonly catModel: Model<Cat>) {}\n\n  async create(createCatDto: CreateCatDto): Promise<Cat> {\n    const createdCat = new this.catModel(createCatDto);\n    return await createdCat.save();\n  }\n\n  async findAll(): Promise<Cat[]> {\n    return await this.catModel.find().exec();\n  }\n}`;\n  }\n\n  get catsServiceJs() {\n    return `\nimport { Model } from 'mongoose';\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CatSchema } from './schemas/cat.schema';\n\n@Injectable()\n@Dependencies(InjectModel(CatSchema))\nexport class CatsService {\n  constructor(catModel) {\n    this.catModel = catModel;\n  }\n\n  async create(createCatDto) {\n    const createdCat = new this.catModel(createCatDto);\n    return await createdCat.save();\n  }\n\n  async findAll() {\n    return await this.catModel.find().exec();\n  }\n}`;\n  }\n\n  get mockRepository() {\n    return `\n@Module({\n  providers: [\n    CatsService,\n    {\n      provide: getModelToken('Cat'),\n      useValue: catModel,\n    },\n  ],\n})\nexport class CatsModule {}`;\n  }\n\n  get asyncConfiguration() {\n    return `\nMongooseModule.forRootAsync({\n  useFactory: () => ({\n    uri: 'mongodb://localhost/nest',\n  }),\n})`;\n  }\n\n  get asyncConfigurationFactoryAsync() {\n    return `\nMongooseModule.forRootAsync({\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => ({\n    uri: configService.getString('MONGODB_URI'),\n  }),\n  inject: [ConfigService],\n})`;\n  }\n\n  get asyncConfigurationClass() {\n    return `\nMongooseModule.forRootAsync({\n  useClass: MongooseConfigService,\n})`;\n  }\n\n  get asyncConfigurationClassBody() {\n    return `\n@Injectable()\nclass MongooseConfigService implements MongooseOptionsFactory {\n  createMongooseOptions(): MongooseModuleOptions {\n    return {\n      uri: 'mongodb://localhost/nest',\n    };\n  }\n}`;\n  }\n\n  get asyncConfigurationExisting() {\n    return `\nMongooseModule.forRootAsync({\n  imports: [ConfigModule],\n  useExisting: ConfigService,\n})`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Model-View-Controller</h3>\\n  <p>\\n    Nest, by default, makes use of <a href=\\\"https://github.com/expressjs/express\\\" target=\\\"blank\\\">express</a> library under\\n    the hood. Hence, every tutorial about MVC (Model-View-Controller) pattern in express concerns Nest as well. Firstly,\\n    let's scaffold a simple Nest application using <a href=\\\"https://github.com/nestjs/nest-cli\\\" target=\\\"blank\\\">CLI</a> tool:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i -g @nestjs/cli\\n$ nest new project</code></pre>\\n  <p>\\n    In order to create a MVC app, we have to install a <a href=\\\"http://expressjs.com/en/guide/using-template-engines.html\\\"\\n      target=\\\"blank\\\">template engine</a>:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm install --save hbs</code></pre>\\n  <p>\\n    We decided to use a <code>hbs</code> engine, though, you can use whatever fits your requirements. Once the installation\\n    process is completed, we need to configure the express instance using following code:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: mainT.isJsActive }}\\n    <app-tabs #mainT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ main }}</code></pre>\\n  <p>\\n    We told <a href=\\\"https://github.com/expressjs/express\\\" target=\\\"blank\\\">express</a> that the <code>public</code> directory\\n    will be used for storing static assets,\\n    <code>views</code> will contain templates, and a <code>hbs</code> template engine should be used to render an HTML output.\\n  </p>\\n  <p>\\n    Now, let's create a <code>views</code> directory and <code>index.hbs</code> template inside it. In the template, we are\\n    gonna print a <code>message</code> passed from the controller:\\n  </p>\\n  <span class=\\\"filename\\\">index.hbs</span>\\n  <pre><code class=\\\"language-html\\\">{{ index }}</code></pre>\\n  <p>\\n    Afterward, open the <code>app.controller</code> file and replace the <code>root()</code> method with the following code:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.controller' | extension: rootT.isJsActive }}\\n    <app-tabs #rootT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"rootT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ root }}</code></pre>\\n  <pre [class.hide]=\\\"!rootT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ rootJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> In fact, when Nest detects <code>@Res()</code> decorator, it injects library-specific <code>response</code>    object.\\n    Learn more about its abilities <a href=\\\"http://expressjs.com/en/api.html\\\" target=\\\"blank\\\">here</a>.\\n  </blockquote>\\n  <p>\\n    While the application is running, open your browser and navigate to <code>http://localhost:3000/</code>. You should see\\n    the <code>Hello world!</code> message.\\n  </p>\\n  <h4>Example</h4>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/15-mvc\\\">here</a>.\\n  </p>\\n  <h4>Fastify</h4>\\n  <p>\\n    As mentioned in this <a routerLink=\\\"/techniques/http-performance\\\">chapter</a>, we are able to use any compatible HTTP\\n    provider together with Nest. One of them is a <a href=\\\"https://github.com/fastify/fastify\\\" target=\\\"_blank\\\">fastify</a>\\n    library. In order to create a MVC application with fastify, we have to install following packages:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save fastify point-of-view handlebars</code></pre>\\n  <p>\\n    The next steps cover almost the same stuff as in case of express library (with small differences). Once the installation\\n    process is completed, we need to open <code>main.ts</code> file and update its contents:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: mainT.isJsActive }}\\n    <app-tabs #mainT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ mainFastify }}</code></pre>\\n  <p>\\n    The API is different a little but the idea that sits behind those methods calls remains the same. Also, we have to ensure\\n    that the template name passed into the <code>@Render()</code> decorators include a file extension.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.controller' | extension: rootFastifyT.isJsActive }}\\n    <app-tabs #rootFastifyT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ rootFastify }}</code></pre>\\n  <p>\\n    While the application is running, open your browser and navigate to <code>http://localhost:3000/</code>. You should see\\n    the <code>Hello world!</code> message.\\n  </p>\\n  <h4>Example</h4>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/17-mvc-fastify\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-mvc',\n  templateUrl: './mvc.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MvcComponent extends BasePageComponent {\n  get main() {\n    return `\nimport { NestFactory } from '@nestjs/core';\nimport { join } from 'path';\nimport { ApplicationModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n\n  app.useStaticAssets(join(__dirname, '..', 'public'));\n  app.setBaseViewsDir(join(__dirname, '..', 'views'));\n  app.setViewEngine('hbs');\n\n  await app.listen(3000);\n}\nbootstrap();`;\n  }\n\n  get index() {\n    return `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>App</title>\n</head>\n<body>\n  {{ message }}\n</body>\n</html>`;\n  }\n\n  get root() {\n    return `\nimport { Get, Controller, Render } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  @Render('index')\n  root() {\n    return { message: 'Hello world!' };\n  }\n}`;\n  }\n\n  get rootJs() {\n    return `\nimport { Get, Controller, Render } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  @Render('index')\n  root() {\n    return { message: 'Hello world!' };\n  }\n}`;\n  }\n\n  get rootFastify() {\n    return `\nimport { Get, Controller, Render } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n  @Get()\n  @Render('index.hbs')\n  root() {\n    return { message: 'Hello world!' };\n  }\n}`;\n  }\n\n  get mainFastify() {\n    return `\nimport { NestFactory, FastifyAdapter } from '@nestjs/core';\nimport { ApplicationModule } from './app.module';\nimport { join } from 'path';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule, new FastifyAdapter());\n  app.useStaticAssets({\n    root: join(__dirname, '..', public'),\n    prefix: '/public/',\n  });\n  app.setViewEngine({\n    engine: {\n      handlebars: require('handlebars'),\n    },\n    templates: join(__dirname, '..', 'views'),\n  });\n  await app.listen(3000);\n}\nbootstrap();\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Performance (Fastify)</h3>\\n  <p>Under the hood, Nest makes use of\\n    <a href=\\\"https://expressjs.com/\\\" target=\\\"_blank\\\">Express</a>, but as mentioned already, provides compatibility with\\n    a wide range of other libraries, like e.g.\\n    <a href=\\\"https://github.com/fastify/fastify\\\" target=\\\"_blank\\\">Fastify</a>. How does it work?\\n    In fact, what Nest needs to use your favorite library, is a compatible adapter, that primarily proxies\\n    corresponding handlers to appropriate library-specific methods.\\n    Additionally, your library has to provide at least similar request-response cycle management as express.\\n  </p>\\n  <p>\\n    A <a href=\\\"https://github.com/fastify/fastify\\\" target=\\\"_blank\\\">Fastify</a> fits here very well because it solves\\n    design issues in a similar manner as express does.\\n    However, fastify is much <strong>faster</strong>, achieving almost two times better benchmarks results. The\\n    question, why Nest still uses express as a default HTTP provider then? Because express is widely-used, well-known,\\n    and has a huge set of compatible middleware.\\n  </p>\\n  <p>\\n    But we don't lock people in a single paradigm. We let them use whatever they need. Fastify is a better choice when\\n    you care about really good performance, that's why we provide a built-in <code>FastifyAdapter</code> that helps to\\n    integrate this library with Nest.\\n  </p>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly, we need to install required packages:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">{{ packages }}</code></pre>\\n  <h4>Adapter</h4>\\n  <p>\\n    Once fastify is installed, we can use a <code>FastifyAdapter</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ bootstrap }}</code></pre>\\n  If you're running your Nest instance inside of a <strong>docker container</strong> you will need to specify the host,\\n  like so:\\n  <pre><code class=\\\"language-typescript\\\">{{ docker }}</code></pre>\\n  <p>\\n    And that's all. Also, you are able to pass options into fastify constructor through <code>FastifyAdapter</code>\\n    constructor.\\n    Keep in mind that now, Nest uses fastify as an <strong>HTTP provider</strong>, meaning, each recipe that relays on\\n    express won't work anymore. You should rather use fastify equivalent packages.\\n  </p>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/10-fastify\\\">here</a>.\\n  </p>\\n</div>\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-performance',\n  templateUrl: './performance.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PerformanceComponent extends BasePageComponent {\n  get packages() {\n    return `\n$ npm i --save fastify fastify-formbody`;\n  }\n\n  get bootstrap() {\n    return `\nimport { NestFactory, FastifyAdapter } from '@nestjs/core';\nimport { ApplicationModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule, new FastifyAdapter());\n  await app.listen(3000);\n}\nbootstrap();`;\n  }\n\n  get docker() {\n    return `\nawait app.listen(3000, '0.0.0.0');\n`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Security</h3>\\n  <p>\\n    In this chapter you will learn some techniques that will allow you to increase the security of your applications.\\n  </p>\\n  <h4>Helmet</h4>\\n  <p>\\n    <a href=\\\"https://github.com/helmetjs/helmet\\\" target=\\\"blank\\\">Helmet</a> can help protect your app from some well-known\\n    web vulnerabilities by setting HTTP headers appropriately. Generally, Helmet is just a collection of 12 smaller middleware\\n    functions that set security-related HTTP headers (read <a href=\\\"https://github.com/helmetjs/helmet#how-it-works\\\" target=\\\"blank\\\">more</a>).\\n    Firstly, install the required package:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save helmet</code></pre>\\n  <p>\\n    Once the installation is completed, apply it as a global middleware.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\nimport * as helmet from 'helmet';\\n// somewhere in your initialization file\\napp.use(helmet());</code></pre>\\n  <h4>CORS</h4>\\n  <p>\\n    Cross-origin resource sharing (CORS) is a mechanism that allows resources to be requested from another domain. Under the\\n    hood, Nest makes use of <a href=\\\"https://github.com/expressjs/cors\\\" target=\\\"blank\\\">cors</a> package, that provides\\n    a bunch of options that you may customize based on your requirements. In order to enable CORS, you have to call <code>enableCors()</code>    method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ enableCors }}</code></pre>\\n  <p>\\n    Also, you can pass a configuration object as a parameter of this function. The available properties are exhaustively described\\n    in the official <a href=\\\"https://github.com/expressjs/cors\\\" target=\\\"blank\\\">cors</a> repository. A different way is\\n    to use a Nest options object:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ enableCorsOptions }}</code></pre>\\n  <p>\\n    Instead of passing a boolean value, you can use a cors configuration object as well (read <a href=\\\"https://github.com/expressjs/cors#configuration-options\\\"\\n      target=\\\"blank\\\">more</a>).\\n  </p>\\n  <h4>CSRF</h4>\\n  <p>\\n    Cross-site request forgery (known as CSRF or XSRF) is a type of malicious exploit of a website where <strong>unauthorized</strong>\\n    commands are transmitted from a user that the web application trusts. To mitigate this kind of attacks you can use the\\n    <a href=\\\"https://github.com/expressjs/csurf\\\" target=\\\"blank\\\">csurf</a> package. Firstly, install the required package:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save csurf</code></pre>\\n  <p>\\n    Once the installation is completed, apply it as a global middleware.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\nimport * as csurf from 'csurf';\\n// somewhere in your initialization file\\napp.use(csurf());</code></pre>\\n  <h4>Rate limiting</h4>\\n  <p>\\n    To protect your applications from brute-force attacks, you have to implement some kind of rate-limiting. Luckily, there is\\n    a bunch of various middleware available on the NPM already. One of them is <a href=\\\"https://github.com/nfriedly/express-rate-limit\\\"\\n      target=\\\"blank\\\">express-rate-limit</a>.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save express-rate-limit</code></pre>\\n  <p>\\n    Once the installation is completed, apply it as a global middleware.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n{{ expressRateLimit }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    If you work wtih <code>FastifyAdapter</code>, consider using <a href=\\\"https://github.com/fastify/fastify-rate-limit\\\"\\n      target=\\\"blank\\\">fastify-rate-limit</a> instead.\\n  </blockquote>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-securit',\n  templateUrl: './security.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SecurityComponent extends BasePageComponent {\n  get enableCors() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.enableCors();\nawait app.listen(3000);`;\n  }\n\n  get enableCorsOptions() {\n    return `\nconst app = await NestFactory.create(ApplicationModule, { cors: true });\nawait app.listen(3000);`;\n  }\n\n  get expressRateLimit() {\n    return `\nimport * as rateLimit from 'express-rate-limit';\n// somewhere in your initialization file\napp.use(rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100 // limit each IP to 100 requests per windowMs\n}));`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Serialization</h3>\\n  <p>\\n    Serializers provides clean abstraction layer towards <strong>data manipulation</strong> before sending the actual response.\\n    For instance, sensitive data like user's password should be always excluded from the eventual response. Furthermore,\\n    certain properties might require additional transformation, let's say, we don't want to send the whole database entity.\\n    Instead, we would like to pick only <code>id</code> and <code>name</code>. The rest should be automatically stripped.\\n    Unluckily, manually mapping all entities may bring a lot of confusedness.\\n  </p>\\n  <h4>Overview</h4>\\n  <p>\\n    In order to provide a straightforward way to carry out these operations, Nest comes with the <code>ClassSerializerInterceptor</code>    class.\\n    It uses <a href=\\\"https://github.com/typestack/class-transformer\\\" target=\\\"blank\\\">class-transformer</a> package to provide\\n    a declarative and extensible way of transforming objects. Basically, the <code>ClassSerializerInterceptor</code> takes\\n    the value returned from the method and call <code>classToPlain()</code> function from <a href=\\\"https://github.com/typestack/class-transformer\\\"\\n      target=\\\"blank\\\">class-transformer</a> package.\\n  </p>\\n  <h4>Exclude properties</h4>\\n  <p>\\n    Let's assume that we want to automatically exclude a <code>password</code> property from the following entity:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ userEntity }}</code></pre>\\n  <p>\\n    Then, return the instance of this class directly from the controller's method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ returnUserEntity }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    The <code>ClassSerializerInterceptor</code> is imported from <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    Now, when you call this endpoint, you'll receive a following response:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ response }}</code></pre>\\n  <h4>Expose properties</h4>\\n  <p>\\n    If you want to expose earlier precalculated property, simply use <code>@Expose()</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ expose }}</code></pre>\\n  <h4>Transform</h4>\\n  <p>\\n    You can perform additional data transformation using <code>@Transform()</code> decorator. For example, you want to pick\\n    a name of the <code>RoleEntity</code> instead of returning the whole object.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ transform }}</code></pre>\\n  <h4>Pass options</h4>\\n  <p>\\n    The transform options may vary depending on the certain factors. In order to override default settings, use <code>@SerializeOptions()</code>    decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ serializeOptions }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    The <code>@SerializeOptions()</code> decorator is imported from <code>@nestjs/common</code> package.\\n  </blockquote>\\n  <p>\\n    These opions will be passed as a second argument of the <code>classToPlain()</code> function.\\n  </p>\\n  <h4>Websockets & Microservices</h4>\\n  <p>\\n    All these guidelines cornern both WebSockets as well as microservices, regardless of transport method that is being used.\\n  </p>\\n  <h4>Learn more</h4>\\n  <p>\\n    In order to read more about available decorators, options, visit this <a href=\\\"https://github.com/typestack/class-transformer\\\"\\n      target=\\\"blank\\\">page</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-serialization',\n  templateUrl: './serialization.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SerializationComponent extends BasePageComponent {\n  get userEntity() {\n    return `\nimport { Exclude } from 'class-transformer';\n\nexport class UserEntity {\n  id: number;\n  firstName: string;\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  constructor(partial: Partial<UserEntity>) {\n    Object.assign(this, partial);\n  }\n}`;\n  }\n\n  get returnUserEntity() {\n    return `\n@UseInterceptors(ClassSerializerInterceptor)\n@Get()\nfindOne(): UserEntity {\n  return new UserEntity({\n    id: 1,\n    firstName: 'Kamil',\n    lastName: 'Mysliwiec',\n    password: 'password',\n  });\n}`;\n  }\n\n  get response() {\n    return `\n{\n  \"id\": 1,\n  \"firstName\": \"Kamil\",\n  \"lastName\": \"Mysliwiec\"\n}`;\n  }\n\n  get expose() {\n    return `\n@Expose()\nget fullName(): string {\n  return \\`\\${this.firstName} \\${this.lastName}\\`;\n}`;\n  }\n\n  get transform() {\n    return `\n@Transform(role => role.name)\nrole: RoleEntity;`;\n  }\n\n  get serializeOptions() {\n    return `\n@SerializeOptions({\n  excludePrefixes: ['_'],\n})\n@Get()\nfindOne(): UserEntity {\n  return {};\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Database (TypeORM)</h3>\\n  <p>\\n    In order to reduce a boilerplate necessary to start the adventure with any database, Nest comes with the ready to use <code>@nestjs/typeorm</code>    package.\\n    We selected <a href=\\\"https://github.com/typeorm/typeorm\\\" target=\\\"blank\\\">TypeORM</a> because it's definitely the most\\n    mature Object Relational Mapper (ORM) available so far. Since it's written in TypeScript, it works pretty well with the\\n    Nest framework.\\n  </p>\\n  <p>\\n    Firstly, we need to install all of the required dependencies:\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm install --save @nestjs/typeorm typeorm mysql</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Notice</strong> In this chapter we'll use a MySQL database, but <strong>TypeORM</strong> provides a support for\\n    a lot of different databases such as PostgreSQL, SQLite, and even MongoDB (NoSQL).\\n  </blockquote>\\n  <p>\\n    Once the installation process is completed, we can import the <code>TypeOrmModule</code> into the root <code>ApplicationModule</code>.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: importTypeOrmT.isJsActive }}\\n    <app-tabs #importTypeOrmT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ importTypeOrm }}</code></pre>\\n  <p>\\n    The <code>forRoot()</code> method accepts the same configuration object as <code>createConnection()</code> from the <a\\n      href=\\\"https://github.com/typeorm/typeorm\\\" target=\\\"blank\\\">TypeORM</a> package. Futhermore, instead of passing anything\\n    to the <code>forRoot()</code>, we can create an <code>ormconfig.json</code> file in the project root directory.\\n  </p>\\n  <span class=\\\"filename\\\">ormconfig.json</span>\\n  <pre><code class=\\\"language-json\\\">{{ ormconfig }}</code></pre>\\n  <p>\\n    Then, we can simply leave the parenthesis empty:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: importTypeOrmEmptyT.isJsActive }}\\n    <app-tabs #importTypeOrmEmptyT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ importTypeOrmEmpty }}</code></pre>\\n  <p>\\n    Afterward, the <code>Connection</code> and <code>EntityManager</code> will be available to inject across entire project\\n    (without importing any module elsewhere), for example, in this way:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'app.module' | extension: importTypeOrmEmptyT.isJsActive }}\\n    <app-tabs #importTypeOrmEmptyT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"importTypeOrmEmptyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ importConnectionInstance }}</code></pre>\\n  <pre [class.hide]=\\\"!importTypeOrmEmptyT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ importConnectionInstanceJs }}</code></pre>\\n  <h4>Repository pattern</h4>\\n  <p>\\n    The <a href=\\\"https://github.com/typeorm/typeorm\\\" target=\\\"blank\\\">TypeORM</a> supports the repository design pattern, so\\n    each entity has its own Repository. These repositories can be obtained from the database connection.\\n  </p>\\n  <p>\\n    Firstly, we need at least one entity. We're gonna reuse the <code>Photo</code> entity from the offical documentation.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'photo/photo.entity' | extension: photoEntityT.isJsActive }}\\n    <app-tabs #photoEntityT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ photoEntity }}</code></pre>\\n  <p>\\n    The <code>Photo</code> entity belongs to the <code>photo</code> directory. This directory represents the <code>PhotoModule</code>.\\n    It's your decision where you gonna keep your model files. From our point of view, the best way's to hold them nearly\\n    their <strong>domain</strong>, in the corresponding module directory.\\n  </p>\\n  <p>\\n    Let's have a look at the <code>PhotoModule</code>:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'photo/photo.module' | extension: photoModuleT.isJsActive }}\\n    <app-tabs #photoModuleT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ photoModule }}</code></pre>\\n  <p>\\n    This module uses <code>forFeature()</code> method to define which repositories shall be registered in the current scope.\\n    Thanks to that we can inject the <code>PhotoRepository</code> to the <code>PhotoService</code> using the <code>@InjectRepository()</code>    decorator:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'photo/photo.service' | extension: photoServiceT.isJsActive }}\\n    <app-tabs #photoServiceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"photoServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ photoService }}</code></pre>\\n  <pre [class.hide]=\\\"!photoServiceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ photoServiceJs }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> Don't forget to import the <code>PhotoModule</code> into the root <code>ApplicationModule</code>.\\n  </blockquote>\\n  <h4>Multiple databases</h4>\\n  <p>\\n    Some of your projects may require multiple database connections. Fortunately, this can also be achieved with this module.\\n    To work with multiple connections, the first thing to do is to create those connections. In this case, the connection\\n    naming becomes <strong>mandatory</strong>.\\n  </p>\\n  <p>\\n    Say you have a <code>Person</code> entity and a an <code>Album</code> entity, each stored in their own database.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ multipleConnections }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> If you don't set any <code>name</code> for a connection, its name is set to <code>default</code>.\\n    Please note that you shouldn't have multiple connections without a name, or with the same name, otherwise they simply\\n    get overridden.\\n  </blockquote>\\n  <p>\\n    At this point, you have each of your <code>Photo</code>, <code>Person</code> and <code>Album</code> entities registered\\n    in their own connection. With this setup, you have to tell the <code>TypeOrmModule.forFeature()</code> function and the\\n    <code>@InjectRepository()</code> decorator which connection should be used. If you do not pass any connection name, the\\n    <code>default</code> connection is used.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ forFeatureWithConnection }}</code></pre>\\n  <p>\\n    You can also inject the <code>Connection</code> or <code>EntityManager</code> for a given connection:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ injectConnectionAndEntityManager }}</code></pre>\\n  <h4>Testing</h4>\\n  <p>\\n    When it comes to unit test our application, we usually want to avoid any database connection, making our test suits independent\\n    and their execution process quick as possible. But our classes might depend on repositories that are pulled from the\\n    connection instance. What's then? The solution is to create fake repositories. In order to achieve that, we should set\\n    up <a routerLink=\\\"/fundamentals/custom-providers\\\">custom providers</a>. In fact, each registered repository is represented\\n    by <code>EntityNameRepository</code> token, where <code>EntityName</code> is a name of your entity class.\\n  </p>\\n  <p>\\n    The <code>@nestjs/typeorm</code> package exposes <code>getRepositoryToken()</code> function that returns prepared token\\n    based on a given entity.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ mockRepository }}</code></pre>\\n  <p>\\n    Now a hardcoded <code>mockRepository</code> will be used as a <code>PhotoRepository</code>. Whenever any provider asks\\n    for <code>PhotoRepository</code> using an <code>@InjectRepository()</code> decorator, Nest will use a registered <code>mockRepository</code>    object.\\n  </p>\\n  <h4>Custom repository</h4>\\n  <p>\\n    TypeORM provides feature called <strong>custom repositories</strong>. To learn more about it, visit <a href=\\\"http://typeorm.io/#/custom-repository\\\"\\n      target=\\\"blank\\\">this</a> page. Basically, custom repository allows you extending a base repository class, and enrich it\\n    with a couple of special methods.\\n  </p>\\n  <p>\\n    In order to create your custom repository, use <code>@EntityRepository()</code> decorator and extend <code>Repository</code>    class.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ customRepository }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong>\\n    Both <code>@EntityRepository()</code> and <code>Repository</code> are exposed from <code>typeorm</code> package.\\n  </blockquote>\\n  <p>\\n    Once the class is created, the next step is to hand over the instantiation responsibility to Nest. For this, we have to pass\\n    <code>AuthorRepository</code> class to the <code>TypeOrm.forFeature()</code> method.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ registerCustomRepository }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong>\\n    Even though <code>AuthorRepository</code> is passed, it's not enough to create a custom repository yet. The corresponding\\n    entity class, <code>Author</code> in this case, is required as well.\\n  </blockquote>\\n  <p>\\n    Afterward, simply inject the repository using <code>@InjectRepository()</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ injectCustomRepository }}</code></pre>\\n  <h4>Async configuration</h4>\\n  <p>\\n    Quite often you might want to asynchronously pass your module options instead of passing them beforehand. In such case, use\\n    <code>forRootAsync()</code> method, that provides a couple of various ways to deal with async data.\\n  </p>\\n  <p>\\n    First possible approach is to use a factory function:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfiguration }}</code></pre>\\n  <p>\\n    Obviously, our factory behaves like every other one (might be <code>async</code> and is able to inject dependencies through\\n    <code>inject</code>).\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationFactoryAsync }}</code></pre>\\n  <p>\\n    Alternatively, you are able to use class instead of a factory.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClass }}</code></pre>\\n  <p>\\n    Above construction will instantiate <code>TypeOrmConfigService</code> inside <code>TypeOrmModule</code> and will leverage\\n    it to create options object. The <code>TypeOrmConfigService</code> has to implement <code>TypeOrmOptionsFactory</code>    interface.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationClassBody }}</code></pre>\\n  <p>\\n    In order to prevent the creation of <code>TypeOrmConfigService</code> inside <code>TypeOrmModule</code> and use a provider\\n    imported from a different module, you can use the <code>useExisting</code> syntax.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ asyncConfigurationExisting }}</code></pre>\\n  <p>\\n    It works the same as <code>useClass</code> with one critical difference - <code>TypeOrmModule</code> will lookup imported\\n    modules to reuse already created <code>ConfigService</code>, instead of instantiating it on its own.\\n  </p>\\n  <h4>Example</h4>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/05-sql-typeorm\\\" target=\\\"blank\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-sql',\n  templateUrl: './sql.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SqlComponent extends BasePageComponent {\n  get importTypeOrm() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'root',\n      database: 'test',\n      entities: [__dirname + '/**/*.entity{.ts,.js}'],\n      synchronize: true,\n    }),\n  ],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get ormconfig() {\n    return `\n{\n  \"type\": \"mysql\",\n  \"host\": \"localhost\",\n  \"port\": 3306,\n  \"username\": \"root\",\n  \"password\": \"root\",\n  \"database\": \"test\",\n  \"entities\": [\"src/**/**.entity{.ts,.js}\"],\n  \"synchronize\": true\n}`;\n  }\n\n  get importTypeOrmEmpty() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forRoot()],\n})\nexport class ApplicationModule {}`;\n  }\n\n  get photoEntity() {\n    return `\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Photo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 500 })\n  name: string;\n\n  @Column('text')\n  description: string;\n\n  @Column()\n  filename: string;\n\n  @Column('int')\n  views: number;\n\n  @Column()\n  isPublished: boolean;\n}`;\n  }\n\n  get importConnectionInstance() {\n    return `\nimport { Connection } from 'typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forRoot(), PhotoModule],\n})\nexport class ApplicationModule {\n  constructor(private readonly connection: Connection) {}\n}`;\n  }\n\n  get importConnectionInstanceJs() {\n    return `\nimport { Connection } from 'typeorm';\n\n@Dependencies(Connection)\n@Module({\n  imports: [TypeOrmModule.forRoot(), PhotoModule],\n})\nexport class ApplicationModule {\n  constructor(connection) {\n    this.connection = connection;\n  }\n}`;\n  }\n\n  get photoModule() {\n    return `\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PhotoService } from './photo.service';\nimport { PhotoController } from './photo.controller';\nimport { Photo } from './photo.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Photo])],\n  providers: [PhotoService],\n  controllers: [PhotoController],\n})\nexport class PhotoModule {}`;\n  }\n\n  get photoService() {\n    return `\nimport { Injectable, Inject } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Photo } from './photo.entity';\n\n@Injectable()\nexport class PhotoService {\n  constructor(\n    @InjectRepository(Photo)\n    private readonly photoRepository: Repository<Photo>,\n  ) {}\n\n  async findAll(): Promise<Photo[]> {\n    return await this.photoRepository.find();\n  }\n}`;\n  }\n\n  get photoServiceJs() {\n    return `\nimport { Injectable, Dependencies } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Photo } from './photo.entity';\n\n@Injectable()\n@Dependencies(InjectRepository(Photo))\nexport class PhotoService {\n  constructor(photoRepository) {\n    this.photoRepository = photoRepository;\n  }\n\n  async findAll() {\n    return await this.photoRepository.find();\n  }\n}`;\n  }\n\n  get multipleConnections() {\n    return `\nconst defaultOptions = {\n  type: 'postgres',\n  port: 5432,\n  username: 'user',\n  password: 'password',\n  database: 'db',\n  synchronize: true,\n};\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      ...defaultOptions,\n      host: 'photo_db_host',\n      entities: [Photo],\n    }),\n    TypeOrmModule.forRoot({\n      ...defaultOptions,\n      name: 'personsConnection',\n      host:  'person_db_host',\n      entities: [Person],\n    }),\n    TypeOrmModule.forRoot({\n      ...defaultOptions,\n      name: 'albumsConnection',\n      host:  'album_db_host',\n      entities: [Album],\n    })\n  ]\n})\nexport class ApplicationModule {}`;\n  }\n\n  get forFeatureWithConnection() {\n    return `\n@Module({\n  TypeOrmModule.forFeature([Photo]),\n  TypeOrmModule.forFeature([Person], 'personsConnection'),\n  TypeOrmModule.forFeature([Album], 'albumsConnection')\n})\nexport class ApplicationModule {}`;\n  }\n\n  get injectConnectionAndEntityManager() {\n    return `\n@Injectable()\nexport class PersonService {\n  constructor(\n    @InjectConnection('personsConnection')\n    private readonly connection: Connection,\n    @InjectEntityManager('personsConnection')\n    private readonly entityManager: EntityManager\n  ) {}\n}`;\n  }\n\n  get mockRepository() {\n    return `\n@Module({\n  providers: [\n    PhotoService,\n    {\n      provide: getRepositoryToken(Photo),\n      useValue: mockRepository,\n    },\n  ],\n})\nexport class PhotoModule {}`;\n  }\n\n  get customRepository() {\n    return `\n@EntityRepository(Author)\nexport class AuthorRepository extends Repository<Author> {}`;\n  }\n\n  get registerCustomRepository() {\n    return `\n@Module({\n  imports: [TypeOrmModule.forFeature([Author, AuthorRepository])],\n  controller: [AuthorController],\n  providers: [AuthorService],\n})\nexport class AuthorModule {}`;\n  }\n\n  get injectCustomRepository() {\n    return `\n@Injectable()\nexport class AuthorService {\n  constructor(\n    @InjectRepository(AuthorRepository)\n    private readonly authorRepository: AuthorRepository,\n  ) {}\n}`;\n  }\n\n  get asyncConfiguration() {\n    return `\nTypeOrmModule.forRootAsync({\n  useFactory: () => ({\n    type: 'mysql',\n    host: 'localhost',\n    port: 3306,\n    username: 'root',\n    password: 'root',\n    database: 'test',\n    entities: [__dirname + '/**/*.entity{.ts,.js}'],\n    synchronize: true,\n  }),\n})`;\n  }\n\n  get asyncConfigurationFactoryAsync() {\n    return `\nTypeOrmModule.forRootAsync({\n  imports: [ConfigModule],\n  useFactory: async (configService: ConfigService) => ({\n    type: 'mysql',\n    host: configService.getString('HOST'),\n    port: configService.getString('PORT'),\n    username: configService.getString('USERNAME'),\n    password: configService.getString('PASSWORD'),\n    database: configService.getString('DATABASE'),\n    entities: [__dirname + '/**/*.entity{.ts,.js}'],\n    synchronize: true,\n  }),\n  inject: [ConfigService],\n})`;\n  }\n\n  get asyncConfigurationClass() {\n    return `\nTypeOrmModule.forRootAsync({\n  useClass: TypeOrmConfigService,\n})`;\n  }\n\n  get asyncConfigurationClassBody() {\n    return `\n@Injectable()\nclass TypeOrmConfigService implements TypeOrmOptionsFactory {\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'root',\n      database: 'test',\n      entities: [__dirname + '/**/*.entity{.ts,.js}'],\n      synchronize: true,\n    };\n  }\n}`;\n  }\n\n  get asyncConfigurationExisting() {\n    return `\nTypeOrmModule.forRootAsync({\n  imports: [ConfigModule],\n  useExisting: ConfigService,\n})`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Validation</h3>\\n  <p>\\n    The validation is an essential functionality of any existing web application. To automatically validate incoming requests,\\n    we leverage <a href=\\\"https://github.com/typestack/class-validator\\\" target=\\\"blank\\\">class-validator</a> package which\\n    built-in <code>ValidationPipe</code> makes use of underneath. The <code>ValidationPipe</code> provides a convenient method\\n    to validate incoming client payloads with a variety of powerful validation rules.\\n  </p>\\n  <h4>Overview</h4>\\n  <p>\\n    In <a routerLink=\\\"/pipes\\\">Pipes</a> chapter, we went through the process of building a simplified validation pipe. To\\n    better understand what we're doing under the hood, we heavily recommend to read this article. Here, we'll mainly focus\\n    on the real use-cases instead.\\n  </p>\\n  <h4>Auto-validation</h4>\\n  <p>\\n    For the sake of this tutorial, we'll bind <code>ValidationPipe</code> to the whole application, thus, all endpoints will\\n    be automatically protected from the incorrect data.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ autoValidation }}</code></pre>\\n  <p>\\n    To test our pipe, let's create a basic endpoint.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ createEndpoint }}</code></pre>\\n  <p>\\n    Then, add a few validation rules in our <code>CreateCatDto</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ createCatDto }}</code></pre>\\n  <p>\\n    Now, when someone requests our endpoint with an invalid <code>email</code>, the application would respond\\n    with a <code>400 Bad Request</code> code and the following response body.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ badRequest }}</code></pre>\\n  <p>\\n    Obviously, the response body is not a sole use-case for the<code>ValidationPipe</code>. Imagine, that we would like to\\n    accept\\n    <code>:id</code> in the endpoint path. Only numbers shall be valid though. This is pretty simple as well.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ findOneEndpoint }}</code></pre>\\n  <p>\\n    And <code>FindOneParams</code> looks like below.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ findOneParams }}</code></pre>\\n  <h4>Disable detailed errors</h4>\\n  <p>\\n    Error messages help a lot in order to comprehend what was wrong with the data sent through the network. However, in some\\n    production environments, you might want to disable detailed errors.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ disableErrors }}</code></pre>\\n  <p>\\n    Now, error messages won't be populated to the end user.\\n  </p>\\n  <h4>Stripping properties</h4>\\n  <p>\\n    Quite frequently, we would like only predefined (whitelisted) properties to be passed on. For instance, if we expect <code>email</code>    and\\n    <code>password</code> properties, when someone sends <code>age</code>, this property should be stripped and not available\\n    in the DTO. To enable such behavior, set <code>whitelist</code> to <code>true</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ strippingProperties }}</code></pre>\\n  <p>\\n    This setting will enable auto-stripping of non-whitelisted (without any decorator on top of them) properties. However, if\\n    you want to stop the request processing entirely, and return an error response to the user, use <code>forbidNonWhitelisted</code>    instead.\\n  </p>\\n  <h4>Auto payload transforming</h4>\\n  <p>\\n    The <code>ValidationPipe</code> doesn't automatically transform your payloads to the corresponding DTO classes. If you\\n    take a look at either <code>createCatDto</code> or <code>findOneParams</code> in your controller methods, you will notice\\n    that they're not actual instances of these classes. To enable auto-transformation, set <code>transform</code> to <code>true</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ transforming }}</code></pre>\\n  <h4>Websockets & Microservices</h4>\\n  <p>\\n    All these guidelines cornern both WebSockets as well as microservices, regardless of transport method that is being used.\\n  </p>\\n  <h4>Learn more</h4>\\n  <p>\\n    In order to read more about custom validators, error messages, and available decorators, visit this <a href=\\\"https://github.com/typestack/class-validator\\\"\\n      target=\\\"blank\\\">page</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-validation',\n  templateUrl: './validation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ValidationComponent extends BasePageComponent {\n  get autoValidation() {\n    return `\nasync function bootstrap() {\n  const app = await NestFactory.create(ApplicationModule);\n  app.useGlobalPipes(new ValidationPipe());\n  await app.listen(3000);\n}\nbootstrap();`;\n  }\n\n  get createEndpoint() {\n    return `\n@Post()\ncreate(@Body() createUserDto: CreateUserDto) {\n  return 'This action adds a new user';\n}`;\n  }\n\n  get createCatDto() {\n    return `\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}`;\n  }\n\n  get badRequest() {\n    return `\n{\n  \"statusCode\": 400,\n  \"error\": \"Bad Request\",\n  \"message\": [\n      {\n          \"target\": {},\n          \"property\": \"email\",\n          \"children\": [],\n          \"constraints\": {\n              \"isEmail\": \"email must be an email\"\n          }\n      }\n  ]\n}`;\n  }\n\n  get findOneEndpoint() {\n    return `\n@Get(':id')\nfindOne(@Param() params: FindOneParams) {\n  return 'This action returns a user';\n}`;\n  }\n\n  get findOneParams() {\n    return `\nimport { IsNumberString } from 'class-validator';\n\nexport class FindOneParams {\n  @IsNumberString()\n  id: number;\n}`;\n  }\n\n  get disableErrors() {\n    return `\napp.useGlobalPipes(new ValidationPipe({\n  disableErrorMessages: true,\n}));`;\n  }\n\n  get strippingProperties() {\n    return `\napp.useGlobalPipes(new ValidationPipe({\n  whitelist: true,\n}));`;\n  }\n\n  get transforming() {\n    return `\napp.useGlobalPipes(new ValidationPipe({\n  transform: true,\n}));`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Adapters</h3>\\n  <p>\\n    The WebSockets module is based on <a href=\\\"https://github.com/socketio/socket.io\\\" target=\\\"blank\\\">socket.io</a>\\n    package, but you can bring your own library (or even a native implementation), by making use of <code>WebSocketAdapter</code>    interface.\\n    This interface forces to implement few methods described in the following table:\\n  </p>\\n  <table>\\n    <tr>\\n      <td><code>create</code></td>\\n      <td>Creates a socket instance based on passed arguments</td>\\n    </tr>\\n    <tr>\\n      <td><code>bindClientConnect</code></td>\\n      <td>Binds the client connection event</td>\\n    </tr>\\n    <tr>\\n      <td><code>bindClientDisconnect</code></td>\\n      <td>Binds the client disconnection event (optional*)</td>\\n    </tr>\\n    <tr>\\n      <td><code>bindMessageHandlers</code></td>\\n      <td>Binds the incoming message to the corresponding message handler</td>\\n    </tr>\\n    <tr>\\n      <td><code>close</code></td>\\n      <td>Terminates a server instance</td>\\n    </tr>\\n  </table>\\n  <h4>Extend socket.io</h4>\\n  <p>\\n    The socket.io package is wrapped in an <code>IoAdapter</code> class. What if you would like to enhance the basic functionality\\n    of the adapter? For instance, your technical requirements require a capability to broadcast events across multiple load-balanced\\n    instances of your web service. For this, you can extend <code>IoAdapter</code> and override a single method which responsibility\\n    is to instantiate new socket.io servers. But first of all, let's install the required package.\\n  </p>\\n  <pre><code class=\\\"language-bash\\\">\\n$ npm i --save socket.io-redis</code></pre>\\n  <p>\\n    Once the package is installed, we can create a <code>RedisIoAdapter</code> class.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ extendIoAdapter }}</code></pre>\\n  <p>\\n    Afterward, simply switch to your newly created Redis adapter.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ setupRedisAdapter }}</code></pre>\\n  <h4>Ws library</h4>\\n  <p>\\n    Another built-in adapter is a <code>WsAdapter</code> which in turn acts like a proxy between the framework and integrate\\n    blazing fast and thoroughly tested <a href=\\\"https://github.com/websockets/ws\\\" target=\\\"blank\\\">ws</a> library. This adapter\\n    is fully compatible with native browser WebSockets and is far faster than socket.io package. Unluckily, it has significantly\\n    fewer functionalities available out-of-the-box. In some cases, you may just don't necesserily need them though.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ setupAdapter }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>WsAdapter</code> is imported from <code>@nestjs/websockets</code>.\\n  </blockquote>\\n  <h4>Advanced (custom adapter)</h4>\\n  <p>\\n    For demonstration purposes, we are going to handwritten integrate the <a href=\\\"https://github.com/websockets/ws\\\" target=\\\"blank\\\">ws</a>\\n    library. As mentioned, the adapter for this library is already created and is exposed from the <code>@nestjs/websockets</code>    package\\n    as a <code>WsAdapter</code> class. Here is how the simplified implementation could potentialy looks like:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'ws-adapter' | extension: wsAdapterT.isJsActive }}\\n    <app-tabs #wsAdapterT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"wsAdapterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ wsAdapter }}</code></pre>\\n  <pre [class.hide]=\\\"!wsAdapterT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ wsAdapterJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> When you want to take advantage of <a href=\\\"https://github.com/websockets/ws\\\" target=\\\"blank\\\">ws</a>\\n    library, use built-in <code>WsAdapter</code> instead of creating your own one.\\n  </blockquote>\\n  <p>\\n    Then, we can set up a custom adapter using <code>useWebSocketAdapter()</code> method:\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'main' | extension: setupAdapterT.isJsActive }}\\n    <app-tabs #setupAdapterT></app-tabs>\\n  </span>\\n  <pre><code class=\\\"language-typescript\\\">{{ setupAdapter }}</code></pre>\\n  <h4>Example</h4>\\n  <p>\\n    A working example that uses <code>WsAdapter</code> is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/16-gateways-ws\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-adapter',\n  templateUrl: './adapter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AdapterComponent extends BasePageComponent {\n  get wsAdapter() {\n    return `\nimport * as WebSocket from 'ws';\nimport { WebSocketAdapter, MessageMappingProperties, INestApplicationContext } from '@nestjs/common';\nimport { Observable, fromEvent, empty } from 'rxjs';\nimport { mergeMap, filter, tap } from 'rxjs/operators';\n\nexport class WsAdapter implements WebSocketAdapter {\n  constructor(private readonly app: INestApplicationContext) {}\n\n  create(port: number, options: any = {}): any {\n    return new ws.Server({ port, ...options });\n  }\n\n  bindClientConnect(server, callback: (...args) => void) {\n    server.on('connection', callback);\n  }\n\n  bindMessageHandlers(\n    client: WebSocket,\n    handlers: MessageMappingProperties[],\n    process: (data: any) => Observable<any>,\n  ) {\n    fromEvent(client, 'message')\n      .pipe(\n        mergeMap(data => this.bindMessageHandler(data, handlers, process)),\n        filter(result => result),\n      )\n      .subscribe(response => client.send(JSON.stringify(response)));\n  }\n\n  bindMessageHandler(\n    buffer,\n    handlers: MessageMappingProperties[],\n    process: (data: any) => Observable<any>,\n  ): Observable<any> {\n    const message = JSON.parse(buffer.data);\n    const messageHandler = handlers.find(\n      handler => handler.message === message.event,\n    );\n    if (!messageHandler) {\n      return empty;\n    }\n    return process(messageHandler.callback(message.data));\n  }\n\n  close(server) {\n    server.close();\n  }\n}`;\n  }\n\n  get wsAdapterJs() {\n    return `\nimport * as WebSocket from 'ws';\nimport { mergeMap, filter, tap } from 'rxjs/operators';\nimport { fromEvent, empty } from 'rxjs';\n\nexport class WsAdapter {\n  constructor(app) {\n    this.app = app;\n  }\n\n  create(port, options = {}) {\n    return new ws.Server({ port, ...options });\n  }\n\n  bindClientConnect(server, callback) {\n    server.on('connection', callback);\n  }\n\n  bindMessageHandlers(client, handlers, process) {\n    fromEvent(client, 'message')\n      .pipe(\n        mergeMap(data => this.bindMessageHandler(data, handlers, process)),\n        filter(result => !!result),\n      )\n      .subscribe(response => client.send(JSON.stringify(response)));\n  }\n\n  bindMessageHandler(buffer, handlers, process) {\n    const message = JSON.parse(buffer.data);\n    const messageHandler = handlers.find(\n      handler => handler.message === message.event,\n    );\n    if (!messageHandler) {\n      return empty;\n    }\n    return process(messageHandler.callback(message.data));\n  }\n\n  close(server) {\n    server.close();\n  }\n}`;\n  }\n\n  get setupAdapter() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.useWebSocketAdapter(new WsAdapter(app));`;\n  }\n\n  get setupRedisAdapter() {\n    return `\nconst app = await NestFactory.create(ApplicationModule);\napp.useWebSocketAdapter(new RedisIoAdapter(app));`;\n  }\n\n  get extendIoAdapter() {\n    return `\nimport { IoAdapter } from '@nestjs/websockets';\nimport * as redisIoAdapter from 'socket.io-redis';\n\nconst redisAdapter = redisIoAdapter({ host: 'localhost', port: 6379 });\n\nexport class RedisIoAdapter extends IoAdapter {\n  createIOServer(port: number, options?: any): any {\n    const server = super.createIOServer(port, options);\n    server.adapter(redisAdapter);\n    return server;\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Exception filters</h3>\\n  <p>\\n    The only difference between <a routerLink=\\\"/exception-filters\\\">HTTP exception filter</a> layer and corresponding web\\n    sockets layer is that instead of throwing <code>HttpException</code>, you should rather use <code>WsException</code>.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ wsException }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>WsException</code> class is imported from the <code>@nestjs/websockets</code> package.\\n  </blockquote>\\n  <p>\\n    Nest will handle thrown exception and as a result, emits the <code>exception</code> message with the following structure:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ exceptionResponse }}</code></pre>\\n  <h4>Filters</h4>\\n  <p>\\n    The <strong>custom filters</strong> feature is supported as well and works equivalently. Here is an example that makes\\n    use of a manually instantiated <strong>method-scoped</strong> filter (class-scoped works either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n  <h4>Inheritance</h4>\\n  <p>\\n    Typically, you'll create fully customized exception filters crafted to fulfill your application requirements. There might\\n    be use-cases though when you would like to reuse an already implemented, <strong>core exception filter</strong>,\\n    and override the behavior based on certain factors.\\n  </p>\\n  <p>\\n    In order to delegate exception processing to the base filter, you need to extend <code>BaseWsExceptionFilter</code> and\\n    call inherited <code>catch()</code> method. Besides, <code>HttpServer</code> reference has to be injected and passed\\n    to the\\n    <code>super()</code> call.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    <app-tabs #inheritanceT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"inheritanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inheritance }}</code></pre>\\n  <pre [class.hide]=\\\"!inheritanceT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ inheritanceJs }}</code></pre>\\n  <p>\\n    Obviously, you should enhance above implementation with your tailored <strong>business</strong> logic (e.g. add various\\n    conditions).\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-exception-filters',\n  templateUrl: './exception-filters.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WsExceptionFiltersComponent extends BasePageComponent {\n  get wsException() {\n    return `\nthrow new WsException('Invalid credentials.');`;\n  }\n\n  get exceptionResponse() {\n    return `\n{\n  status: 'error',\n  message: 'Invalid credentials.'\n}`;\n  }\n\n  get example() {\n    return `\n@UseFilters(new WsExceptionFilter())\n@SubscribeMessage('events')\nonEvent(client, data: any): WsResponse<any> {\n  const event = 'events';\n  return { event, data };\n}`;\n  }\n\n  get inheritance() {\n    return `\nimport { Catch, ArgumentsHost } from '@nestjs/common';\nimport { BaseWsExceptionFilter } from '@nestjs/websockets';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseWsExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    super.catch(exception, host);\n  }\n}`;\n  }\n\n  get inheritanceJs() {\n    return `\nimport { Catch } from '@nestjs/common';\nimport { BaseWsExceptionFilter } from '@nestjs/websockets';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseWsExceptionFilter {\n  catch(exception, host) {\n    super.catch(exception, host);\n  }\n}`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Gateways</h3>\\n  <p>\\n    Gateway is a class annotated with <code>@WebSocketGateway()</code> decorator. Gateways, by default, make use of\\n    <a href=\\\"https://github.com/socketio/socket.io\\\" target=\\\"blank\\\">socket.io</a> package under the hood, but also, provide\\n    compatibility with a wide range of other libraries, including native web sockets implementation, read more\\n    <a routerLink=\\\"/websockets/adapter\\\">here</a>.\\n  </p>\\n  <figure><img src=\\\"/assets/Gateways_1.png\\\" /></figure>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Hint</strong> Gateway behaves same as a simple <strong>provider</strong>, therefore it can effortlessly inject\\n    dependencies through constructor. Also, gateway might be injected by other classes (providers and controllers) as well.\\n  </blockquote>\\n  <h4>Installation</h4>\\n  <p>\\n    Firstly, we need to install the required package:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">\\n$ npm i --save @nestjs/websockets</code></pre>\\n  <h4>Overview</h4>\\n  <p>\\n    In general, each gateway is listening to the same port as <strong>HTTP server</strong> is running on, unless your app\\n    is not a web application, or you have changed the port manually. We can change this behavior by passing an argument to\\n    the <code>@WebSocketGateway(81)</code> decorator where <code>81</code> is a chosen port number. Additionally, you can\\n    set a <a href=\\\"https://socket.io/docs/rooms-and-namespaces/\\\" target=\\\"blank\\\">namespace</a> used by this gateway with the\\n    following construction:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ namespace }}</code></pre>\\n  <blockquote>\\n    <strong>Warning</strong> The gateway won't start until you put it inside the <code>providers</code> array.\\n  </blockquote>\\n  <p>\\n    The <code>namespace</code> is not a sole available option. You can pass any other property that is mentioned <a href=\\\"https://socket.io/docs/server-api/\\\"\\n      target=\\\"blank\\\">here</a>. Those properties will be passed to the socket constructor during the instantiation process.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ moreOptions }}</code></pre>\\n  <p>\\n    Alright, the gateway is listening now, but we are not subscribing to the incoming messages so far. Let's create a handler\\n    that will subscribe to the <code>events</code> messages and respond to the user with the exact same data.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'events.gateway' | extension: subscribeEventsAckT.isJsActive }}\\n    <app-tabs #subscribeEventsAckT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"subscribeEventsAckT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ subscribeEventsAck }}</code></pre>\\n  <pre [class.hide]=\\\"!subscribeEventsAckT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ subscribeEventsAckJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>@SubscribeMessage()</code> decorator is imported from <code>@nestjs/websockets</code>    package.\\n  </blockquote>\\n  <p>\\n    The <code>onEvent()</code> function takes two arguments. First one is a library-specific <a href=\\\"https://socket.io/docs/server-api/#socket\\\"\\n      target=\\\"blank\\\">socket instance</a> and the second one is the data received from the client. Once we get the message,\\n    we send an acknowledgment with the same data that someone has sent over the network. Also, it is possible to emit messages\\n    using a library-specific approach, for example, by making use of <code>client.emit()</code> method. However, in this\\n    case, you aren't able to use interceptors. If you don't want to respond to the user, just don't return anything (or explicitly\\n    return \\\"falsy\\\" value, e.g. <code>undefined</code>).\\n  </p>\\n  <p>\\n    Now when the client emits a message in the following manner:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ clientEmit }}</code></pre>\\n  <p>\\n    The <code>onEvent()</code> method will be executed. In order to listen for messages emitted from within above handler,\\n    the client has to attach a corresponding acknowledgment's listener:\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ ackListener }}</code></pre>\\n  <h4>Multiple responses</h4>\\n  <p>\\n    The acknowledgment is dispatched only once. Furthermore, it is not supported by native WebSockets implementation. To solve\\n    this limitation, you may return an object which consist of two properties. The <code>event</code> which is a name\\n    of the emitted event and the <code>data</code> that has to be forwarded to the client.\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'events.gateway' | extension: subscribeEventsT.isJsActive }}\\n    <app-tabs #subscribeEventsT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"subscribeEventsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ subscribeEvents }}</code></pre>\\n  <pre [class.hide]=\\\"!subscribeEventsT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ subscribeEventsJs }}</code></pre>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>WsResponse</code> interface is imported from <code>@nestjs/websockets</code> package.\\n  </blockquote>\\n  <p>\\n    In order to listen for the incoming response(s), the client has to apply another event listener.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ clientListen }}</code></pre>\\n  <h4>Asynchronous responses</h4>\\n  <p>\\n    Each message handler can be either synchronous or <strong>asynchronous</strong> (<code>async</code>), thereby you're\\n    able to return the <code>Promise</code>. Moreover, you can return the <a href=\\\"https://github.com/reactivex/rxjs\\\" target=\\\"blank\\\">Rx</a>&nbsp;\\n    <code>Observable</code>, which means that you can return multiple values (they will be emitted until the stream is completed).\\n  </p>\\n  <span class=\\\"filename\\\">\\n    {{ 'events.gateway' | extension: streamingT.isJsActive }}\\n    <app-tabs #streamingT></app-tabs>\\n  </span>\\n  <pre [class.hide]=\\\"streamingT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ streaming }}</code></pre>\\n  <pre [class.hide]=\\\"!streamingT.isJsActive\\\"><code class=\\\"language-typescript\\\">{{ streamingJs }}</code></pre>\\n  <p>\\n    The above message handler will respond <strong>3 times</strong> (sequentially, with each item from the <code>response</code>    array).\\n  </p>\\n  <h4>Lifecycle hooks</h4>\\n  <p>\\n    There are 3 useful lifecycle hooks. All of them have corresponding interfaces and are described in the following table:\\n  </p>\\n  <table>\\n    <tr>\\n      <td>\\n        <code>OnGatewayInit</code>\\n      </td>\\n      <td>\\n        Forces to implement the <code>afterInit()</code> method. Takes library-specific server instance as an argument (and\\n        spreads the rest if required).\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>OnGatewayConnection</code>\\n      </td>\\n      <td>\\n        Forces to implement the <code>handleConnection()</code> method. Takes library-specific client socket instance as\\n        an argument.\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        <code>OnGatewayDisconnect</code>\\n      </td>\\n      <td>\\n        Forces to implement the <code>handleDisconnect()</code> method. Takes library-specific client socket instance as\\n        an argument.\\n      </td>\\n    </tr>\\n  </table>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> Each lifecycle interface is exposed from <code>@nestjs/websockets</code> package.\\n  </blockquote>\\n  <h4>Server</h4>\\n  <p>\\n    Occasionally, you may want to have a direct access to the native, <strong>library-specific</strong> server instance.\\n    The reference to this object is passed as an argument to the <code>afterInit()</code> method (<code>OnGatewayInit</code>    interface).\\n    The second approach is to make use of <code>@WebSocketServer()</code> decorator.\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ webSocketServer }}</code></pre>\\n  <blockquote class=\\\"warning\\\">\\n    <strong>Notice</strong> The <code>@WebSocketServer()</code> decorator is imported from the <code>@nestjs/websockets</code>    package.\\n  </blockquote>\\n  <p>\\n    Nest will automatically assign the server instance to this property when it's ready to use.\\n  </p>\\n  <h4>Example</h4>\\n  <p>\\n    A working example is available <a href=\\\"https://github.com/nestjs/nest/tree/master/sample/02-gateways\\\">here</a>.\\n  </p>\\n</div>\"","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-gateways',\n  templateUrl: './gateways.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GatewaysComponent extends BasePageComponent {\n  get namespace() {\n    return `\n@WebSocketGateway(81, { namespace: 'events' })`;\n  }\n\n  get moreOptions() {\n    return `\n@WebSocketGateway(81, { transports: ['websocket'] })`;\n  }\n\n  get subscribeEventsAck() {\n    return `\n@SubscribeMessage('events')\nonEvent(client, data: string): string {\n  return data;\n}`;\n  }\n\n  get subscribeEventsAckJs() {\n    return `\n@SubscribeMessage('events')\nonEvent(client, data) {\n  return data;\n}`;\n  }\n\n  get subscribeEvents() {\n    return `\n@SubscribeMessage('events')\nonEvent(client, data: any): WsResponse<any> {\n  const event = 'events';\n  return { event, data };\n}`;\n  }\n\n  get subscribeEventsJs() {\n    return `\n@SubscribeMessage('events')\nonEvent(client, data) {\n  const event = 'events';\n  return { event, data };\n}`;\n  }\n\n  get streamingJs() {\n    return `\n@SubscribeMessage('events')\nonEvent(client, data) {\n  const event = 'events';\n  const response = [1, 2, 3];\n\n  return from(response).pipe(\n    map(data => ({ event, data })),\n  );\n}`;\n  }\n\n  get streaming() {\n    return `\n@SubscribeMessage('events')\nonEvent(client, data: any): Observable<WsResponse<number>> {\n  const event = 'events';\n  const response = [1, 2, 3];\n\n  return from(response).pipe(\n    map(data => ({ event, data })),\n  );\n}`;\n  }\n\n  get webSocketServer() {\n    return `\n@WebSocketServer() server;`;\n  }\n\n  get clientEmit() {\n    return `\nsocket.emit('events', { name: 'Nest' });`;\n  }\n\n  get clientListen() {\n    return `\nsocket.on('events', (data) => console.log(data));`;\n  }\n\n  get ackListener() {\n    return `\nsocket.emit('events', { name: 'Nest' }, (data) => console.log(data));`;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Guards</h3>\\n  <p>\\n    There is no difference between web sockets <strong>guards</strong> and the <a routerLink=\\\"/guards\\\">regular guards</a>.\\n    The only thing you should be aware of is that instead of throwing <code>HttpException</code>, you should use the <code>WsException</code>.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>WsException</code> class is exposed from <code>@nestjs/websockets</code> package.\\n  </blockquote>\\n  <h4>Binding guards</h4>\\n  <p>\\n    Here is an example that makes use of a <strong>method-scoped</strong> guard (class-scoped works either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-guards',\n  templateUrl: './guards.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WsGuardsComponent extends BasePageComponent {\n  get example() {\n    return `\n@UseGuards(AuthGuard)\n@SubscribeMessage('events')\nonEvent(client, data: any): WsResponse<any> {\n  const event = 'events';\n  return { event, data };\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Interceptors</h3>\\n  <p>\\n    There is no difference between <a routerLink=\\\"/interceptors\\\">regular interceptors</a> and the web sockets interceptors.\\n    Here is an example that makes use of a manually instantiated <strong>method-scoped</strong> filter (class-scoped works\\n    either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-interceptors',\n  templateUrl: './interceptors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WsInterceptorsComponent extends BasePageComponent {\n  get example() {\n    return `\n@UseInterceptors(new TransformInterceptor())\n@SubscribeMessage('events')\nonEvent(client, data: any): WsResponse<any> {\n  const event = 'events';\n  return { event, data };\n}`;\n  }\n}","module.exports = \"<div class=\\\"content\\\">\\n  <h3>Pipes</h3>\\n  <p>\\n    There is no difference between web sockets <strong>pipes</strong> and the <a routerLink=\\\"/pipes\\\">regular pipes</a>. The\\n    only thing you should be aware of is that instead of throwing <code>HttpException</code>, you should use the <code>WsException</code>.\\n    Besides, all pipes will be applied only to the <code>data</code> parameter.\\n  </p>\\n  <blockquote class=\\\"info\\\">\\n    <strong>Hint</strong> The <code>WsException</code> class is exposed from <code>@nestjs/websockets</code> package.\\n  </blockquote>\\n  <h4>Binding pipes</h4>\\n  <p>\\n    Here is an example that makes use of a manually instantiated <strong>method-scoped</strong> pipe (class-scoped works\\n    either):\\n  </p>\\n  <pre><code class=\\\"language-typescript\\\">{{ example }}</code></pre>\\n</div>\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BasePageComponent } from '../../page/page.component';\n\n@Component({\n  selector: 'app-pipes',\n  templateUrl: './pipes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WsPipesComponent extends BasePageComponent {\n  get example() {\n    return `\n@UsePipes(new ValidationPipe())\n@SubscribeMessage('events')\nonEvent(client, data: any): WsResponse<any> {\n  const event = 'events';\n  return { event, data };\n}`;\n  }\n}","module.exports = \"<div class=\\\"toc-wrapper\\\" #tocWrapper>\\n  <ul>\\n    <li *ngFor=\\\"let item of headings; trackBy: trackById; let index = index\\\" [attr.id]=\\\"item.id\\\" [class.current]=\\\"index === activeId\\\"\\n      (click)=\\\"navigateToAnchor(item.elementRef)\\\">\\n      {{ item.textContent }}</li>\\n  </ul>\\n</div>\"","module.exports = \".transition {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing {\\n  box-sizing: border-box; }\\n\\n.toc-wrapper {\\n  width: 250px;\\n  padding-left: 45px;\\n  box-sizing: border-box;\\n  position: fixed;\\n  top: 90px;\\n  right: 20px; }\\n\\n.toc-wrapper ul {\\n    position: relative;\\n    padding: 0; }\\n\\n.toc-wrapper ul::before {\\n      content: '';\\n      position: absolute;\\n      left: 0;\\n      top: 10px;\\n      bottom: 10px;\\n      width: 2px;\\n      background: #efefef; }\\n\\n.toc-wrapper li {\\n    display: block;\\n    position: relative;\\n    padding-left: 30px;\\n    font-size: 14px;\\n    line-height: 24px;\\n    margin-bottom: 6px;\\n    cursor: pointer; }\\n\\n.toc-wrapper li:hover {\\n      color: #ed2945; }\\n\\n.toc-wrapper .current {\\n    color: #ed2945;\\n    font-weight: 600; }\\n\\n.toc-wrapper .current::before {\\n      background: #ed2945;\\n      border-color: #ed2945;\\n      border-width: 1px;\\n      left: -3px; }\\n\\n.toc-wrapper li::before {\\n    border-radius: 50%;\\n    -webkit-transform: translateY(-50%);\\n    transform: translateY(-50%);\\n    content: '';\\n    background: #fdfdfd;\\n    border: 2px solid #efefef;\\n    left: -4px;\\n    width: 6px;\\n    height: 6px;\\n    top: 50%;\\n    display: inline-block;\\n    position: absolute; }\\n\\n.toc-wrapper li:last-of-type::before {\\n    top: auto;\\n    bottom: 0; }\\n\"","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { fromEvent, Subscription, timer } from 'rxjs';\nimport { debounceTime, take } from 'rxjs/operators';\n\ninterface HeadingElement {\n  elementRef: HTMLElement;\n  textContent: string;\n  offsetTop: number;\n}\n\n@Component({\n  selector: 'app-toc',\n  templateUrl: './toc.component.html',\n  styleUrls: ['./toc.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TocComponent implements OnInit, OnDestroy, OnChanges {\n  @Input()\n  contentReference: HTMLElement;\n  @Input()\n  headings: HeadingElement[] = [];\n  activeId: number;\n  @ViewChild('tocWrapper')\n  tocWrapper: ElementRef<HTMLElement>;\n\n  isPositionFixed = true;\n\n  private readonly scrollTopOffset = 100;\n  private readonly scrollDebounceTime = 10;\n  private scrollSubscription: Subscription;\n  private timerSubscription: Subscription;\n  private maxTopOffset: number;\n\n  constructor(\n    private readonly cd: ChangeDetectorRef,\n    private readonly renderer: Renderer2,\n  ) {}\n\n  ngOnInit() {\n    this.scrollSubscription = fromEvent(window, 'scroll')\n      .pipe(debounceTime(this.scrollDebounceTime))\n      .subscribe(_ => {\n        this.findCurrentHeading();\n        this.checkViewportBoundaries();\n      });\n\n    this.init();\n    this.updateOffsetTop();\n  }\n\n  ngOnChanges() {\n    this.init();\n    this.updateOffsetTop();\n  }\n\n  ngOnDestroy() {\n    this.scrollSubscription && this.scrollSubscription.unsubscribe();\n    this.timerSubscription && this.timerSubscription.unsubscribe();\n  }\n\n  init() {\n    this.lookupHeadings();\n    this.findCurrentHeading();\n    this.findMaxTopOffset();\n  }\n\n  lookupHeadings() {\n    if (!this.contentReference) {\n      return;\n    }\n    const headings = this.contentReference.querySelectorAll('h3, h4');\n    this.headings = Array.from(headings).map((item: any) => ({\n      offsetTop: item.offsetTop,\n      textContent: item.textContent,\n      elementRef: item as HTMLElement,\n    }));\n  }\n\n  updateOffsetTop() {\n    // need to recalculate max position as well as headings offset\n    // due to the Prisma HTML markup transformation (style code snippets)\n    this.timerSubscription = timer(600, 200)\n      .pipe(take(3))\n      .subscribe(() => this.init());\n  }\n\n  findCurrentHeading() {\n    const marginOffset = 15;\n    const selectHeading = (i: number) => {\n      const performChangeDetection = this.activeId !== i;\n      this.activeId = i;\n      performChangeDetection && this.cd.markForCheck();\n    };\n    for (let i = 0; i < this.headings.length; i++) {\n      if (this.headings.length - 1 === i) {\n        return selectHeading(i);\n      } else if (\n        this.headings[i + 1].offsetTop >=\n        window.pageYOffset + this.scrollTopOffset + marginOffset\n      ) {\n        return selectHeading(i);\n      }\n    }\n  }\n\n  findMaxTopOffset() {\n    if (!this.tocWrapper) {\n      return;\n    }\n    const { nativeElement } = this.tocWrapper;\n    const pageWrapperRef = document.querySelector('.page-wrapper');\n    if (!pageWrapperRef || !nativeElement) {\n      return;\n    }\n    const pageWrapperHeight = pageWrapperRef.scrollHeight;\n    const tocWrapperHeight = nativeElement.scrollHeight;\n    this.maxTopOffset =\n      pageWrapperHeight - tocWrapperHeight - this.scrollTopOffset;\n  }\n\n  navigateToAnchor(elementRef: HTMLElement) {\n    if (elementRef) {\n      elementRef.scrollIntoView(true);\n      window.scrollBy(0, -this.scrollTopOffset);\n      this.findCurrentHeading();\n    }\n  }\n\n  checkViewportBoundaries() {\n    this.isPositionFixed = this.maxTopOffset > window.pageYOffset;\n    const { nativeElement } = this.tocWrapper;\n\n    if (!this.isPositionFixed) {\n      const initialTopOffset = 150;\n\n      this.renderer.setStyle(\n        nativeElement,\n        'top',\n        this.maxTopOffset + initialTopOffset + 'px',\n      );\n      this.renderer.setStyle(nativeElement, 'position', 'absolute');\n    } else {\n      this.renderer.removeStyle(nativeElement, 'top');\n      this.renderer.removeStyle(nativeElement, 'position');\n    }\n  }\n\n  trackById(index, item) {\n    return item.id;\n  }\n}\n","module.exports = \"<div class=\\\"tabs-wrapper\\\">\\n  <span class=\\\"tab\\\" [class.active]=\\\"isJsActive\\\" (click)=\\\"isJsActive = true\\\">\\n    JS\\n  </span>\\n  <span class=\\\"tab active\\\" [class.active]=\\\"!isJsActive\\\" (click)=\\\"isJsActive = false\\\">\\n    TS\\n  </span>\\n</div>\"","module.exports = \".transition {\\n  transition: all 200ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n.transition-slow {\\n  transition: all 520ms cubic-bezier(0.7, 0, 0.3, 1); }\\n\\n/* CLEARFIX */\\n\\n.clearfix {\\n  *zoom: 1; }\\n\\n.clearfix:before, .clearfix:after {\\n    content: \\\" \\\";\\n    display: table; }\\n\\n.clearfix:after {\\n    clear: both; }\\n\\n.center-element {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%) translateY(-50%);\\n  transform: translateX(-50%) translateY(-50%); }\\n\\n.center-left {\\n  position: absolute;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n  transform: translateX(-50%); }\\n\\n.center-top {\\n  position: absolute;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%);\\n  transform: translateY(-50%); }\\n\\n.box-sizing {\\n  box-sizing: border-box; }\\n\\n.tabs-wrapper {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  /*@include media(medium) {\\n    position: static;\\n    margin: 15px -20px -15px;\\n    \\n    .tab {\\n      float: none;\\n      display: inline-block;\\n      margin: 0 !important;\\n    }\\n  }*/ }\\n\\n.tab {\\n  color: #b1b1b1;\\n  cursor: pointer;\\n  margin: 0;\\n  float: right;\\n  font-weight: 600;\\n  height: 100%;\\n  padding: 12px 20px;\\n  box-sizing: border-box;\\n  -webkit-box-sizing: border-box; }\\n\\n.tab:hover:not(.active) {\\n    color: #efefef; }\\n\\n.tab.active {\\n    display: none; }\\n\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsComponent {\n  public isJsActive = false;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'extension'\n})\nexport class ExtensionPipe implements PipeTransform {\n  transform(value: any, args?: any): any {\n    return !args ? `${value}.ts` : `${value}.js`;\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}